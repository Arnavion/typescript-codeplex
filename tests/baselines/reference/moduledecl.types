=== tests/cases/compiler/moduledecl.ts ===
Line 7 col 16 IdentifierName "a" = c.a
Line 11 col 15 IdentifierName "a" = a
Line 13 col 16 IdentifierName "a" = a
Line 21 col 16 IdentifierName "s" = any
Line 22 col 16 IdentifierName "n" = any
Line 23 col 16 IdentifierName "ns" = any
Line 34 col 13 IdentifierName "Object" = Object
Line 35 col 9 IdentifierName "n" = any
Line 35 col 21 IdentifierName "c1" = m0.c1
Line 38 col 16 IdentifierName "a" = a
Line 39 col 16 IdentifierName "b" = b
Line 41 col 16 IdentifierName "c" = c
Line 50 col 23 IdentifierName "s" = any
Line 51 col 23 IdentifierName "n" = any
Line 52 col 23 IdentifierName "ns" = any
Line 65 col 20 IdentifierName "x" = number
Line 65 col 31 IdentifierName "y" = string
Line 66 col 28 IdentifierName "n" = any
Line 66 col 38 IdentifierName "n2" = number
Line 66 col 58 IdentifierName "n3" = any
Line 66 col 70 IdentifierName "n4" = string
Line 71 col 13 IdentifierName "Object" = Object
Line 72 col 9 IdentifierName "n" = any
Line 72 col 21 IdentifierName "c1" = m1.c1
Line 75 col 16 IdentifierName "a" = a
Line 76 col 16 IdentifierName "b" = b
Line 78 col 16 IdentifierName "c" = c
Line 159 col 19 ObjectCreationExpression "new C2_private()" = exportTests.C2_private
Line 159 col 23 IdentifierName "C2_private" = new() => exportTests.C2_private
Line 161 col 30 IdentifierName "arg" = any
Line 161 col 35 IdentifierName "C2_private" = exportTests.C2_private
Line 164 col 19 ObjectCreationExpression "new C2_private()" = exportTests.C2_private
Line 164 col 23 IdentifierName "C2_private" = new() => exportTests.C2_private
Line 167 col 19 ObjectCreationExpression "new C1_public()" = exportTests.C1_public
Line 167 col 23 IdentifierName "C1_public" = new() => exportTests.C1_public
Line 169 col 28 IdentifierName "arg" = any
Line 169 col 33 IdentifierName "C1_public" = exportTests.C1_public
Line 172 col 19 ObjectCreationExpression "new C1_public()" = exportTests.C1_public
Line 172 col 23 IdentifierName "C1_public" = new() => exportTests.C1_public
Line 182 col 21 IdentifierName "C" = mAmbient.C
Line 183 col 14 IdentifierName "C" = mAmbient.C
Line 185 col 0 IdentifierName "x" = number
Line 186 col 0 IdentifierName "y" = mAmbient.C
Line 186 col 11 IdentifierName "C" = mAmbient.C
Line 189 col 0 IdentifierName "x" = mAmbient.e
Line 190 col 0 IdentifierName "y" = mAmbient.e
Line 191 col 0 IdentifierName "z" = mAmbient.e
Line 199 col 24 IdentifierName "C" = mAmbient.m3.C
Line 200 col 18 IdentifierName "C" = mAmbient.m3.C
Line 202 col 0 IdentifierName "x" = number
Line 203 col 0 IdentifierName "y" = mAmbient.m3.C
Line 203 col 15 IdentifierName "C" = mAmbient.m3.C
Line 206 col 0 IdentifierName "x" = mAmbient.m3.e
Line 207 col 0 IdentifierName "y" = mAmbient.m3.e
Line 208 col 0 IdentifierName "z" = mAmbient.m3.e
Line 214 col 11 InvocationExpression "mAmbient.foo()" = mAmbient.C
Line 214 col 11 MemberAccessExpression "mAmbient.foo" = () => mAmbient.C
Line 214 col 11 IdentifierName "mAmbient" = { C: new() => mAmbient.C; foo(): mAmbient.C; aVar: mAmbient.C; e: { x: mAmbient.e; y: mAmbient.e; z: mAmbient.e; [x: number]: string; }; m3: { C: new() => mAmbient.m3.C; foo(): mAmbient.m3.C; aVar: mAmbient.m3.C; e: { x: mAmbient.m3.e; y: mAmbient.m3.e; z: mAmbient.m3.e; [x: number]: string; }; }; }
Line 214 col 20 IdentifierName "foo" = () => mAmbient.C
Line 217 col 11 ObjectCreationExpression "new mAmbient.C()" = mAmbient.C
Line 217 col 15 MemberAccessExpression "mAmbient.C" = new() => mAmbient.C
Line 217 col 15 IdentifierName "mAmbient" = { C: new() => mAmbient.C; foo(): mAmbient.C; aVar: mAmbient.C; e: { x: mAmbient.e; y: mAmbient.e; z: mAmbient.e; [x: number]: string; }; m3: { C: new() => mAmbient.m3.C; foo(): mAmbient.m3.C; aVar: mAmbient.m3.C; e: { x: mAmbient.m3.e; y: mAmbient.m3.e; z: mAmbient.m3.e; [x: number]: string; }; }; }
Line 217 col 24 IdentifierName "C" = new() => mAmbient.C
Line 218 col 11 MemberAccessExpression "mAmbient.aVar" = mAmbient.C
Line 218 col 11 IdentifierName "mAmbient" = { C: new() => mAmbient.C; foo(): mAmbient.C; aVar: mAmbient.C; e: { x: mAmbient.e; y: mAmbient.e; z: mAmbient.e; [x: number]: string; }; m3: { C: new() => mAmbient.m3.C; foo(): mAmbient.m3.C; aVar: mAmbient.m3.C; e: { x: mAmbient.m3.e; y: mAmbient.m3.e; z: mAmbient.m3.e; [x: number]: string; }; }; }
Line 218 col 20 IdentifierName "aVar" = mAmbient.C
Line 223 col 11 InvocationExpression "mAmbient.m3.foo()" = mAmbient.m3.C
Line 223 col 11 MemberAccessExpression "mAmbient.m3.foo" = () => mAmbient.m3.C
Line 223 col 11 MemberAccessExpression "mAmbient.m3" = { C: new() => mAmbient.m3.C; foo(): mAmbient.m3.C; aVar: mAmbient.m3.C; e: { x: mAmbient.m3.e; y: mAmbient.m3.e; z: mAmbient.m3.e; [x: number]: string; }; }
Line 223 col 11 IdentifierName "mAmbient" = { C: new() => mAmbient.C; foo(): mAmbient.C; aVar: mAmbient.C; e: { x: mAmbient.e; y: mAmbient.e; z: mAmbient.e; [x: number]: string; }; m3: { C: new() => mAmbient.m3.C; foo(): mAmbient.m3.C; aVar: mAmbient.m3.C; e: { x: mAmbient.m3.e; y: mAmbient.m3.e; z: mAmbient.m3.e; [x: number]: string; }; }; }
Line 223 col 20 IdentifierName "m3" = { C: new() => mAmbient.m3.C; foo(): mAmbient.m3.C; aVar: mAmbient.m3.C; e: { x: mAmbient.m3.e; y: mAmbient.m3.e; z: mAmbient.m3.e; [x: number]: string; }; }
Line 223 col 23 IdentifierName "foo" = () => mAmbient.m3.C
Line 226 col 13 ObjectCreationExpression "new mAmbient.m3.C()" = mAmbient.m3.C
Line 226 col 17 MemberAccessExpression "mAmbient.m3.C" = new() => mAmbient.m3.C
Line 226 col 17 MemberAccessExpression "mAmbient.m3" = { C: new() => mAmbient.m3.C; foo(): mAmbient.m3.C; aVar: mAmbient.m3.C; e: { x: mAmbient.m3.e; y: mAmbient.m3.e; z: mAmbient.m3.e; [x: number]: string; }; }
Line 226 col 17 IdentifierName "mAmbient" = { C: new() => mAmbient.C; foo(): mAmbient.C; aVar: mAmbient.C; e: { x: mAmbient.e; y: mAmbient.e; z: mAmbient.e; [x: number]: string; }; m3: { C: new() => mAmbient.m3.C; foo(): mAmbient.m3.C; aVar: mAmbient.m3.C; e: { x: mAmbient.m3.e; y: mAmbient.m3.e; z: mAmbient.m3.e; [x: number]: string; }; }; }
Line 226 col 26 IdentifierName "m3" = { C: new() => mAmbient.m3.C; foo(): mAmbient.m3.C; aVar: mAmbient.m3.C; e: { x: mAmbient.m3.e; y: mAmbient.m3.e; z: mAmbient.m3.e; [x: number]: string; }; }
Line 226 col 29 IdentifierName "C" = new() => mAmbient.m3.C
Line 227 col 13 MemberAccessExpression "mAmbient.m3.aVar" = mAmbient.m3.C
Line 227 col 13 MemberAccessExpression "mAmbient.m3" = { C: new() => mAmbient.m3.C; foo(): mAmbient.m3.C; aVar: mAmbient.m3.C; e: { x: mAmbient.m3.e; y: mAmbient.m3.e; z: mAmbient.m3.e; [x: number]: string; }; }
Line 227 col 13 IdentifierName "mAmbient" = { C: new() => mAmbient.C; foo(): mAmbient.C; aVar: mAmbient.C; e: { x: mAmbient.e; y: mAmbient.e; z: mAmbient.e; [x: number]: string; }; m3: { C: new() => mAmbient.m3.C; foo(): mAmbient.m3.C; aVar: mAmbient.m3.C; e: { x: mAmbient.m3.e; y: mAmbient.m3.e; z: mAmbient.m3.e; [x: number]: string; }; }; }
Line 227 col 22 IdentifierName "m3" = { C: new() => mAmbient.m3.C; foo(): mAmbient.m3.C; aVar: mAmbient.m3.C; e: { x: mAmbient.m3.e; y: mAmbient.m3.e; z: mAmbient.m3.e; [x: number]: string; }; }
Line 227 col 25 IdentifierName "aVar" = mAmbient.m3.C