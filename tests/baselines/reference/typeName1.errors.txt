0.ts line 9 col 5: warning TS2012: Cannot convert 'number' to '{ f(s: string): numberf(n: number): string; }':
	Type 'Number' is missing property 'f' from type '{ f(s: string): numberf(n: number): string; }'.
0.ts line 10 col 5: warning TS2012: Cannot convert 'number' to '{ f(s: string): number; }':
	Type 'Number' is missing property 'f' from type '{ f(s: string): number; }'.
0.ts line 11 col 5: warning TS2012: Cannot convert 'number' to '{ (s: string): number; (n: number): string; }':
	Type '{ (s: string): number; (n: number): string; }' requires a call signature, but type 'Number' lacks one.
0.ts line 12 col 5: warning TS2012: Cannot convert 'number' to '{ x: any; y: any; z: number; f(n: number): stringf(s: string): number; }':
	Type 'Number' is missing property 'x' from type '{ x: any; y: any; z: number; f(n: number): stringf(s: string): number; }'.
0.ts line 13 col 5: warning TS2012: Cannot convert 'number' to '{ x: any; y: any; z: number; f(n: number): stringf(s: string): number; (s: string): number; (n: number): string; }':
	Type 'Number' is missing property 'x' from type '{ x: any; y: any; z: number; f(n: number): stringf(s: string): number; (s: string): number; (n: number): string; }'.
0.ts line 14 col 5: warning TS2012: Cannot convert 'number' to '{ z: number; f: { (n: number): string; (s: string): number; }; }':
	Type 'Number' is missing property 'z' from type '{ z: number; f: { (n: number): string; (s: string): number; }; }'.
0.ts line 15 col 5: warning TS2012: Cannot convert 'number' to '(s: string) => boolean':
	Type '(s: string) => boolean' requires a call signature, but type 'Number' lacks one.
0.ts line 16 col 5: warning TS2012: Cannot convert 'number' to '{ z: I; (): boolean; [s: string]: { x: any; y: any; }; [n: number]: { x: any; y: any; }; }':
	Type 'Number' is missing property 'z' from type '{ z: I; (): boolean; [s: string]: { x: any; y: any; }; [n: number]: { x: any; y: any; }; }'.
0.ts line 17 col 5: warning TS2012: Cannot convert 'number' to 'I':
	Type 'Number' is missing property 'k' from type 'I'.
0.ts line 18 col 5: warning TS2012: Cannot convert 'number' to 'I[][][][]':
	Type 'Number' is missing property 'concat' from type 'I[][][][]'.
0.ts line 19 col 5: warning TS2012: Cannot convert 'number' to '{ z: I; x: boolean; }[][]':
	Type 'Number' is missing property 'concat' from type '{ z: I; x: boolean; }[][]'.
0.ts line 20 col 5: warning TS2012: Cannot convert 'number' to '{ z: I; x: boolean; y: (s: string) => boolean; w: { z: I; (): boolean; [s: string]: { x: any; y: any; }; [n: number]: { x: any; y: any; }; }; }[][]':
	Type 'Number' is missing property 'concat' from type '{ z: I; x: boolean; y: (s: string) => boolean; w: { z: I; (): boolean; [s: string]: { x: any; y: any; }; [n: number]: { x: any; y: any; }; }; }[][]'.
0.ts line 21 col 5: warning TS2012: Cannot convert 'number' to '{ x: string; w: { y: number; }; (): {}; new(): number; new(n: number): number; }':
	Type 'Number' is missing property 'x' from type '{ x: string; w: { y: number; }; (): {}; new(): number; new(n: number): number; }'.
0.ts line 22 col 5: warning TS2012: Cannot convert 'number' to '{ f(x: number): boolean; p: any; q: any; (): string; }':
	Type 'Number' is missing property 'f' from type '{ f(x: number): boolean; p: any; q: any; (): string; }'.
0.ts line 23 col 5: warning TS2011: Cannot convert '{ zeek: number; new(): C; }' to 'number'.
