<<<<<<< HEAD
widenedTypes.ts line 1 col 1: error TS2120: The left-hand side of an 'instanceof' expression must be of type 'any', an object type or a type parameter.
widenedTypes.ts line 4 col 1: error TS2118: The left-hand side of an 'in' expression must be of types 'any', 'string' or 'number'.
widenedTypes.ts line 5 col 7: error TS2119: The right-hand side of an 'in' expression must be of type 'any', an object type or a type parameter.
widenedTypes.ts line 7 col 15: error TS2117: The right-hand side of a 'for...in' statement must be of type 'any', an object type or a type parameter.
widenedTypes.ts line 10 col 1: error TS2011: Cannot convert 'string' to 'number'.
widenedTypes.ts line 18 col 1: error TS2011: Cannot convert 'string' to 'number'.
widenedTypes.ts line 24 col 5: error TS2012: Cannot convert '{}[]' to 'string[]':
=======
widenedTypes.ts(1,1): error TS2120: The left-hand side of an 'instanceof' expression must be of type 'any', an object type or a type parameter.
widenedTypes.ts(4,1): error TS2118: The left-hand side of an 'in' expression must be of types 'any', 'string' or 'number'.
widenedTypes.ts(5,7): error TS2119: The right-hand side of an 'in' expression must be of type 'any', an object type or a type parameter.
widenedTypes.ts(7,15): error TS2117: The right-hand side of a 'for...in' statement must be of type 'any', an object type or a type parameter.
widenedTypes.ts(10,1): error TS2011: Cannot convert 'string' to 'number'.
widenedTypes.ts(13,5): error TS2011: Cannot convert 'number' to 'undefined'.
widenedTypes.ts(14,1): error TS2011: Cannot convert 'number' to 'undefined'.
widenedTypes.ts(18,1): error TS2011: Cannot convert 'string' to 'number'.
widenedTypes.ts(21,5): error TS2012: Cannot convert '{ x: string; }' to '{ x: undefined; }':
	Types of property 'x' of types '{ x: string; }' and '{ x: undefined; }' are incompatible.
widenedTypes.ts(24,5): error TS2012: Cannot convert '{}[]' to 'string[]':
>>>>>>> Unify how we emit diagnostics in both the compiler and hte test harnesses.
	Types of property 'concat' of types '{}[]' and 'string[]' are incompatible:
		Call signatures of types '{ <U extends T[]>(...items: U[]): {}[]; (...items: {}[]): {}[]; }' and '{ <U extends T[]>(...items: U[]): string[]; (...items: string[]): string[]; }' are incompatible:
			Types of property 'pop' of types '{}[]' and 'string[]' are incompatible:
				Call signatures of types '() => {}' and '() => string' are incompatible.
<<<<<<< HEAD
widenedTypes.ts line 25 col 5: error TS2012: Cannot convert '{ x: number; y: any; [x: string]: {}; }' to '{ [x: string]: string; }':
	Index signatures of types '{ x: number; y: any; [x: string]: {}; }' and '{ [x: string]: string; }' are incompatible.
=======
>>>>>>> Unify how we emit diagnostics in both the compiler and hte test harnesses.
