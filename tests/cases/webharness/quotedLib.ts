var libString = "/* *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved. \nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0  \n \nTHIS CODE IS PROVIDED *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE, \nMERCHANTABLITY OR NON-INFRINGEMENT. \n \nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n/// <reference no-default-lib=\"true\"/>\n\n////////////////\n/// ECMAScript APIs\n////////////////\n\ndeclare var NaN: number;\ndeclare var Infinity: number;\n\n/**\n  * Evaluates JavaScript code and executes it. \n  * @param x A String value that contains valid JavaScript code.\n  */\ndeclare function eval(x: string): any;\n\n/**\n  * Converts A string to an integer.\n  * @param s A string to convert into a number.\n  * @param radix A value between 2 and 36 that specifies the base of the number in numString. \n  * If this argument is not supplied, strings with a prefix of \'0x\' are considered hexadecimal.\n  * All other strings are considered decimal.\n  */\ndeclare function parseInt(s: string, radix?: number): number;\n\n/**\n  * Converts a string to a floating-point number. \n  * @param string A string that contains a floating-point number. \n  */\ndeclare function parseFloat(string: string): number;\n\n/**\n  * Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number). \n  * @param number A numeric value.\n  */\ndeclare function isNaN(number: number): bool;\n\n/** \n  * Determines whether a supplied number is finite.\n  * @param number Any numeric value.\n  */\ndeclare function isFinite(number: number): bool;\n\n/**\n  * Gets the unencoded version of an encoded Uniform Resource Identifier (URI).\n  * @param encodedURI A value representing an encoded URI.\n  */\ndeclare function decodeURI(encodedURI: string): string;\n\n/**\n  * Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).\n  * @param encodedURIComponent A value representing an encoded URI component.\n  */\ndeclare function decodeURIComponent(encodedURIComponent: string): string;\n\n/** \n  * Encodes a text string as a valid Uniform Resource Identifier (URI)\n  * @param uri A value representing an encoded URI.\n  */ \ndeclare function encodeURI(uri: string): string;\n\n/**\n  * Encodes a text string as a valid component of a Uniform Resource Identifier (URI).\n  * @param uriComponent A value representing an encoded URI component.\n  */\ndeclare function encodeURIComponent(uriComponent: string): string;\n\ninterface PropertyDescriptor {\n    configurable?: bool;\n    enumerable?: bool;\n    value?: any;\n    writable?: bool;\n    get?(): any;\n    set?(v: any): void;\n}\n\ninterface PropertyDescriptorMap {\n    [s: string]: PropertyDescriptor;\n}\n\ninterface Object {\n    /** Returns a string representation of an object. */\n    toString(): string;\n\n    /** Returns a date converted to a string using the current locale. */\n    toLocaleString(): string;\n\n    /** Returns the primitive value of the specified object. */\n    valueOf(): Object;\n\n    /**\n      * Determines whether an object has a property with the specified name. \n      * @param v A property name.\n      */\n    hasOwnProperty(v: string): bool;\n\n    /**\n      * Determines whether an object exists in another object\'s prototype chain. \n      * @param v Another object whose prototype chain is to be checked.\n      */\n    isPrototypeOf(v: Object): bool;\n\n    /** \n      * Determines whether a specified property is enumerable.\n      * @param v A property name.\n      */\n    propertyIsEnumerable(v: string): bool;\n\n    [s: string]: any;\n}\n\n/**\n  * Provides functionality common to all JavaScript objects.\n  */\ndeclare var Object: {\n    new (value?: any): Object;\n    (): any;\n    (value: any): any;\n\n    /** A reference to the prototype for a class of objects. */\n    prototype: Object;\n\n    /** \n      * Returns the prototype of an object. \n      * @param o The object that references the prototype.\n      */\n    getPrototypeOf(o: any): any;\n\n    /**\n      * Gets the own property descriptor of the specified object. \n      * An own property descriptor is one that is defined directly on the object and is not inherited from the object\'s prototype. \n      * @param o Object that contains the property.\n      * @param p Name of the property.\n    */\n    getOwnPropertyDescriptor(o: any, p: string): PropertyDescriptor;\n\n    /** \n      * Returns the names of the own properties of an object. The own properties of an object are those that are defined directly \n      * on that object, and are not inherited from the object\'s prototype. The properties of an object include both fields (objects) and functions.\n      * @param o Object that contains the own properties.\n      */\n    getOwnPropertyNames(o: any): string[];\n\n    /** \n      * Creates an object that has the specified prototype, and that optionally contains specified properties.\n      * @param o Object to use as a prototype. May be null\n      * @param properties JavaScript object that contains one or more property descriptors. \n      */\n    create(o: any, properties?: PropertyDescriptorMap): any;\n\n    /**\n      * Adds a property to an object, or modifies attributes of an existing property. \n      * @param o Object on which to add or modify the property. This can be a native JavaScript object (that is, a user-defined object or a built in object) or a DOM object.\n      * @param p The property name.\n      * @param attributes Descriptor for the property. It can be for a data property or an accessor property.\n      */\n    defineProperty(o: any, p: string, attributes: PropertyDescriptor): any;\n\n    /**\n      * Adds one or more properties to an object, and/or modifies attributes of existing properties. \n      * @param o Object on which to add or modify the properties. This can be a native JavaScript object or a DOM object.\n      * @param properties JavaScript object that contains one or more descriptor objects. Each descriptor object describes a data property or an accessor property.\n      */\n    defineProperties(o: any, properties: PropertyDescriptorMap): any;\n\n    /**\n      * Prevents the modification of attributes of existing properties, and prevents the addition of new properties.\n      * @param o Object on which to lock the attributes. \n      */\n    seal(o: any): any;\n\n    /**\n      * Prevents the modification of existing property attributes and values, and prevents the addition of new properties.\n      * @param o Object on which to lock the attributes.\n      */\n    freeze(o: any): any;\n\n    /**\n      * Prevents the addition of new properties to an object.\n      * @param o Object to make non-extensible. \n      */\n    preventExtensions(o: any): any;\n\n    /**\n      * Returns true if existing property attributes cannot be modified in an object and new properties cannot be added to the object.\n      * @param o Object to test. \n      */\n    isSealed(o: any): bool;\n\n    /**\n      * Returns true if existing property attributes and values cannot be modified in an object, and new properties cannot be added to the object.\n      * @param o Object to test.  \n      */\n    isFrozen(o: any): bool;\n\n    /**\n      * Returns a value that indicates whether new properties can be added to an object.\n      * @param o Object to test. \n      */\n    isExtensible(o: any): bool;\n\n    /**\n      * Returns the names of the enumerable properties and methods of an object.\n      * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n      */\n    keys(o: any): string[];\n}\n\n/**\n  * Creates a new function.\n  */\ninterface Function {\n    /**\n      * Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.\n      * @param thisArg The object to be used as the this object.\n      * @param argArray A set of arguments to be passed to the function.\n      */\n    apply(thisArg: any, argArray?: any[]): any;\n\n    /**\n      * Calls a method of an object, substituting another object for the current object.\n      * @param thisArg The object to be used as the current object.\n      * @param argArray A list of arguments to be passed to the method.\n      */\n    call(thisArg: any, ...argArray: any[]): any;\n\n    /**\n      * For a given function, creates a bound function that has the same body as the original function. \n      * The this object of the bound function is associated with the specified object, and has the specified initial parameters.\n      * @param thisArg An object to which the this keyword can refer inside the new function.\n      * @param argArray A list of arguments to be passed to the new function.\n      */\n    bind(thisArg: any, ...argArray: any[]): any;\n    \n    prototype: any;\n    length: number;\n}\n\ndeclare var Function: {\n    /** \n      * Creates a new function.\n      * @param args A list of arguments the function accepts.\n      */\n    new (...args: string[]): Function;\n    (...args: string[]): Function;\n    prototype: Function;\n}\n\ninterface IArguments {\n    [index: number]: any;\n    length: number;\n    callee: Function;\n}\n\ninterface String {\n    /** Returns a string representation of a string. */\n    toString(): string;\n\n    /**\n      * Returns the character at the specified index.\n      * @param pos The zero-based index of the desired character.\n      */\n    charAt(pos: number): string;\n\n    /** \n      * Returns the Unicode value of the character at the specified location.\n      * @param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.\n      */\n    charCodeAt(index: number): number;\n\n    /**\n      * Returns a string that contains the concatenation of two or more strings.\n      * @param strings The strings to append to the end of the string.  \n      */\n    concat(...strings: string[]): string;\n\n    /**\n      * Returns the position of the first occurrence of a substring. \n      * @param searchString The substring to search for in the string\n      * @param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.\n      */\n    indexOf(searchString: string, position?: number): number;\n\n    /**\n      * Returns the last occurrence of a substring in the string.\n      * @param searchString The substring to search for.\n      * @param position The index at which to begin searching. If omitted, the search begins at the end of the string.\n      */\n    lastIndexOf(searchString: string, position?: number): number;\n\n    /**\n      * Determines whether two strings are equivalent in the current locale.\n      * @param that String to compare to target string\n      */\n    localeCompare(that: string): number;\n\n    /** \n      * Matches a string with a regular expression, and returns an array containing the results of that search.\n      * @param regexp A variable name or string literal containing the regular expression pattern and flags.\n      */\n    match(regexp: string): string[];\n    /** \n      * Matches a string with a regular expression, and returns an array containing the results of that search.\n      * @param regexp A regular expression object that contains the regular expression pattern and applicable flags. \n      */\n    match(regexp: RegExp): string[];\n\n    /**\n      * Replaces text in a string, using a regular expression or search string.\n      * @param searchValue A String object or string literal that represents the regular expression\n      * @param replaceValue A String object or string literal containing the text to replace for every successful match of rgExp in stringObj.\n      */\n    replace(searchValue: string, replaceValue: string): string;\n    /**\n      * Replaces text in a string, using a regular expression or search string.\n      * @param searchValue A String object or string literal that represents the regular expression\n      * @param replaceValue A function that returns the replacement text.\n      */\n    replace(searchValue: string, replaceValue: (substring: string, ...args: any[]) => string): string;\n    /**\n      * Replaces text in a string, using a regular expression or search string.\n      * @param searchValue A Regular Expression object containing the regular expression pattern and applicable flags\n      * @param replaceValue A String object or string literal containing the text to replace for every successful match of rgExp in stringObj.\n      */\n    replace(searchValue: RegExp, replaceValue: string): string;\n    /**\n      * Replaces text in a string, using a regular expression or search string.\n      * @param searchValue A Regular Expression object containing the regular expression pattern and applicable flags\n      * @param replaceValue A function that returns the replacement text.\n      */\n    replace(searchValue: RegExp, replaceValue: (substring: string, ...args: any[]) => string): string;\n\n    /**\n      * Finds the first substring match in a regular expression search.\n      * @param regexp The regular expression pattern and applicable flags. \n      */\n    search(regexp: string): number;\n    /**\n      * Finds the first substring match in a regular expression search.\n      * @param regexp The regular expression pattern and applicable flags. \n      */\n    search(regexp: RegExp): number;\n\n    /**\n      * Returns a section of a string.\n      * @param start The index to the beginning of the specified portion of stringObj. \n      * @param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end. \n      * If this value is not specified, the substring continues to the end of stringObj.\n      */\n    slice(start: number, end?: number): string;\n\n    /**\n      * Split a string into substrings using the specified separator and return them as an array.\n      * @param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned. \n      * @param limit A value used to limit the number of elements returned in the array.\n      */\n    split(separator: string, limit?: number): string[];\n    /**\n      * Split a string into substrings using the specified separator and return them as an array.\n      * @param separator A Regular Express that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned. \n      * @param limit A value used to limit the number of elements returned in the array.\n      */\n    split(separator: RegExp, limit?: number): string[];\n\n    /**\n      * Returns the substring at the specified location within a String object. \n      * @param start The zero-based index integer indicating the beginning of the substring.\n      * @param end Zero-based index integer indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\n      * If end is omitted, the characters from start through the end of the original string are returned.\n      */\n    substring(start: number, end?: number): string;\n\n    /** Converts all the alphabetic characters in a string to lowercase. */\n    toLowerCase(): string;\n\n    /** Converts all alphabetic characters to lowercase, taking into account the host environment\'s current locale. */\n    toLocaleLowerCase(): string;\n\n    /** Converts all the alphabetic characters in a string to uppercase. */\n    toUpperCase(): string;\n\n    /** Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment\'s current locale. */\n    toLocaleUpperCase(): string;\n\n    /** Removes the leading and trailing white space and line terminator characters from a string. */\n    trim(): string;\n\n    /** Returns the length of a String object. */\n    length: number;\n\n    // IE extensions\n    /**\n      * Gets a substring beginning at the specified location and having the specified length.\n      * @param from The starting position of the desired substring. The index of the first character in the string is zero.\n      * @param length The number of characters to include in the returned substring.\n      */\n    substr(from: number, length?: number): string;\n}\n\n/** \n  * Allows manipulation and formatting of text strings and determination and location of substrings within strings. \n  */\ndeclare var String: {\n    new (value?: any): String;\n    (value?: any): string;\n    prototype: String;\n    fromCharCode(...codes: number[]): string;\n}\n\ninterface Boolean {\n}\ndeclare var Boolean: {\n    new (value?: any): Boolean;\n    (value?: any): bool;\n    prototype: Boolean;\n}\n\ninterface Number {\n    toString(radix?: number): string;\n    toFixed(fractionDigits?: number): string;\n    toExponential(fractionDigits?: number): string;\n    toPrecision(precision: number): string;\n}\n/** An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers. */\ndeclare var Number: {\n    new (value?: any): Number;\n    (value?: any): number;\n    prototype: Number;\n    /** The largest number that can be represented in JavaScript. Equal to approximately 1.79E+308. */\n    MAX_VALUE: number;\n    /** The closest number to zero that can be represented in JavaScript. Equal to approximately 5.00E-324. */\n    MIN_VALUE: number;\n    /** \n      * A value that is not a number.\n      * In equality comparisons, NaN does not equal any value, including itself. To test whether a value is equivalent to NaN, use the isNaN function.\n      */\n    NaN: number;\n    /** \n      * A value that is less than the largest negative number that can be represented in JavaScript.\n      * JavaScript displays NEGATIVE_INFINITY values as -infinity. \n      */\n    NEGATIVE_INFINITY: number;\n    /**\n      * A value greater than the largest number that can be represented in JavaScript. \n      * JavaScript displays POSITIVE_INFINITY values as infinity. \n      */\n    POSITIVE_INFINITY: number;\n}\n\ninterface Math {\n    /** The mathematical constant e. This is Euler\'s number, the base of natural logarithms. */\n    E: number;\n    /** The natural logarithm of 10. */\n    LN10: number;\n    /** The natural logarithm of 2. */\n    LN2: number;\n    /** The base-2 logarithm of e. */\n    LOG2E: number;\n    /** The base-10 logarithm of e. */\n    LOG10E: number;\n    /** Pi. This is the ratio of the circumference of a circle to its diameter. */\n    PI: number;\n    /** The square root of 0.5, or, equivalently, one divided by the square root of 2. */\n    SQRT1_2: number;\n    /** The square root of 2. */\n    SQRT2: number;\n    /**\n      * Returns the absolute value of a number (the value without regard to whether it is positive or negative). \n      * For example, the absolute value of -5 is the same as the absolute value of 5.\n      * @param x A numeric expression for which the absolute value is needed.\n      */\n    abs(x: number): number;\n    /**\n      * Returns the arc cosine (or inverse cosine) of a number. \n      * @param x A numeric expression.\n      */ \n    acos(x: number): number;\n    /** \n      * Returns the arcsine of a number. \n      * @param x A numeric expression.\n      */\n    asin(x: number): number;\n    /**\n      * Returns the arctangent of a number. \n      * @param x A numeric expression for which the arctangent is needed.\n      */\n    atan(x: number): number;\n    /**\n      * Returns the angle (in radians) from the X axis to a point (y,x).\n      * @param y A numeric expression representing the cartesian y-coordinate.\n      * @param x A numeric expression representing the cartesian x-coordinate.\n      */\n    atan2(y: number, x: number): number;\n    /**\n      * Returns the smallest integer greater than or equal to its numeric argument. \n      * @param x A numeric expression.\n      */\n    ceil(x: number): number;\n    /**\n      * Returns the cosine of a number. \n      * @param x A numeric expression that contains an angle measured in radians.\n      */ \n    cos(x: number): number;\n    /**\n      * Returns e (the base of natural logarithms) raised to a power. \n      * @param x A numeric expression representing the power of e.\n      */\n    exp(x: number): number;\n    /**\n      * Returns the greatest integer less than or equal to its numeric argument. \n      * @param x A numeric expression.\n      */\n    floor(x: number): number;\n    /**\n      * Returns the natural logarithm (base e) of a number. \n      * @param x A numeric expression.\n      */\n    log(x: number): number;\n    /**\n      * Returns the larger of a set of supplied numeric expressions. \n      * @param values Numeric expressions to be evaluated.\n      */\n    max(...values: number[]): number;\n    /**\n      * Returns the smaller of a set of supplied numeric expressions. \n      * @param values Numeric expressions to be evaluated.\n      */\n    min(...values: number[]): number;\n    /**\n      * Returns the value of a base expression taken to a specified power. \n      * @param x The base value of the expression.\n      * @param y The exponent value of the expression.\n      */\n    pow(x: number, y: number): number;\n    /** Returns a pseudorandom number between 0 and 1. */ \n    random(): number;\n    /** \n      * Returns a supplied numeric expression rounded to the nearest integer.\n      * @param x The value to be rounded to the nearest integer.\n      */\n    round(x: number): number;\n    /**\n      * Returns the sine of a number.\n      * @param x A numeric expression that contains an angle measured in radians.\n      */\n    sin(x: number): number;\n    /**\n      * Returns the square root of a number.\n      * @param x A numeric expression.\n      */\n    sqrt(x: number): number;\n    /**\n      * Returns the tangent of a number.\n      * @param x A numeric expression that contains an angle measured in radians.\n      */\n    tan(x: number): number;\n}\n/** An intrinsic object that provides basic mathematics functionality and constants. */\ndeclare var Math: Math;\n\n/** Enables basic storage and retrieval of dates and times. */\ninterface Date {\n    /** Returns a string representation of a date. The format of the string depends on the locale. */\n    toString(): string;\n    /** Returns a date as a string value. */\n    toDateString(): string;\n    /** Returns a time as a string value. */\n    toTimeString(): string;\n    toLocaleString(): string;\n    /** Returns a date as a string value appropriate to the host environment\'s current locale. */\n    toLocaleDateString(): string;\n    /** Returns a time as a string value appropriate to the host environment\'s current locale. */\n    toLocaleTimeString(): string;\n    /** Returns the stored time value in milliseconds since midnight, January 1, 1970 UTC. */\n    valueOf(): number;\n    /** Gets the time value in milliseconds. */\n    getTime(): number;\n    /** Gets the year, using local time. */\n    getFullYear(): number;\n    /** Gets the year using Universal Coordinated Time (UTC). */\n    getUTCFullYear(): number;\n    /** Gets the month, using local time. */\n    getMonth(): number;\n    /** Gets the month of a Date object using Universal Coordinated Time (UTC). */\n    getUTCMonth(): number;\n    /** Gets the day-of-the-month, using local time. */\n    getDate(): number;\n    /** Gets the day-of-the-month, using Universal Coordinated Time (UTC). */\n    getUTCDate(): number;\n    /** Gets the day of the week, using local time. */\n    getDay(): number;\n    /** Gets the day of the week using Universal Coordinated Time (UTC). */\n    getUTCDay(): number;\n    /** Gets the hours in a date, using local time. */\n    getHours(): number;\n    /** Gets the hours value in a Date object using Universal Coordinated Time (UTC). */\n    getUTCHours(): number;\n    /** Gets the minutes of a Date object, using local time. */\n    getMinutes(): number;\n    /** Gets the minutes of a Date object using Universal Coordinated Time (UTC). */\n    getUTCMinutes(): number;\n    /** Gets the seconds of a Date object, using local time. */\n    getSeconds(): number;\n    /** Gets the seconds of a Date object using Universal Coordinated Time (UTC). */\n    getUTCSeconds(): number;\n    /** Gets the milliseconds of a Date, using local time. */\n    getMilliseconds(): number;\n    /** Gets the milliseconds of a Date object using Universal Coordinated Time (UTC). */\n    getUTCMilliseconds(): number;\n    /** Gets the difference in minutes between the time on the local computer and Universal Coordinated Time (UTC). */\n    getTimezoneOffset(): number;\n    /** \n      * Sets the date and time value in the Date object.\n      * @param time A numeric value representing the number of elapsed milliseconds since midnight, January 1, 1970 GMT. \n      */\n    setTime(time: number): void;\n    /**\n      * Sets the milliseconds value in the Date object using local time. \n      * @param ms A numeric value equal to the millisecond value.\n      */\n    setMilliseconds(ms: number): void;\n    /** \n      * Sets the milliseconds value in the Date object using Universal Coordinated Time (UTC).\n      * @param ms A numeric value equal to the millisecond value. \n      */\n    setUTCMilliseconds(ms: number): void;\n\n    /**\n      * Sets the seconds value in the Date object using local time. \n      * @param sec A numeric value equal to the seconds value.\n      * @param ms A numeric value equal to the milliseconds value.\n      */\n    setSeconds(sec: number, ms?: number): void;\n    /**\n      * Sets the seconds value in the Date object using Universal Coordinated Time (UTC).\n      * @param sec A numeric value equal to the seconds value.\n      * @param ms A numeric value equal to the milliseconds value.\n      */\n    setUTCSeconds(sec: number, ms?: number): void;\n    /**\n      * Sets the minutes value in the Date object using local time. \n      * @param min A numeric value equal to the minutes value. \n      * @param sec A numeric value equal to the seconds value. \n      * @param ms A numeric value equal to the milliseconds value.\n      */\n    setMinutes(min: number, sec?: number, ms?: number): void;\n    /**\n      * Sets the minutes value in the Date object using Universal Coordinated Time (UTC).\n      * @param min A numeric value equal to the minutes value. \n      * @param sec A numeric value equal to the seconds value. \n      * @param ms A numeric value equal to the milliseconds value.\n      */\n    setUTCMinutes(min: number, sec?: number, ms?: number): void;\n    /**\n      * Sets the hour value in the Date object using local time.\n      * @param hours A numeric value equal to the hours value.\n      * @param min A numeric value equal to the minutes value.\n      * @param sec A numeric value equal to the seconds value. \n      * @param ms A numeric value equal to the milliseconds value.\n      */\n    setHours(hours: number, min?: number, sec?: number, ms?: number): void;\n    /**\n      * Sets the hours value in the Date object using Universal Coordinated Time (UTC).\n      * @param hours A numeric value equal to the hours value.\n      * @param min A numeric value equal to the minutes value.\n      * @param sec A numeric value equal to the seconds value. \n      * @param ms A numeric value equal to the milliseconds value.\n      */\n    setUTCHours(hours: number, min?: number, sec?: number, ms?: number): void;\n    /**\n      * Sets the numeric day-of-the-month value of the Date object using local time. \n      * @param date A numeric value equal to the day of the month.\n      */\n    setDate(date: number): void;\n    /** \n      * Sets the numeric day of the month in the Date object using Universal Coordinated Time (UTC).\n      * @param date A numeric value equal to the day of the month. \n      */\n    setUTCDate(date: number): void;\n    /** \n      * Sets the month value in the Date object using local time. \n      * @param month A numeric value equal to the month. The value for January is 0, and other month values follow consecutively. \n      * @param date A numeric value representing the day of the month. If this value is not supplied, the value from a call to the getDate method is used.\n      */\n    setMonth(month: number, date?: number): void;\n    /**\n      * Sets the month value in the Date object using Universal Coordinated Time (UTC).\n      * @param month A numeric value equal to the month. The value for January is 0, and other month values follow consecutively.\n      * @param date A numeric value representing the day of the month. If it is not supplied, the value from a call to the getUTCDate method is used.\n      */\n    setUTCMonth(month: number, date?: number): void;\n    /**\n      * Sets the year of the Date object using local time.\n      * @param year A numeric value for the year.\n      * @param month A zero-based numeric value for the month (0 for January, 11 for December). Must be specified if numDate is specified.\n      * @param date A numeric value equal for the day of the month.\n      */\n    setFullYear(year: number, month?: number, date?: number): void;\n    /**\n      * Sets the year value in the Date object using Universal Coordinated Time (UTC).\n      * @param year A numeric value equal to the year.\n      * @param month A numeric value equal to the month. The value for January is 0, and other month values follow consecutively. Must be supplied if numDate is supplied.\n      * @param date A numeric value equal to the day of the month.\n      */\n    setUTCFullYear(year: number, month?: number, date?: number): void;\n    /** Returns a date converted to a string using Universal Coordinated Time (UTC). */\n    toUTCString(): string;\n    /** Returns a date as a string value in ISO format. */\n    toISOString(): string;\n    /** Used by the JSON.stringify method to enable the transformation of an object\'s data for JavaScript Object Notation (JSON) serialization. */ \n    toJSON(key?: any): string;\n}\n/**\n  * Enables basic storage and retrieval of dates and times.\n  */\ndeclare var Date: {\n    new (): Date;\n    new (value: number): Date;\n    new (value: string): Date;\n    new (year: number, month: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number): Date;\n    (): string;\n    prototype: Date;\n    /**\n      * Parses a string containing a date, and returns the number of milliseconds between that date and midnight, January 1, 1970.\n      * @param s A date string\n      */\n    parse(s: string): number;\n    /**\n      * Returns the number of milliseconds between midnight, January 1, 1970 Universal Coordinated Time (UTC) (or GMT) and the specified date. \n      * @param year The full year designation is required for cross-century date accuracy. If year is between 0 and 99 is used, then year is assumed to be 1900 + year.\n      * @param month The month as an integer between 0 and 11 (January to December).\n      * @param date The date as an integer between 1 and 31.\n      * @param hours Must be supplied if minutes is supplied. An integer from 0 to 23 (midnight to 11pm) that specifies the hour.\n      * @param minutes Must be supplied if seconds is supplied. An integer from 0 to 59 that specifies the minutes.\n      * @param seconds Must be supplied if milliseconds is supplied. An integer from 0 to 59 that specifies the seconds.\n      * @param ms An integer from 0 to 999 that specifies the milliseconds.\n      */\n    UTC(year: number, month: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number): number;\n    now(): number;\n}\n\ninterface RegExpExecArray {\n    [index: number]: string;\n    length: number;\n\n    index: number;\n    input: string;\n\n    toString(): string;\n    toLocaleString(): string;\n    concat(...items: string[][]): string[];\n    join(seperator?: string): string;\n    pop(): string;\n    push(...items: string[]): number;\n    reverse(): string[];\n    shift(): string;\n    slice(start: number, end?: number): string[];\n    sort(compareFn?: (a: string, b: string) => number): string[];\n    splice(start: number): string[];\n    splice(start: number, deleteCount: number, ...items: string[]): string[];\n    unshift(...items: string[]): number;\n\n    indexOf(searchElement: string, fromIndex?: number): number;\n    lastIndexOf(searchElement: string, fromIndex?: number): number;\n    every(callbackfn: (value: string, index: number, array: string[]) => bool, thisArg?: any): bool;\n    some(callbackfn: (value: string, index: number, array: string[]) => bool, thisArg?: any): bool;\n    forEach(callbackfn: (value: string, index: number, array: string[]) => void , thisArg?: any): void;\n    map(callbackfn: (value: string, index: number, array: string[]) => any, thisArg?: any): any[];\n    filter(callbackfn: (value: string, index: number, array: string[]) => bool, thisArg?: any): string[];\n    reduce(callbackfn: (previousValue: any, currentValue: any, currentIndex: number, array: string[]) => any, initialValue?: any): any;\n    reduceRight(callbackfn: (previousValue: any, currentValue: any, currentIndex: number, array: string[]) => any, initialValue?: any): any;\n}\n\n\ninterface RegExp {\n    /** \n      * Executes a search on a string using a regular expression pattern, and returns an array containing the results of that search.\n      * @param string The String object or string literal on which to perform the search.\n      */\n    exec(string: string): RegExpExecArray;\n    /** \n      * Returns a Boolean value that indicates whether or not a pattern exists in a searched string.\n      * @param string String on which to perform the search.\n      */\n    test(string: string): bool;\n    /** Returns a copy of the text of the regular expression pattern. Read-only. The rgExp argument is a Regular expression object. It can be a variable name or a literal. */\n    source: string;\n    /** Returns a Boolean value indicating the state of the global flag (g) used with a regular expression. Default is false. Read-only. */\n    global: bool;\n    /** Returns a Boolean value indicating the state of the ignoreCase flag (i) used with a regular expression. Default is false. Read-only. */\n    ignoreCase: bool;\n    /** Returns a Boolean value indicating the state of the multiline flag (m) used with a regular expression. Default is false. Read-only. */\n    multiline: bool;\n\n    lastIndex: number;\n}\ndeclare var RegExp: {\n    new (pattern: string, flags?: string): RegExp;\n    (pattern: string, flags?: string): RegExp;\n}\n\ninterface Error {\n    name: string;\n    message: string;\n}\ndeclare var Error: {\n    new (message?: string): Error;\n    (message?: string): Error;\n    prototype: Error;\n}\n\ninterface EvalError extends Error {\n}\ndeclare var EvalError: {\n    new (message?: string): EvalError;\n    (message?: string): EvalError;\n    prototype: EvalError;\n}\n\ninterface RangeError extends Error {\n}\ndeclare var RangeError: {\n    new (message?: string): RangeError;\n    (message?: string): RangeError;\n    prototype: RangeError;\n}\n\ninterface ReferenceError extends Error {\n}\ndeclare var ReferenceError: {\n    new (message?: string): ReferenceError;\n    (message?: string): ReferenceError;\n    prototype: ReferenceError;\n}\n\ninterface SyntaxError extends Error {\n}\ndeclare var SyntaxError: {\n    new (message?: string): SyntaxError;\n    (message?: string): SyntaxError;\n    prototype: SyntaxError;\n}\n\ninterface TypeError extends Error {\n}\ndeclare var TypeError: {\n    new (message?: string): TypeError;\n    (message?: string): TypeError;\n    prototype: TypeError;\n}\n\ninterface URIError extends Error {\n}\ndeclare var URIError: {\n    new (message?: string): URIError;\n    (message?: string): URIError;\n    prototype: URIError;\n}\n\ninterface JSON {\n    /**\n      * Converts a JavaScript Object Notation (JSON) string into an object.\n      * @param text A valid JSON string.\n      * @param reviver A function that transforms the results. This function is called for each member of the object. \n      * If a member contains nested objects, the nested objects are transformed before the parent object is. \n      */\n    parse(text: string, reviver?: (key: any, value: any) => any): any;\n    /**\n      * Converts a JavaScript value to a JavaScript Object Notation (JSON) string.\n      * @param value A JavaScript value, usually an object or array, to be converted.\n      */\n    stringify(value: any): string;\n    /**\n      * Converts a JavaScript value to a JavaScript Object Notation (JSON) string.\n      * @param value A JavaScript value, usually an object or array, to be converted.\n      * @param replacer A function that transforms the results.\n      */\n    stringify(value: any, replacer: (key: string, value: any) => any): string;\n    /**\n      * Converts a JavaScript value to a JavaScript Object Notation (JSON) string.\n      * @param value A JavaScript value, usually an object or array, to be converted.\n      * @param replacer Array that transforms the results.\n      */\n    stringify(value: any, replacer: any[]): string;\n    /**\n      * Converts a JavaScript value to a JavaScript Object Notation (JSON) string.\n      * @param value A JavaScript value, usually an object or array, to be converted.\n      * @param replacer A function that transforms the results.\n      * @param space Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.\n      */\n    stringify(value: any, replacer: (key: string, value: any) => any, space: any): string;\n    /**\n      * Converts a JavaScript value to a JavaScript Object Notation (JSON) string.\n      * @param value A JavaScript value, usually an object or array, to be converted.\n      * @param replacer Array that transforms the results.\n      * @param space Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.\n      */\n    stringify(value: any, replacer: any[], space: any): string;\n}\n/**\n  * An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.\n  */\ndeclare var JSON: JSON;\n\n////////////////\n/// ECMAScript Array API (specially handled by compiler)\n////////////////\n\ninterface Array {\n    toString(): string;\n    toLocaleString(): string;\n    concat(...items: _element[][]): _element[];\n    concat(...items: _element[]): _element[];\n    join(seperator?: string): string;\n    pop(): _element;\n    push(...items: _element[]): number;\n    reverse(): _element[];\n    shift(): _element;\n    slice(start: number, end?: number): _element[];\n    sort(compareFn?: (a: _element, b: _element) => number): _element[];\n    splice(start: number): _element[];\n    splice(start: number, deleteCount: number, ...items: _element[]): _element[];\n    unshift(...items: _element[]): number;\n\n    indexOf(searchElement: _element, fromIndex?: number): number;\n    lastIndexOf(searchElement: _element, fromIndex?: number): number;\n    every(callbackfn: (value: _element, index: number, array: _element[]) => bool, thisArg?: any): bool;\n    some(callbackfn: (value: _element, index: number, array: _element[]) => bool, thisArg?: any): bool;\n    forEach(callbackfn: (value: _element, index: number, array: _element[]) => void , thisArg?: any): void;\n    map(callbackfn: (value: _element, index: number, array: _element[]) => any, thisArg?: any): any[];\n    filter(callbackfn: (value: _element, index: number, array: _element[]) => bool, thisArg?: any): _element[];\n    reduce(callbackfn: (previousValue: any, currentValue: any, currentIndex: number, array: _element[]) => any, initialValue?: any): any;\n    reduceRight(callbackfn: (previousValue: any, currentValue: any, currentIndex: number, array: _element[]) => any, initialValue?: any): any;\n\n    length: number;\n}\ndeclare var Array: {\n    new (...items: any[]): any[];\n    (...items: any[]): any[];\n    isArray(arg: any): bool;\n    prototype: Array;\n}\n\n////////////////\n/// IE10 ECMAScript Extensions\n////////////////\n\ninterface ArrayBuffer {\n    byteLength: number;\n}\ndeclare var ArrayBuffer: {\n    prototype: ArrayBuffer;\n    new (byteLength: number);\n}\n\ninterface ArrayBufferView {\n    buffer: ArrayBuffer;\n    byteOffset: number;\n    byteLength: number;\n}\n\ninterface Int8Array extends ArrayBufferView {\n    BYTES_PER_ELEMENT: number;\n    length: number;\n    [index: number]: number;\n    get(index: number): number;\n    set(index: number, value: number): void;\n    set(array: Int8Array, offset?: number): void;\n    set(array: number[], offset?: number): void;\n    subarray(begin: number, end?: number): Int8Array;\n}\ndeclare var Int8Array: {\n    prototype: Int8Array;\n    new (length: number): Int8Array;\n    new (array: Int8Array): Int8Array;\n    new (array: number[]): Int8Array;\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Int8Array;\n    BYTES_PER_ELEMENT: number;\n}\n\ninterface Uint8Array extends ArrayBufferView {\n    BYTES_PER_ELEMENT: number;\n    length: number;\n    [index: number]: number;\n    get(index: number): number;\n    set(index: number, value: number): void;\n    set(array: Uint8Array, offset?: number): void;\n    set(array: number[], offset?: number): void;\n    subarray(begin: number, end?: number): Uint8Array;\n}\ndeclare var Uint8Array: {\n    prototype: Uint8Array;\n    new (length: number): Uint8Array;\n    new (array: Uint8Array): Uint8Array;\n    new (array: number[]): Uint8Array;\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Uint8Array;\n    BYTES_PER_ELEMENT: number;\n}\n\ninterface Int16Array extends ArrayBufferView {\n    BYTES_PER_ELEMENT: number;\n    length: number;\n    [index: number]: number;\n    get(index: number): number;\n    set(index: number, value: number): void;\n    set(array: Int16Array, offset?: number): void;\n    set(array: number[], offset?: number): void;\n    subarray(begin: number, end?: number): Int16Array;\n}\ndeclare var Int16Array: {\n    prototype: Int16Array;\n    new (length: number): Int16Array;\n    new (array: Int16Array): Int16Array;\n    new (array: number[]): Int16Array;\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Int16Array;\n    BYTES_PER_ELEMENT: number;\n}\n\ninterface Uint16Array extends ArrayBufferView {\n    BYTES_PER_ELEMENT: number;\n    length: number;\n    [index: number]: number;\n    get(index: number): number;\n    set(index: number, value: number): void;\n    set(array: Uint16Array, offset?: number): void;\n    set(array: number[], offset?: number): void;\n    subarray(begin: number, end?: number): Uint16Array;\n}\ndeclare var Uint16Array: {\n    prototype: Uint16Array;\n    new (length: number): Uint16Array;\n    new (array: Uint16Array): Uint16Array;\n    new (array: number[]): Uint16Array;\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Uint16Array;\n    BYTES_PER_ELEMENT: number;\n}\n\ninterface Int32Array extends ArrayBufferView {\n    BYTES_PER_ELEMENT: number;\n    length: number;\n    [index: number]: number;\n    get(index: number): number;\n    set(index: number, value: number): void;\n    set(array: Int32Array, offset?: number): void;\n    set(array: number[], offset?: number): void;\n    subarray(begin: number, end?: number): Int32Array;\n}\ndeclare var Int32Array: {\n    prototype: Int32Array;\n    new (length: number): Int32Array;\n    new (array: Int32Array): Int32Array;\n    new (array: number[]): Int32Array;\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Int32Array;\n    BYTES_PER_ELEMENT: number;\n}\n\ninterface Uint32Array extends ArrayBufferView {\n    BYTES_PER_ELEMENT: number;\n    length: number;\n    [index: number]: number;\n    get(index: number): number;\n    set(index: number, value: number): void;\n    set(array: Uint32Array, offset?: number): void;\n    set(array: number[], offset?: number): void;\n    subarray(begin: number, end?: number): Uint32Array;\n}\ndeclare var Uint32Array: {\n    prototype: Uint32Array;\n    new (length: number): Uint32Array;\n    new (array: Uint32Array): Uint32Array;\n    new (array: number[]): Uint32Array;\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Uint32Array;\n    BYTES_PER_ELEMENT: number;\n}\n\ninterface Float32Array extends ArrayBufferView {\n    BYTES_PER_ELEMENT: number;\n    length: number;\n    [index: number]: number;\n    get(index: number): number;\n    set(index: number, value: number): void;\n    set(array: Float32Array, offset?: number): void;\n    set(array: number[], offset?: number): void;\n    subarray(begin: number, end?: number): Float32Array;\n}\ndeclare var Float32Array: {\n    prototype: Float32Array;\n    new (length: number): Float32Array;\n    new (array: Float32Array): Float32Array;\n    new (array: number[]): Float32Array;\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Float32Array;\n    BYTES_PER_ELEMENT: number;\n}\n\ninterface Float64Array extends ArrayBufferView {\n    BYTES_PER_ELEMENT: number;\n    length: number;\n    [index: number]: number;\n    get(index: number): number;\n    set(index: number, value: number): void;\n    set(array: Float64Array, offset?: number): void;\n    set(array: number[], offset?: number): void;\n    subarray(begin: number, end?: number): Float64Array;\n}\ndeclare var Float64Array: {\n    prototype: Float64Array;\n    new (length: number): Float64Array;\n    new (array: Float64Array): Float64Array;\n    new (array: number[]): Float64Array;\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): Float64Array;\n    BYTES_PER_ELEMENT: number;\n}\n\ninterface DataView extends ArrayBufferView {\n    getInt8(byteOffset: number): number;\n    getUint8(byteOffset: number): number;\n    getInt16(byteOffset: number, littleEndian?: bool): number;\n    getUint16(byteOffset: number, littleEndian?: bool): number;\n    getInt32(byteOffset: number, littleEndian?: bool): number;\n    getUint32(byteOffset: number, littleEndian?: bool): number;\n    getFloat32(byteOffset: number, littleEndian?: bool): number;\n    getFloat64(byteOffset: number, littleEndian?: bool): number;\n\n    setInt8(byteOffset: number, value: number): void;\n    setUint8(byteOffset: number, value: number): void;\n    setInt16(byteOffset: number, value: number, littleEndian?: bool): void;\n    setUint16(byteOffset: number, value: number, littleEndian?: bool): void;\n    setInt32(byteOffset: number, value: number, littleEndian?: bool): void;\n    setUint32(byteOffset: number, value: number, littleEndian?: bool): void;\n    setFloat32(byteOffset: number, value: number, littleEndian?: bool): void;\n    setFloat64(byteOffset: number, value: number, littleEndian?: bool): void;\n}\ndeclare var DataView: {\n    prototype: DataView;\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): DataView;\n}\n\n////////////////\n/// IE9 DOM APIs (note that \n////////////////\n\ninterface NavigatorID {\n    appVersion: string;\n    appName: string;\n    userAgent: string;\n    platform: string;\n}\n\ninterface HTMLTableElement extends HTMLElement, DOML2DeprecatedBorderStyle_HTMLTableElement, DOML2DeprecatedAlignmentStyle_HTMLTableElement, MSBorderColorStyle, MSDataBindingExtensions, MSHTMLTableElementExtensions, DOML2DeprecatedBackgroundStyle, MSBorderColorHighlightStyle, MSDataBindingTableExtensions, DOML2DeprecatedBackgroundColorStyle {\n    tBodies: HTMLCollection;\n    width: string;\n    tHead: HTMLTableSectionElement;\n    cellSpacing: string;\n    tFoot: HTMLTableSectionElement;\n    frame: string;\n    rows: HTMLCollection;\n    rules: string;\n    cellPadding: string;\n    summary: string;\n    caption: HTMLTableCaptionElement;\n    deleteRow(index?: number): void;\n    createTBody(): HTMLElement;\n    deleteCaption(): void;\n    insertRow(index?: number): HTMLElement;\n    deleteTFoot(): void;\n    createTHead(): HTMLElement;\n    deleteTHead(): void;\n    createCaption(): HTMLElement;\n    createTFoot(): HTMLElement;\n}\ndeclare var HTMLTableElement: {\n    prototype: HTMLTableElement;\n    new(): HTMLTableElement;\n}\n\ninterface TreeWalker {\n    whatToShow: number;\n    filter: NodeFilterCallback;\n    root: Node;\n    currentNode: Node;\n    expandEntityReferences: bool;\n    previousSibling(): Node;\n    lastChild(): Node;\n    nextSibling(): Node;\n    nextNode(): Node;\n    parentNode(): Node;\n    firstChild(): Node;\n    previousNode(): Node;\n}\ndeclare var TreeWalker: {\n    prototype: TreeWalker;\n    new(): TreeWalker;\n}\n\ninterface GetSVGDocument {\n    getSVGDocument(): SVGDocument;\n}\n\ninterface HTMLHtmlElementDOML2Deprecated {\n    version: string;\n}\n\ninterface SVGPathSegCurvetoQuadraticRel extends SVGPathSeg {\n    y: number;\n    y1: number;\n    x: number;\n    x1: number;\n}\ndeclare var SVGPathSegCurvetoQuadraticRel: {\n    prototype: SVGPathSegCurvetoQuadraticRel;\n    new(): SVGPathSegCurvetoQuadraticRel;\n}\n\ninterface Performance {\n    navigation: PerformanceNavigation;\n    timing: PerformanceTiming;\n    toJSON(): any;\n}\ndeclare var Performance: {\n    prototype: Performance;\n    new(): Performance;\n}\n\ninterface SVGSVGElementEventHandlers {\n    onresize: (ev: UIEvent) => any;\n    onunload: (ev: Event) => any;\n    onscroll: (ev: UIEvent) => any;\n    onerror: (ev: Event) => any;\n    onzoom: (ev: any) => any;\n    onabort: (ev: UIEvent) => any;\n}\n\ninterface MSDataBindingTableExtensions {\n    dataPageSize: number;\n    nextPage(): void;\n    firstPage(): void;\n    refresh(): void;\n    previousPage(): void;\n    lastPage(): void;\n}\n\ninterface DOML2DeprecatedAlignmentStyle_HTMLParagraphElement {\n    align: string;\n}\n\ninterface CompositionEvent extends UIEvent {\n    data: string;\n    locale: string;\n    initCompositionEvent(typeArg: string, canBubbleArg: bool, cancelableArg: bool, viewArg: AbstractView, dataArg: string, locale: string): void;\n}\ndeclare var CompositionEvent: {\n    prototype: CompositionEvent;\n    new(): CompositionEvent;\n}\n\ninterface SVGMarkerElement extends SVGElement, SVGStylable, SVGLangSpace, SVGFitToViewBox {\n    orientType: SVGAnimatedEnumeration;\n    markerUnits: SVGAnimatedEnumeration;\n    markerWidth: SVGAnimatedLength;\n    markerHeight: SVGAnimatedLength;\n    orientAngle: SVGAnimatedAngle;\n    refY: SVGAnimatedLength;\n    refX: SVGAnimatedLength;\n    setOrientToAngle(angle: SVGAngle): void;\n    setOrientToAuto(): void;\n    SVG_MARKER_ORIENT_UNKNOWN: number;\n    SVG_MARKER_ORIENT_ANGLE: number;\n    SVG_MARKERUNITS_UNKNOWN: number;\n    SVG_MARKERUNITS_STROKEWIDTH: number;\n    SVG_MARKER_ORIENT_AUTO: number;\n    SVG_MARKERUNITS_USERSPACEONUSE: number;\n}\ndeclare var SVGMarkerElement: {\n    prototype: SVGMarkerElement;\n    new(): SVGMarkerElement;\n    SVG_MARKER_ORIENT_UNKNOWN: number;\n    SVG_MARKER_ORIENT_ANGLE: number;\n    SVG_MARKERUNITS_UNKNOWN: number;\n    SVG_MARKERUNITS_STROKEWIDTH: number;\n    SVG_MARKER_ORIENT_AUTO: number;\n    SVG_MARKERUNITS_USERSPACEONUSE: number;\n}\n\ninterface WindowTimers {\n    clearTimeout(handle: number): void;\n    setTimeout(expression: any, msec?: number, language?: any): number;\n    clearInterval(handle: number): void;\n    setInterval(expression: any, msec?: number, language?: any): number;\n}\n\ninterface CSSStyleDeclaration extends CSS3Properties, SVG1_1Properties, CSS2Properties {\n    cssText: string;\n    length: number;\n    parentRule: CSSRule;\n    getPropertyPriority(propertyName: string): string;\n    getPropertyValue(propertyName: string): string;\n    removeProperty(propertyName: string): string;\n    item(index: number): string;\n    [index: number]: string;\n    setProperty(propertyName: string, value: string, priority?: string): void;\n}\ndeclare var CSSStyleDeclaration: {\n    prototype: CSSStyleDeclaration;\n    new(): CSSStyleDeclaration;\n}\n\ninterface SVGGElement extends SVGElement, SVGStylable, SVGTransformable, SVGLangSpace, SVGTests {\n}\ndeclare var SVGGElement: {\n    prototype: SVGGElement;\n    new(): SVGGElement;\n}\n\ninterface MSStyleCSSProperties extends MSCSSProperties {\n    pixelWidth: number;\n    posHeight: number;\n    posLeft: number;\n    pixelTop: number;\n    pixelBottom: number;\n    textDecorationNone: bool;\n    pixelLeft: number;\n    posTop: number;\n    posBottom: number;\n    textDecorationOverline: bool;\n    posWidth: number;\n    textDecorationLineThrough: bool;\n    pixelHeight: number;\n    textDecorationBlink: bool;\n    posRight: number;\n    pixelRight: number;\n    textDecorationUnderline: bool;\n}\ndeclare var MSStyleCSSProperties: {\n    prototype: MSStyleCSSProperties;\n    new(): MSStyleCSSProperties;\n}\n\ninterface MSCSSStyleSheetExtensions {\n    owningElement: Element;\n    imports: StyleSheetList;\n    isAlternate: bool;\n    rules: MSCSSRuleList;\n    isPrefAlternate: bool;\n    readOnly: bool;\n    cssText: string;\n    href: string;\n    id: string;\n    pages: StyleSheetPageList;\n    addImport(bstrURL: string, lIndex?: number): number;\n    addPageRule(bstrSelector: string, bstrStyle: string, lIndex?: number): number;\n    removeRule(lIndex: number): void;\n    addRule(bstrSelector: string, bstrStyle?: string, lIndex?: number): number;\n    removeImport(lIndex: number): void;\n}\n\ninterface Navigator extends NavigatorID, NavigatorOnLine, NavigatorDoNotTrack, NavigatorAbilities, NavigatorGeolocation, MSNavigatorAbilities {\n}\ndeclare var Navigator: {\n    prototype: Navigator;\n    new(): Navigator;\n}\n\ninterface SVGPathSegCurvetoCubicSmoothAbs extends SVGPathSeg {\n    y: number;\n    x2: number;\n    x: number;\n    y2: number;\n}\ndeclare var SVGPathSegCurvetoCubicSmoothAbs: {\n    prototype: SVGPathSegCurvetoCubicSmoothAbs;\n    new(): SVGPathSegCurvetoCubicSmoothAbs;\n}\n\ninterface MSBorderColorStyle_HTMLFrameSetElement {\n    borderColor: any;\n}\n\ninterface SVGZoomEvent extends UIEvent {\n    zoomRectScreen: SVGRect;\n    previousScale: number;\n    newScale: number;\n    previousTranslate: SVGPoint;\n    newTranslate: SVGPoint;\n}\ndeclare var SVGZoomEvent: {\n    prototype: SVGZoomEvent;\n    new(): SVGZoomEvent;\n}\n\ninterface NodeSelector {\n    querySelectorAll(selectors: string): NodeList;\n    querySelector(selectors: string): Element;\n}\n\ninterface HTMLTableDataCellElement extends HTMLTableCellElement, MSHTMLTableDataCellElementExtensions {\n}\ndeclare var HTMLTableDataCellElement: {\n    prototype: HTMLTableDataCellElement;\n    new(): HTMLTableDataCellElement;\n}\n\ninterface MSHTMLDirectoryElementExtensions extends DOML2DeprecatedListNumberingAndBulletStyle {\n}\n\ninterface HTMLBaseElement extends HTMLElement {\n    target: string;\n    href: string;\n}\ndeclare var HTMLBaseElement: {\n    prototype: HTMLBaseElement;\n    new(): HTMLBaseElement;\n}\n\ninterface ClientRect {\n    left: number;\n    width: number;\n    right: number;\n    top: number;\n    bottom: number;\n    height: number;\n}\ndeclare var ClientRect: {\n    prototype: ClientRect;\n    new(): ClientRect;\n}\n\ninterface PositionErrorCallback {\n    (error: PositionError): void;\n}\n\ninterface DOMImplementation extends DOMHTMLImplementation {\n    createDocumentType(qualifiedName: string, publicId: string, systemId: string): DocumentType;\n    createDocument(namespaceURI: string, qualifiedName: string, doctype: DocumentType): Document;\n    hasFeature(feature: string, version?: string): bool;\n}\ndeclare var DOMImplementation: {\n    prototype: DOMImplementation;\n    new(): DOMImplementation;\n}\n\ninterface DOML2DeprecatedWidthStyle_HTMLBlockElement {\n    width: number;\n}\n\ninterface SVGUnitTypes {\n    SVG_UNIT_TYPE_UNKNOWN: number;\n    SVG_UNIT_TYPE_OBJECTBOUNDINGBOX: number;\n    SVG_UNIT_TYPE_USERSPACEONUSE: number;\n}\ndeclare var SVGUnitTypes: {\n    prototype: SVGUnitTypes;\n    new(): SVGUnitTypes;\n    SVG_UNIT_TYPE_UNKNOWN: number;\n    SVG_UNIT_TYPE_OBJECTBOUNDINGBOX: number;\n    SVG_UNIT_TYPE_USERSPACEONUSE: number;\n}\n\ninterface DocumentRange {\n    createRange(): Range;\n}\n\ninterface MSHTMLDocumentExtensions {\n    onrowexit: (ev: MSEventObj) => any;\n    compatible: MSCompatibleInfoCollection;\n    oncontrolselect: (ev: MSEventObj) => any;\n    onrowsinserted: (ev: MSEventObj) => any;\n    onpropertychange: (ev: MSEventObj) => any;\n    media: string;\n    onafterupdate: (ev: MSEventObj) => any;\n    onhelp: (ev: Event) => any;\n    uniqueID: string;\n    onbeforeactivate: (ev: UIEvent) => any;\n    onstoragecommit: (ev: StorageEvent) => any;\n    onselectionchange: (ev: Event) => any;\n    documentMode: number;\n    onfocusout: (ev: FocusEvent) => any;\n    ondataavailable: (ev: MSEventObj) => any;\n    onbeforeupdate: (ev: MSEventObj) => any;\n    onfocusin: (ev: FocusEvent) => any;\n    security: string;\n    namespaces: MSNamespaceInfoCollection;\n    ondatasetcomplete: (ev: MSEventObj) => any;\n    onbeforedeactivate: (ev: UIEvent) => any;\n    onstop: (ev: Event) => any;\n    onactivate: (ev: UIEvent) => any;\n    onmssitemodejumplistitemremoved: (ev: MSSiteModeEvent) => any;\n    frames: Window;\n    onselectstart: (ev: Event) => any;\n    onerrorupdate: (ev: MSEventObj) => any;\n    parentWindow: Window;\n    ondeactivate: (ev: UIEvent) => any;\n    ondatasetchanged: (ev: MSEventObj) => any;\n    onrowsdelete: (ev: MSEventObj) => any;\n    onmsthumbnailclick: (ev: MSSiteModeEvent) => any;\n    onrowenter: (ev: MSEventObj) => any;\n    onbeforeeditfocus: (ev: MSEventObj) => any;\n    Script: MSScriptHost;\n    oncellchange: (ev: MSEventObj) => any;\n    URLUnencoded: string;\n    updateSettings(): void;\n    execCommandShowHelp(commandId: string): bool;\n    releaseCapture(): void;\n    focus(): void;\n}\n\ninterface CSS2Properties {\n    backgroundAttachment: string;\n    visibility: string;\n    fontFamily: string;\n    borderRightStyle: string;\n    clear: string;\n    content: string;\n    counterIncrement: string;\n    orphans: string;\n    marginBottom: string;\n    borderStyle: string;\n    counterReset: string;\n    outlineWidth: string;\n    marginRight: string;\n    paddingLeft: string;\n    borderBottom: string;\n    marginTop: string;\n    borderTopColor: string;\n    top: string;\n    fontWeight: string;\n    textIndent: string;\n    borderRight: string;\n    width: string;\n    listStyleImage: string;\n    cursor: string;\n    listStylePosition: string;\n    borderTopStyle: string;\n    direction: string;\n    maxWidth: string;\n    color: string;\n    clip: string;\n    borderRightWidth: string;\n    verticalAlign: string;\n    pageBreakAfter: string;\n    overflow: string;\n    borderBottomStyle: string;\n    borderLeftStyle: string;\n    fontStretch: string;\n    emptyCells: string;\n    padding: string;\n    paddingRight: string;\n    background: string;\n    bottom: string;\n    height: string;\n    paddingTop: string;\n    right: string;\n    borderLeftWidth: string;\n    borderLeft: string;\n    backgroundPosition: string;\n    backgroundColor: string;\n    widows: string;\n    lineHeight: string;\n    pageBreakInside: string;\n    borderTopWidth: string;\n    left: string;\n    outlineStyle: string;\n    borderTop: string;\n    paddingBottom: string;\n    outlineColor: string;\n    wordSpacing: string;\n    outline: string;\n    font: string;\n    marginLeft: string;\n    display: string;\n    maxHeight: string;\n    cssFloat: string;\n    letterSpacing: string;\n    borderSpacing: string;\n    backgroundRepeat: string;\n    fontSizeAdjust: string;\n    borderLeftColor: string;\n    borderWidth: string;\n    backgroundImage: string;\n    listStyleType: string;\n    whiteSpace: string;\n    fontStyle: string;\n    borderBottomColor: string;\n    minWidth: string;\n    position: string;\n    zIndex: string;\n    borderColor: string;\n    listStyle: string;\n    captionSide: string;\n    borderCollapse: string;\n    fontVariant: string;\n    quotes: string;\n    tableLayout: string;\n    unicodeBidi: string;\n    borderBottomWidth: string;\n    minHeight: string;\n    textDecoration: string;\n    fontSize: string;\n    border: string;\n    pageBreakBefore: string;\n    textAlign: string;\n    textTransform: string;\n    margin: string;\n    borderRightColor: string;\n}\n\ninterface MSImageResourceExtensions_HTMLInputElement {\n    dynsrc: string;\n    vrml: string;\n    lowsrc: string;\n    start: string;\n    loop: number;\n}\n\ninterface MSHTMLEmbedElementExtensions {\n    palette: string;\n    hidden: string;\n    pluginspage: string;\n    units: string;\n}\n\ninterface MSHTMLModElementExtensions {\n}\n\ninterface Element extends Node, NodeSelector, ElementTraversal, MSElementExtensions {\n    scrollTop: number;\n    clientLeft: number;\n    scrollLeft: number;\n    tagName: string;\n    clientWidth: number;\n    scrollWidth: number;\n    clientHeight: number;\n    clientTop: number;\n    scrollHeight: number;\n    getAttribute(name?: string): string;\n    getElementsByTagNameNS(namespaceURI: string, localName: string): NodeList;\n    hasAttributeNS(namespaceURI: string, localName: string): bool;\n    getBoundingClientRect(): ClientRect;\n    getAttributeNS(namespaceURI: string, localName: string): string;\n    getAttributeNodeNS(namespaceURI: string, localName: string): Attr;\n    setAttributeNodeNS(newAttr: Attr): Attr;\n    hasAttribute(name: string): bool;\n    removeAttribute(name?: string): void;\n    setAttributeNS(namespaceURI: string, qualifiedName: string, value: string): void;\n    getAttributeNode(name: string): Attr;\n    getElementsByTagName(name: string): NodeList;\n    setAttributeNode(newAttr: Attr): Attr;\n    getClientRects(): ClientRectList;\n    removeAttributeNode(oldAttr: Attr): Attr;\n    setAttribute(name?: string, value?: string): void;\n    removeAttributeNS(namespaceURI: string, localName: string): void;\n}\ndeclare var Element: {\n    prototype: Element;\n    new(): Element;\n}\n\ninterface SVGDocument {\n    rootElement: SVGSVGElement;\n}\n\ninterface HTMLNextIdElement extends HTMLElement {\n    n: string;\n}\ndeclare var HTMLNextIdElement: {\n    prototype: HTMLNextIdElement;\n    new(): HTMLNextIdElement;\n}\n\ninterface SVGPathSegMovetoRel extends SVGPathSeg {\n    y: number;\n    x: number;\n}\ndeclare var SVGPathSegMovetoRel: {\n    prototype: SVGPathSegMovetoRel;\n    new(): SVGPathSegMovetoRel;\n}\n\ninterface SVGLineElement extends SVGElement, SVGStylable, SVGTransformable, SVGLangSpace, SVGTests {\n    y1: SVGAnimatedLength;\n    x2: SVGAnimatedLength;\n    x1: SVGAnimatedLength;\n    y2: SVGAnimatedLength;\n}\ndeclare var SVGLineElement: {\n    prototype: SVGLineElement;\n    new(): SVGLineElement;\n}\n\ninterface HTMLParagraphElement extends HTMLElement, DOML2DeprecatedAlignmentStyle_HTMLParagraphElement, MSHTMLParagraphElementExtensions {\n}\ndeclare var HTMLParagraphElement: {\n    prototype: HTMLParagraphElement;\n    new(): HTMLParagraphElement;\n}\n\ninterface MSHTMLTextAreaElementExtensions {\n    status: any;\n    createTextRange(): TextRange;\n}\n\ninterface ErrorFunction {\n    (eventOrMessage: any, source: string, fileno: number): any;\n}\n\ninterface HTMLAreasCollection extends HTMLCollection {\n    remove(index?: number): void;\n    add(element: HTMLElement, before?: any): void;\n}\ndeclare var HTMLAreasCollection: {\n    prototype: HTMLAreasCollection;\n    new(): HTMLAreasCollection;\n}\n\ninterface SVGDescElement extends SVGElement, SVGStylable, SVGLangSpace {\n}\ndeclare var SVGDescElement: {\n    prototype: SVGDescElement;\n    new(): SVGDescElement;\n}\n\ninterface Node extends EventTarget {\n    nodeType: number;\n    previousSibling: Node;\n    localName: string;\n    namespaceURI: string;\n    textContent: string;\n    parentNode: Node;\n    nextSibling: Node;\n    nodeValue: string;\n    lastChild: Node;\n    childNodes: NodeList;\n    nodeName: string;\n    ownerDocument: Document;\n    attributes: Attr[];\n    firstChild: Node;\n    prefix: string;\n    removeChild(oldChild: Node): Node;\n    appendChild(newChild: Node): Node;\n    isSupported(feature: string, version: string): bool;\n    isEqualNode(arg: Node): bool;\n    lookupPrefix(namespaceURI: string): string;\n    isDefaultNamespace(namespaceURI: string): bool;\n    compareDocumentPosition(other: Node): number;\n    normalize(): void;\n    isSameNode(other: Node): bool;\n    hasAttributes(): bool;\n    lookupNamespaceURI(prefix: string): string;\n    cloneNode(deep?: bool): Node;\n    hasChildNodes(): bool;\n    replaceChild(newChild: Node, oldChild: Node): Node;\n    insertBefore(newChild: Node, refChild?: Node): Node;\n    ENTITY_REFERENCE_NODE: number;\n    ATTRIBUTE_NODE: number;\n    DOCUMENT_FRAGMENT_NODE: number;\n    TEXT_NODE: number;\n    ELEMENT_NODE: number;\n    COMMENT_NODE: number;\n    DOCUMENT_POSITION_DISCONNECTED: number;\n    DOCUMENT_POSITION_CONTAINED_BY: number;\n    DOCUMENT_POSITION_CONTAINS: number;\n    DOCUMENT_TYPE_NODE: number;\n    DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: number;\n    DOCUMENT_NODE: number;\n    ENTITY_NODE: number;\n    PROCESSING_INSTRUCTION_NODE: number;\n    CDATA_SECTION_NODE: number;\n    NOTATION_NODE: number;\n    DOCUMENT_POSITION_FOLLOWING: number;\n    DOCUMENT_POSITION_PRECEDING: number;\n}\ndeclare var Node: {\n    prototype: Node;\n    new(): Node;\n    ENTITY_REFERENCE_NODE: number;\n    ATTRIBUTE_NODE: number;\n    DOCUMENT_FRAGMENT_NODE: number;\n    TEXT_NODE: number;\n    ELEMENT_NODE: number;\n    COMMENT_NODE: number;\n    DOCUMENT_POSITION_DISCONNECTED: number;\n    DOCUMENT_POSITION_CONTAINED_BY: number;\n    DOCUMENT_POSITION_CONTAINS: number;\n    DOCUMENT_TYPE_NODE: number;\n    DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: number;\n    DOCUMENT_NODE: number;\n    ENTITY_NODE: number;\n    PROCESSING_INSTRUCTION_NODE: number;\n    CDATA_SECTION_NODE: number;\n    NOTATION_NODE: number;\n    DOCUMENT_POSITION_FOLLOWING: number;\n    DOCUMENT_POSITION_PRECEDING: number;\n}\n\ninterface MSHTMLLegendElementExtensions {\n}\n\ninterface MSCSSStyleDeclarationExtensions {\n    getAttribute(attributeName: string, flags?: number): any;\n    setAttribute(attributeName: string, AttributeValue: any, flags?: number): void;\n    removeAttribute(attributeName: string, flags?: number): bool;\n}\n\ninterface SVGPathSegCurvetoQuadraticSmoothRel extends SVGPathSeg {\n    y: number;\n    x: number;\n}\ndeclare var SVGPathSegCurvetoQuadraticSmoothRel: {\n    prototype: SVGPathSegCurvetoQuadraticSmoothRel;\n    new(): SVGPathSegCurvetoQuadraticSmoothRel;\n}\n\ninterface DOML2DeprecatedAlignmentStyle_HTMLTableRowElement {\n    align: string;\n}\n\ninterface DOML2DeprecatedBorderStyle_HTMLObjectElement {\n    border: string;\n}\n\ninterface MSHTMLSpanElementExtensions {\n}\n\ninterface MSHTMLObjectElementExtensions {\n    object: Object;\n    alt: string;\n    classid: string;\n    altHtml: string;\n    BaseHref: string;\n}\n\ninterface DOML2DeprecatedListSpaceReduction {\n    compact: bool;\n}\n\ninterface CSS3Properties {\n    textAlignLast: string;\n    textUnderlinePosition: string;\n    wordWrap: string;\n    borderTopLeftRadius: string;\n    backgroundClip: string;\n    msTransformOrigin: string;\n    opacity: string;\n    overflowY: string;\n    boxShadow: string;\n    backgroundSize: string;\n    wordBreak: string;\n    boxSizing: string;\n    rubyOverhang: string;\n    rubyAlign: string;\n    textJustify: string;\n    borderRadius: string;\n    overflowX: string;\n    borderTopRightRadius: string;\n    msTransform: string;\n    borderBottomLeftRadius: string;\n    rubyPosition: string;\n    borderBottomRightRadius: string;\n    backgroundOrigin: string;\n    textOverflow: string;\n}\n\ninterface MSScriptHost {\n}\ndeclare var MSScriptHost: {\n    prototype: MSScriptHost;\n    new(): MSScriptHost;\n}\n\ninterface SVGClipPathElement extends SVGElement, SVGUnitTypes, SVGStylable, SVGTransformable, SVGLangSpace, SVGTests {\n    clipPathUnits: SVGAnimatedEnumeration;\n}\ndeclare var SVGClipPathElement: {\n    prototype: SVGClipPathElement;\n    new(): SVGClipPathElement;\n}\n\ninterface MouseEvent extends UIEvent, MSMouseEventExtensions {\n    pageX: number;\n    offsetY: number;\n    x: number;\n    y: number;\n    altKey: bool;\n    metaKey: bool;\n    ctrlKey: bool;\n    offsetX: number;\n    screenX: number;\n    clientY: number;\n    shiftKey: bool;\n    screenY: number;\n    relatedTarget: EventTarget;\n    button: number;\n    pageY: number;\n    buttons: number;\n    clientX: number;\n    initMouseEvent(typeArg: string, canBubbleArg: bool, cancelableArg: bool, viewArg: AbstractView, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: bool, altKeyArg: bool, shiftKeyArg: bool, metaKeyArg: bool, buttonArg: number, relatedTargetArg: EventTarget): void;\n    getModifierState(keyArg: string): bool;\n}\ndeclare var MouseEvent: {\n    prototype: MouseEvent;\n    new(): MouseEvent;\n}\n\ninterface DOML2DeprecatedAlignmentStyle_HTMLTableElement {\n    align: string;\n}\n\ninterface RangeException {\n    code: number;\n    message: string;\n    toString(): string;\n    INVALID_NODE_TYPE_ERR: number;\n    BAD_BOUNDARYPOINTS_ERR: number;\n}\ndeclare var RangeException: {\n    prototype: RangeException;\n    new(): RangeException;\n    INVALID_NODE_TYPE_ERR: number;\n    BAD_BOUNDARYPOINTS_ERR: number;\n}\n\ninterface DOML2DeprecatedAlignmentStyle_HTMLHRElement {\n    align: string;\n}\n\ninterface SVGTextPositioningElement extends SVGTextContentElement {\n    y: SVGAnimatedLengthList;\n    rotate: SVGAnimatedNumberList;\n    dy: SVGAnimatedLengthList;\n    x: SVGAnimatedLengthList;\n    dx: SVGAnimatedLengthList;\n}\ndeclare var SVGTextPositioningElement: {\n    prototype: SVGTextPositioningElement;\n    new(): SVGTextPositioningElement;\n}\n\ninterface HTMLAppletElement extends HTMLElement, DOML2DeprecatedWidthStyle_HTMLAppletElement, DOML2DeprecatedMarginStyle_HTMLObjectElement, MSHTMLAppletElementExtensions, MSDataBindingExtensions, MSDataBindingRecordSetExtensions, DOML2DeprecatedAlignmentStyle_HTMLObjectElement {\n    object: string;\n    archive: string;\n    codeBase: string;\n    alt: string;\n    name: string;\n    height: string;\n    code: string;\n}\ndeclare var HTMLAppletElement: {\n    prototype: HTMLAppletElement;\n    new(): HTMLAppletElement;\n}\n\ninterface MSHTMLFieldSetElementExtensions extends DOML2DeprecatedAlignmentStyle_HTMLFieldSetElement {\n}\n\ninterface DocumentEvent {\n    createEvent(eventInterface: string): Event;\n}\n\ninterface MSHTMLUnknownElementExtensions {\n}\n\ninterface TextMetrics {\n    width: number;\n}\ndeclare var TextMetrics: {\n    prototype: TextMetrics;\n    new(): TextMetrics;\n}\n\ninterface DOML2DeprecatedWordWrapSuppression_HTMLBodyElement {\n    noWrap: bool;\n}\n\ninterface HTMLOListElement extends HTMLElement, DOML2DeprecatedListNumberingAndBulletStyle, DOML2DeprecatedListSpaceReduction, MSHTMLOListElementExtensions {\n    start: number;\n}\ndeclare var HTMLOListElement: {\n    prototype: HTMLOListElement;\n    new(): HTMLOListElement;\n}\n\ninterface MSHTMLTableCaptionElementExtensions {\n    vAlign: string;\n}\n\ninterface SVGAnimatedString {\n    animVal: string;\n    baseVal: string;\n}\ndeclare var SVGAnimatedString: {\n    prototype: SVGAnimatedString;\n    new(): SVGAnimatedString;\n}\n\ninterface SVGPathSegLinetoVerticalRel extends SVGPathSeg {\n    y: number;\n}\ndeclare var SVGPathSegLinetoVerticalRel: {\n    prototype: SVGPathSegLinetoVerticalRel;\n    new(): SVGPathSegLinetoVerticalRel;\n}\n\ninterface CDATASection extends Text {\n}\ndeclare var CDATASection: {\n    prototype: CDATASection;\n    new(): CDATASection;\n}\n\ninterface StyleMedia {\n    type: string;\n    matchMedium(mediaquery: string): bool;\n}\ndeclare var StyleMedia: {\n    prototype: StyleMedia;\n    new(): StyleMedia;\n}\n\ninterface TextRange {\n    boundingLeft: number;\n    htmlText: string;\n    offsetLeft: number;\n    boundingWidth: number;\n    boundingHeight: number;\n    boundingTop: number;\n    text: string;\n    offsetTop: number;\n    moveToPoint(x: number, y: number): void;\n    queryCommandValue(cmdID: string): any;\n    getBookmark(): string;\n    move(Unit: string, Count?: number): number;\n    queryCommandIndeterm(cmdID: string): bool;\n    scrollIntoView(fStart?: bool): void;\n    findText(string: string, count?: number, flags?: number): bool;\n    execCommand(cmdID: string, showUI?: bool, value?: any): bool;\n    getBoundingClientRect(): ClientRect;\n    moveToBookmark(Bookmark: string): bool;\n    isEqual(range: TextRange): bool;\n    duplicate(): TextRange;\n    collapse(Start?: bool): void;\n    queryCommandText(cmdID: string): string;\n    select(): void;\n    pasteHTML(html: string): void;\n    inRange(range: TextRange): bool;\n    moveEnd(Unit: string, Count?: number): number;\n    getClientRects(): ClientRectList;\n    moveStart(Unit: string, Count?: number): number;\n    parentElement(): Element;\n    queryCommandState(cmdID: string): bool;\n    compareEndPoints(how: string, sourceRange: TextRange): number;\n    execCommandShowHelp(cmdID: string): bool;\n    moveToElementText(element: Element): void;\n    expand(Unit: string): bool;\n    queryCommandSupported(cmdID: string): bool;\n    setEndPoint(how: string, SourceRange: TextRange): void;\n    queryCommandEnabled(cmdID: string): bool;\n}\ndeclare var TextRange: {\n    prototype: TextRange;\n    new(): TextRange;\n}\n\ninterface HTMLSelectElement extends HTMLElement, MSHTMLCollectionExtensions, MSDataBindingExtensions, MSHTMLSelectElementExtensions {\n    options: HTMLSelectElement;\n    value: string;\n    form: HTMLFormElement;\n    name: string;\n    size: number;\n    length: number;\n    selectedIndex: number;\n    multiple: bool;\n    type: string;\n    remove(index?: number): void;\n    add(element: HTMLElement, before?: any): void;\n    item(name?: any, index?: any): any;\n    (name: any, index: any): any;\n    namedItem(name: string): any;\n    [name: string]: any;\n    (name: string): any;\n}\ndeclare var HTMLSelectElement: {\n    prototype: HTMLSelectElement;\n    new(): HTMLSelectElement;\n}\n\ninterface CSSStyleSheet extends StyleSheet, MSCSSStyleSheetExtensions {\n    ownerRule: CSSRule;\n    cssRules: CSSRuleList;\n    insertRule(rule: string, index?: number): number;\n    deleteRule(index?: number): void;\n}\ndeclare var CSSStyleSheet: {\n    prototype: CSSStyleSheet;\n    new(): CSSStyleSheet;\n}\n\ninterface HTMLBlockElement extends HTMLElement, DOML2DeprecatedTextFlowControl_HTMLBlockElement, DOML2DeprecatedWidthStyle_HTMLBlockElement {\n    cite: string;\n}\ndeclare var HTMLBlockElement: {\n    prototype: HTMLBlockElement;\n    new(): HTMLBlockElement;\n}\n\ninterface SVGTests {\n    requiredFeatures: SVGStringList;\n    requiredExtensions: SVGStringList;\n    systemLanguage: SVGStringList;\n    hasExtension(extension: string): bool;\n}\n\ninterface MSSelection {\n    type: string;\n    typeDetail: string;\n    createRange(): TextRange;\n    clear(): void;\n    createRangeCollection(): TextRangeCollection;\n    empty(): void;\n}\ndeclare var MSSelection: {\n    prototype: MSSelection;\n    new(): MSSelection;\n}\n\ninterface MSHTMLDListElementExtensions {\n}\n\ninterface HTMLMetaElement extends HTMLElement, MSHTMLMetaElementExtensions {\n    httpEquiv: string;\n    name: string;\n    content: string;\n    scheme: string;\n}\ndeclare var HTMLMetaElement: {\n    prototype: HTMLMetaElement;\n    new(): HTMLMetaElement;\n}\n\ninterface Selection {\n    isCollapsed: bool;\n    anchorNode: Node;\n    focusNode: Node;\n    anchorOffset: number;\n    focusOffset: number;\n    rangeCount: number;\n    addRange(range: Range): void;\n    collapseToEnd(): void;\n    toString(): string;\n    selectAllChildren(parentNode: Node): void;\n    getRangeAt(index: number): Range;\n    collapse(parentNode: Node, offset: number): void;\n    removeAllRanges(): void;\n    collapseToStart(): void;\n    deleteFromDocument(): void;\n    removeRange(range: Range): void;\n}\ndeclare var Selection: {\n    prototype: Selection;\n    new(): Selection;\n}\n\ninterface SVGAnimatedAngle {\n    animVal: SVGAngle;\n    baseVal: SVGAngle;\n}\ndeclare var SVGAnimatedAngle: {\n    prototype: SVGAnimatedAngle;\n    new(): SVGAnimatedAngle;\n}\n\ninterface SVGPatternElement extends SVGElement, SVGUnitTypes, SVGStylable, SVGLangSpace, SVGTests, SVGFitToViewBox, SVGURIReference {\n    patternUnits: SVGAnimatedEnumeration;\n    y: SVGAnimatedLength;\n    width: SVGAnimatedLength;\n    x: SVGAnimatedLength;\n    patternContentUnits: SVGAnimatedEnumeration;\n    patternTransform: SVGAnimatedTransformList;\n    height: SVGAnimatedLength;\n}\ndeclare var SVGPatternElement: {\n    prototype: SVGPatternElement;\n    new(): SVGPatternElement;\n}\n\ninterface SVGScriptElement extends SVGElement, SVGURIReference {\n    type: string;\n}\ndeclare var SVGScriptElement: {\n    prototype: SVGScriptElement;\n    new(): SVGScriptElement;\n}\n\ninterface HTMLDDElement extends HTMLElement, DOML2DeprecatedWordWrapSuppression_HTMLDDElement {\n}\ndeclare var HTMLDDElement: {\n    prototype: HTMLDDElement;\n    new(): HTMLDDElement;\n}\n\ninterface NodeIterator {\n    whatToShow: number;\n    filter: NodeFilterCallback;\n    root: Node;\n    expandEntityReferences: bool;\n    nextNode(): Node;\n    detach(): void;\n    previousNode(): Node;\n}\ndeclare var NodeIterator: {\n    prototype: NodeIterator;\n    new(): NodeIterator;\n}\n\ninterface CSSStyleRule extends CSSRule, MSCSSStyleRuleExtensions {\n    selectorText: string;\n    style: MSStyleCSSProperties;\n}\ndeclare var CSSStyleRule: {\n    prototype: CSSStyleRule;\n    new(): CSSStyleRule;\n}\n\ninterface MSDataBindingRecordSetReadonlyExtensions {\n    recordset: Object;\n    namedRecordset(dataMember: string, hierarchy?: any): Object;\n}\n\ninterface HTMLLinkElement extends HTMLElement, MSLinkStyleExtensions, LinkStyle {\n    rel: string;\n    target: string;\n    href: string;\n    media: string;\n    rev: string;\n    type: string;\n    charset: string;\n    hreflang: string;\n}\ndeclare var HTMLLinkElement: {\n    prototype: HTMLLinkElement;\n    new(): HTMLLinkElement;\n}\n\ninterface SVGViewElement extends SVGElement, SVGZoomAndPan, SVGFitToViewBox {\n    viewTarget: SVGStringList;\n}\ndeclare var SVGViewElement: {\n    prototype: SVGViewElement;\n    new(): SVGViewElement;\n}\n\ninterface MSHTMLAppletElementExtensions extends DOML2DeprecatedBorderStyle_HTMLObjectElement {\n    codeType: string;\n    standby: string;\n    classid: string;\n    useMap: string;\n    form: HTMLFormElement;\n    data: string;\n    contentDocument: Document;\n    altHtml: string;\n    declare: bool;\n    type: string;\n    BaseHref: string;\n}\n\ninterface SVGLocatable {\n    farthestViewportElement: SVGElement;\n    nearestViewportElement: SVGElement;\n    getBBox(): SVGRect;\n    getTransformToElement(element: SVGElement): SVGMatrix;\n    getCTM(): SVGMatrix;\n    getScreenCTM(): SVGMatrix;\n}\n\ninterface HTMLFontElement extends HTMLElement, DOML2DeprecatedColorProperty, MSHTMLFontElementExtensions, DOML2DeprecatedSizeProperty {\n    face: string;\n}\ndeclare var HTMLFontElement: {\n    prototype: HTMLFontElement;\n    new(): HTMLFontElement;\n}\n\ninterface MSHTMLTableElementExtensions {\n    cells: HTMLCollection;\n    height: any;\n    cols: number;\n    moveRow(indexFrom?: number, indexTo?: number): Object;\n}\n\ninterface SVGTitleElement extends SVGElement, SVGStylable, SVGLangSpace {\n}\ndeclare var SVGTitleElement: {\n    prototype: SVGTitleElement;\n    new(): SVGTitleElement;\n}\n\ninterface ControlRangeCollection {\n    length: number;\n    queryCommandValue(cmdID: string): any;\n    remove(index: number): void;\n    add(item: Element): void;\n    queryCommandIndeterm(cmdID: string): bool;\n    scrollIntoView(varargStart?: any): void;\n    item(index: number): Element;\n    [index: number]: Element;\n    execCommand(cmdID: string, showUI?: bool, value?: any): bool;\n    addElement(item: Element): void;\n    queryCommandState(cmdID: string): bool;\n    queryCommandSupported(cmdID: string): bool;\n    queryCommandEnabled(cmdID: string): bool;\n    queryCommandText(cmdID: string): string;\n    select(): void;\n}\ndeclare var ControlRangeCollection: {\n    prototype: ControlRangeCollection;\n    new(): ControlRangeCollection;\n}\n\ninterface DOML2DeprecatedAlignmentStyle_HTMLImageElement {\n    align: string;\n}\n\ninterface MSHTMLFrameElementExtensions {\n    width: any;\n    contentWindow: Window;\n    onload: (ev: Event) => any;\n    frameBorder: string;\n    height: any;\n    border: string;\n    frameSpacing: any;\n}\n\ninterface MSNamespaceInfo extends MSEventAttachmentTarget {\n    urn: string;\n    onreadystatechange: (ev: Event) => any;\n    name: string;\n    readyState: string;\n    doImport(implementationUrl: string): void;\n}\ndeclare var MSNamespaceInfo: {\n    prototype: MSNamespaceInfo;\n    new(): MSNamespaceInfo;\n}\n\ninterface WindowSessionStorage {\n    sessionStorage: Storage;\n}\n\ninterface SVGAnimatedTransformList {\n    animVal: SVGTransformList;\n    baseVal: SVGTransformList;\n}\ndeclare var SVGAnimatedTransformList: {\n    prototype: SVGAnimatedTransformList;\n    new(): SVGAnimatedTransformList;\n}\n\ninterface HTMLTableCaptionElement extends HTMLElement, MSHTMLTableCaptionElementExtensions, DOML2DeprecatedAlignmentStyle_HTMLTableCaptionElement {\n}\ndeclare var HTMLTableCaptionElement: {\n    prototype: HTMLTableCaptionElement;\n    new(): HTMLTableCaptionElement;\n}\n\ninterface HTMLOptionElement extends HTMLElement, MSDataBindingExtensions {\n    index: number;\n    defaultSelected: bool;\n    value: string;\n    text: string;\n    form: HTMLFormElement;\n    label: string;\n    selected: bool;\n}\ndeclare var HTMLOptionElement: {\n    prototype: HTMLOptionElement;\n    new(): HTMLOptionElement;\n}\n\ninterface HTMLMapElement extends HTMLElement {\n    name: string;\n    areas: HTMLAreasCollection;\n}\ndeclare var HTMLMapElement: {\n    prototype: HTMLMapElement;\n    new(): HTMLMapElement;\n}\n\ninterface HTMLMenuElement extends HTMLElement, DOML2DeprecatedListSpaceReduction, MSHTMLMenuElementExtensions {\n    type: string;\n}\ndeclare var HTMLMenuElement: {\n    prototype: HTMLMenuElement;\n    new(): HTMLMenuElement;\n}\n\ninterface MouseWheelEvent extends MouseEvent {\n    wheelDelta: number;\n    initMouseWheelEvent(typeArg: string, canBubbleArg: bool, cancelableArg: bool, viewArg: AbstractView, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, buttonArg: number, relatedTargetArg: EventTarget, modifiersListArg: string, wheelDeltaArg: number): void;\n}\ndeclare var MouseWheelEvent: {\n    prototype: MouseWheelEvent;\n    new(): MouseWheelEvent;\n}\n\ninterface SVGFitToViewBox {\n    viewBox: SVGAnimatedRect;\n    preserveAspectRatio: SVGAnimatedPreserveAspectRatio;\n}\n\ninterface MSHTMLAnchorElementExtensions {\n    nameProp: string;\n    protocolLong: string;\n    urn: string;\n    mimeType: string;\n    Methods: string;\n}\n\ninterface SVGPointList {\n    numberOfItems: number;\n    replaceItem(newItem: SVGPoint, index: number): SVGPoint;\n    getItem(index: number): SVGPoint;\n    clear(): void;\n    appendItem(newItem: SVGPoint): SVGPoint;\n    initialize(newItem: SVGPoint): SVGPoint;\n    removeItem(index: number): SVGPoint;\n    insertItemBefore(newItem: SVGPoint, index: number): SVGPoint;\n}\ndeclare var SVGPointList: {\n    prototype: SVGPointList;\n    new(): SVGPointList;\n}\n\ninterface MSElementCSSInlineStyleExtensions {\n    doScroll(component?: any): void;\n    componentFromPoint(x: number, y: number): string;\n}\n\ninterface SVGAnimatedLengthList {\n    animVal: SVGLengthList;\n    baseVal: SVGLengthList;\n}\ndeclare var SVGAnimatedLengthList: {\n    prototype: SVGAnimatedLengthList;\n    new(): SVGAnimatedLengthList;\n}\n\ninterface MSHTMLTableDataCellElementExtensions {\n}\n\ninterface Window extends ViewCSS, MSEventAttachmentTarget, MSWindowExtensions, WindowPerformance, ScreenView, EventTarget, WindowLocalStorage, WindowSessionStorage, WindowTimers {\n    ondragend: (ev: DragEvent) => any;\n    onkeydown: (ev: KeyboardEvent) => any;\n    ondragover: (ev: DragEvent) => any;\n    onkeyup: (ev: KeyboardEvent) => any;\n    onreset: (ev: Event) => any;\n    onmouseup: (ev: MouseEvent) => any;\n    ondragstart: (ev: DragEvent) => any;\n    ondrag: (ev: DragEvent) => any;\n    onmouseover: (ev: MouseEvent) => any;\n    ondragleave: (ev: DragEvent) => any;\n    history: History;\n    name: string;\n    onafterprint: (ev: Event) => any;\n    onpause: (ev: Event) => any;\n    onbeforeprint: (ev: Event) => any;\n    top: Window;\n    onmousedown: (ev: MouseEvent) => any;\n    onseeked: (ev: Event) => any;\n    opener: Window;\n    onclick: (ev: MouseEvent) => any;\n    onwaiting: (ev: Event) => any;\n    ononline: (ev: Event) => any;\n    ondurationchange: (ev: Event) => any;\n    frames: Window;\n    onblur: (ev: FocusEvent) => any;\n    onemptied: (ev: Event) => any;\n    onseeking: (ev: Event) => any;\n    oncanplay: (ev: Event) => any;\n    onstalled: (ev: Event) => any;\n    onmousemove: (ev: MouseEvent) => any;\n    onoffline: (ev: Event) => any;\n    length: number;\n    onbeforeunload: (ev: BeforeUnloadEvent) => any;\n    onratechange: (ev: Event) => any;\n    onstorage: (ev: StorageEvent) => any;\n    onloadstart: (ev: Event) => any;\n    ondragenter: (ev: DragEvent) => any;\n    onsubmit: (ev: Event) => any;\n    self: Window;\n    onprogress: (ev: any) => any;\n    ondblclick: (ev: MouseEvent) => any;\n    oncontextmenu: (ev: MouseEvent) => any;\n    onchange: (ev: Event) => any;\n    onloadedmetadata: (ev: Event) => any;\n    onplay: (ev: Event) => any;\n    onerror: ErrorFunction;\n    onplaying: (ev: Event) => any;\n    parent: Window;\n    location: Location;\n    oncanplaythrough: (ev: Event) => any;\n    onabort: (ev: UIEvent) => any;\n    onreadystatechange: (ev: Event) => any;\n    onkeypress: (ev: KeyboardEvent) => any;\n    frameElement: Element;\n    onloadeddata: (ev: Event) => any;\n    onsuspend: (ev: Event) => any;\n    window: Window;\n    onfocus: (ev: FocusEvent) => any;\n    onmessage: (ev: MessageEvent) => any;\n    ontimeupdate: (ev: Event) => any;\n    onresize: (ev: UIEvent) => any;\n    navigator: Navigator;\n    onselect: (ev: UIEvent) => any;\n    ondrop: (ev: DragEvent) => any;\n    onmouseout: (ev: MouseEvent) => any;\n    onended: (ev: Event) => any;\n    onhashchange: (ev: Event) => any;\n    onunload: (ev: Event) => any;\n    onscroll: (ev: UIEvent) => any;\n    onmousewheel: (ev: MouseWheelEvent) => any;\n    onload: (ev: Event) => any;\n    onvolumechange: (ev: Event) => any;\n    oninput: (ev: Event) => any;\n    alert(message?: string): void;\n    focus(): void;\n    print(): void;\n    prompt(message?: string, defaul?: string): string;\n    toString(): string;\n    open(url?: string, target?: string, features?: string, replace?: bool): Window;\n    close(): void;\n    confirm(message?: string): bool;\n    postMessage(message: any, targetOrigin: string, ports?: any): void;\n    showModalDialog(url?: string, argument?: any, options?: any): any;\n    blur(): void;\n    getSelection(): Selection;\n}\ndeclare var Window: {\n    prototype: Window;\n    new(): Window;\n}\n\ninterface SVGAnimatedPreserveAspectRatio {\n    animVal: SVGPreserveAspectRatio;\n    baseVal: SVGPreserveAspectRatio;\n}\ndeclare var SVGAnimatedPreserveAspectRatio: {\n    prototype: SVGAnimatedPreserveAspectRatio;\n    new(): SVGAnimatedPreserveAspectRatio;\n}\n\ninterface MSSiteModeEvent extends Event {\n    buttonID: number;\n    actionURL: string;\n}\ndeclare var MSSiteModeEvent: {\n    prototype: MSSiteModeEvent;\n    new(): MSSiteModeEvent;\n}\n\ninterface MSCSSStyleRuleExtensions {\n    readOnly: bool;\n}\n\ninterface StyleSheetPageList {\n    length: number;\n    item(index: number): StyleSheetPage;\n    [index: number]: StyleSheetPage;\n}\ndeclare var StyleSheetPageList: {\n    prototype: StyleSheetPageList;\n    new(): StyleSheetPageList;\n}\n\ninterface HTMLCollection extends MSHTMLCollectionExtensions {\n    length: number;\n    item(nameOrIndex?: any, optionalIndex?: any): Element;\n    (nameOrIndex: any, optionalIndex: any): Element;\n    namedItem(name: string): Element;\n    [index: number]: Element;\n    [name: string]: Element;\n    (name: string): Element;\n}\ndeclare var HTMLCollection: {\n    prototype: HTMLCollection;\n    new(): HTMLCollection;\n}\n\ninterface MSCSSProperties extends CSSStyleDeclaration, MSCSSStyleDeclarationExtensions {\n    scrollbarShadowColor: string;\n    scrollbarHighlightColor: string;\n    layoutGridChar: string;\n    layoutGridType: string;\n    textAutospace: string;\n    textKashidaSpace: string;\n    writingMode: string;\n    scrollbarFaceColor: string;\n    backgroundPositionY: string;\n    lineBreak: string;\n    imeMode: string;\n    msBlockProgression: string;\n    layoutGridLine: string;\n    scrollbarBaseColor: string;\n    layoutGrid: string;\n    layoutFlow: string;\n    textKashida: string;\n    filter: string;\n    zoom: string;\n    scrollbarArrowColor: string;\n    behavior: string;\n    backgroundPositionX: string;\n    accelerator: string;\n    layoutGridMode: string;\n    textJustifyTrim: string;\n    scrollbar3dLightColor: string;\n    msInterpolationMode: string;\n    scrollbarTrackColor: string;\n    scrollbarDarkShadowColor: string;\n    styleFloat: string;\n}\ndeclare var MSCSSProperties: {\n    prototype: MSCSSProperties;\n    new(): MSCSSProperties;\n}\n\ninterface HTMLImageElement extends HTMLElement, DOML2DeprecatedMarginStyle, DOML2DeprecatedBorderStyle, DOML2DeprecatedAlignmentStyle_HTMLImageElement, MSImageResourceExtensions, MSHTMLImageElementExtensions, MSDataBindingExtensions, MSResourceMetadata {\n   width: number;\n    naturalHeight: number;\n    alt: string;\n    src: string;\n    useMap: string;\n    naturalWidth: number;\n    name: string;\n    height: number;\n    longDesc: string;\n    isMap: bool;\n    complete: bool;\n}\ndeclare var HTMLImageElement: {\n    prototype: HTMLImageElement;\n    new(): HTMLImageElement;\n}\n\ninterface HTMLAreaElement extends HTMLElement, MSHTMLAreaElementExtensions {\n    protocol: string;\n    search: string;\n    alt: string;\n    coords: string;\n    hostname: string;\n    port: string;\n    pathname: string;\n    host: string;\n    hash: string;\n    target: string;\n    href: string;\n    noHref: bool;\n    shape: string;\n    toString(): string;\n}\ndeclare var HTMLAreaElement: {\n    prototype: HTMLAreaElement;\n    new(): HTMLAreaElement;\n}\n\ninterface EventTarget {\n    removeEventListener(type: string, listener: EventListener, useCapture?: bool): void;\n    addEventListener(type: string, listener: EventListener, useCapture?: bool): void;\n    dispatchEvent(evt: Event): bool;\n}\n\ninterface SVGAngle {\n    valueAsString: string;\n    valueInSpecifiedUnits: number;\n    value: number;\n    unitType: number;\n    newValueSpecifiedUnits(unitType: number, valueInSpecifiedUnits: number): void;\n    convertToSpecifiedUnits(unitType: number): void;\n    SVG_ANGLETYPE_RAD: number;\n    SVG_ANGLETYPE_UNKNOWN: number;\n    SVG_ANGLETYPE_UNSPECIFIED: number;\n    SVG_ANGLETYPE_DEG: number;\n    SVG_ANGLETYPE_GRAD: number;\n}\ndeclare var SVGAngle: {\n    prototype: SVGAngle;\n    new(): SVGAngle;\n    SVG_ANGLETYPE_RAD: number;\n    SVG_ANGLETYPE_UNKNOWN: number;\n    SVG_ANGLETYPE_UNSPECIFIED: number;\n    SVG_ANGLETYPE_DEG: number;\n    SVG_ANGLETYPE_GRAD: number;\n}\n\ninterface HTMLButtonElement extends HTMLElement, MSHTMLButtonElementExtensions, MSDataBindingExtensions {\n    value: string;\n    form: HTMLFormElement;\n    name: string;\n    type: string;\n}\ndeclare var HTMLButtonElement: {\n    prototype: HTMLButtonElement;\n    new(): HTMLButtonElement;\n}\n\ninterface MSHTMLLabelElementExtensions {\n}\n\ninterface HTMLSourceElement extends HTMLElement {\n    src: string;\n    media: string;\n    type: string;\n}\ndeclare var HTMLSourceElement: {\n    prototype: HTMLSourceElement;\n    new(): HTMLSourceElement;\n}\n\ninterface CanvasGradient {\n    addColorStop(offset: number, color: string): void;\n}\ndeclare var CanvasGradient: {\n    prototype: CanvasGradient;\n    new(): CanvasGradient;\n}\n\ninterface KeyboardEvent extends UIEvent, KeyboardEventExtensions {\n    location: number;\n    shiftKey: bool;\n    locale: string;\n    key: string;\n    altKey: bool;\n    metaKey: bool;\n    char: string;\n    ctrlKey: bool;\n    repeat: bool;\n    getModifierState(keyArg: string): bool;\n    initKeyboardEvent(typeArg: string, canBubbleArg: bool, cancelableArg: bool, viewArg: AbstractView, keyArg: string, locationArg: number, modifiersListArg: string, repeat: bool, locale: string): void;\n    DOM_KEY_LOCATION_RIGHT: number;\n    DOM_KEY_LOCATION_STANDARD: number;\n    DOM_KEY_LOCATION_LEFT: number;\n    DOM_KEY_LOCATION_NUMPAD: number;\n    DOM_KEY_LOCATION_JOYSTICK: number;\n    DOM_KEY_LOCATION_MOBILE: number;\n}\ndeclare var KeyboardEvent: {\n    prototype: KeyboardEvent;\n    new(): KeyboardEvent;\n    DOM_KEY_LOCATION_RIGHT: number;\n    DOM_KEY_LOCATION_STANDARD: number;\n    DOM_KEY_LOCATION_LEFT: number;\n    DOM_KEY_LOCATION_NUMPAD: number;\n    DOM_KEY_LOCATION_JOYSTICK: number;\n    DOM_KEY_LOCATION_MOBILE: number;\n}\n\ninterface Document extends Node, DocumentStyle, DocumentRange, HTMLDocument, NodeSelector, DocumentEvent, DocumentTraversal, DocumentView, SVGDocument {\n    doctype: DocumentType;\n    xmlVersion: string;\n    implementation: DOMImplementation;\n    xmlEncoding: string;\n    xmlStandalone: bool;\n    documentElement: HTMLElement;\n    inputEncoding: string;\n    createElement(tagName: string): HTMLElement;\n    adoptNode(source: Node): Node;\n    createComment(data: string): Comment;\n    createDocumentFragment(): DocumentFragment;\n    getElementsByTagName(tagname: string): NodeList;\n    getElementsByTagNameNS(namespaceURI: string, localName: string): NodeList;\n    createProcessingInstruction(target: string, data: string): ProcessingInstruction;\n    createElementNS(namespaceURI: string, qualifiedName: string): Element;\n    createAttribute(name: string): Attr;\n    createTextNode(data: string): Text;\n    importNode(importedNode: Node, deep: bool): Node;\n    createCDATASection(data: string): CDATASection;\n    createAttributeNS(namespaceURI: string, qualifiedName: string): Attr;\n    getElementById(elementId: string): HTMLElement;\n}\ndeclare var Document: {\n    prototype: Document;\n    new(): Document;\n}\n\ninterface MessageEvent extends Event {\n    source: Window;\n    origin: string;\n    data: any;\n    initMessageEvent(typeArg: string, canBubbleArg: bool, cancelableArg: bool, dataArg: any, originArg: string, lastEventIdArg: string, sourceArg: Window): void;\n}\ndeclare var MessageEvent: {\n    prototype: MessageEvent;\n    new(): MessageEvent;\n}\n\ninterface SVGElement extends Element, SVGElementEventHandlers {\n    xmlbase: string;\n    viewportElement: SVGElement;\n    id: string;\n    ownerSVGElement: SVGSVGElement;\n}\ndeclare var SVGElement: {\n    prototype: SVGElement;\n    new(): SVGElement;\n}\n\ninterface HTMLScriptElement extends HTMLElement {\n    defer: bool;\n    text: string;\n    src: string;\n    htmlFor: string;\n    charset: string;\n    type: string;\n    event: string;\n}\ndeclare var HTMLScriptElement: {\n    prototype: HTMLScriptElement;\n    new(): HTMLScriptElement;\n}\n\ninterface MSHTMLBodyElementExtensions extends DOML2DeprecatedWordWrapSuppression_HTMLBodyElement {\n    scroll: string;\n    bottomMargin: any;\n    topMargin: any;\n    rightMargin: any;\n    bgProperties: string;\n    leftMargin: any;\n    createTextRange(): TextRange;\n}\n\ninterface HTMLTableRowElement extends HTMLElement, MSBorderColorHighlightStyle_HTMLTableRowElement, HTMLTableAlignment, MSBorderColorStyle_HTMLTableRowElement, DOML2DeprecatedAlignmentStyle_HTMLTableRowElement, DOML2DeprecatedBackgroundColorStyle, MSHTMLTableRowElementExtensions {\n    rowIndex: number;\n    cells: HTMLCollection;\n    sectionRowIndex: number;\n    deleteCell(index?: number): void;\n    insertCell(index?: number): HTMLElement;\n}\ndeclare var HTMLTableRowElement: {\n    prototype: HTMLTableRowElement;\n    new(): HTMLTableRowElement;\n}\n\ninterface MSCommentExtensions {\n    text: string;\n}\n\ninterface DOML2DeprecatedMarginStyle_HTMLMarqueeElement {\n    vspace: number;\n    hspace: number;\n}\n\ninterface MSCSSRuleList {\n    length: number;\n    item(index?: number): CSSStyleRule;\n    [index: number]: CSSStyleRule;\n}\ndeclare var MSCSSRuleList: {\n    prototype: MSCSSRuleList;\n    new(): MSCSSRuleList;\n}\n\ninterface CanvasRenderingContext2D {\n    shadowOffsetX: number;\n    lineWidth: number;\n    miterLimit: number;\n    canvas: HTMLCanvasElement;\n    strokeStyle: any;\n    font: string;\n    globalAlpha: number;\n    globalCompositeOperation: string;\n    shadowOffsetY: number;\n    fillStyle: any;\n    lineCap: string;\n    shadowBlur: number;\n    textAlign: string;\n    textBaseline: string;\n    shadowColor: string;\n    lineJoin: string;\n    restore(): void;\n    setTransform(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number): void;\n    save(): void;\n    arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise?: bool): void;\n    measureText(text: string): TextMetrics;\n    isPointInPath(x: number, y: number): bool;\n    quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void;\n    putImageData(imagedata: ImageData, dx: number, dy: number, dirtyX?: number, dirtyY?: number, dirtyWidth?: number, dirtyHeight?: number): void;\n    rotate(angle: number): void;\n    fillText(text: string, x: number, y: number, maxWidth?: number): void;\n    translate(x: number, y: number): void;\n    scale(x: number, y: number): void;\n    createRadialGradient(x0: number, y0: number, r0: number, x1: number, y1: number, r1: number): CanvasGradient;\n    lineTo(x: number, y: number): void;\n    fill(): void;\n    createPattern(image: HTMLElement, repetition: string): CanvasPattern;\n    closePath(): void;\n    rect(x: number, y: number, w: number, h: number): void;\n    clip(): void;\n    createImageData(imageDataOrSw: any, sh?: number): ImageData;\n    clearRect(x: number, y: number, w: number, h: number): void;\n    moveTo(x: number, y: number): void;\n    getImageData(sx: number, sy: number, sw: number, sh: number): ImageData;\n    fillRect(x: number, y: number, w: number, h: number): void;\n    bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void;\n    drawImage(image: HTMLElement, offsetX: number, offsetY: number, width?: number, height?: number, canvasOffsetX?: number, canvasOffsetY?: number, canvasImageWidth?: number, canvasImageHeight?: number): void;\n    transform(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number): void;\n    stroke(): void;\n    strokeRect(x: number, y: number, w: number, h: number): void;\n    strokeText(text: string, x: number, y: number, maxWidth?: number): void;\n    beginPath(): void;\n    arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void;\n    createLinearGradient(x0: number, y0: number, x1: number, y1: number): CanvasGradient;\n}\ndeclare var CanvasRenderingContext2D: {\n    prototype: CanvasRenderingContext2D;\n    new(): CanvasRenderingContext2D;\n}\n\ninterface SVGPathSegLinetoHorizontalAbs extends SVGPathSeg {\n    x: number;\n}\ndeclare var SVGPathSegLinetoHorizontalAbs: {\n    prototype: SVGPathSegLinetoHorizontalAbs;\n    new(): SVGPathSegLinetoHorizontalAbs;\n}\n\ninterface DOML2DeprecatedAlignmentStyle_HTMLObjectElement {\n    align: string;\n}\n\ninterface DOML2DeprecatedBorderStyle_MSHTMLIFrameElementExtensions {\n    border: string;\n}\n\ninterface MSHTMLElementRangeExtensions {\n    createControlRange(): ControlRangeCollection;\n}\n\ninterface SVGPathSegArcAbs extends SVGPathSeg {\n    y: number;\n    sweepFlag: bool;\n    r2: number;\n    x: number;\n    angle: number;\n    r1: number;\n    largeArcFlag: bool;\n}\ndeclare var SVGPathSegArcAbs: {\n    prototype: SVGPathSegArcAbs;\n    new(): SVGPathSegArcAbs;\n}\n\ninterface MSScreenExtensions {\n    deviceXDPI: number;\n    fontSmoothingEnabled: bool;\n    bufferDepth: number;\n    logicalXDPI: number;\n    systemXDPI: number;\n    logicalYDPI: number;\n    systemYDPI: number;\n    updateInterval: number;\n    deviceYDPI: number;\n}\n\ninterface HTMLHtmlElement extends HTMLElement, HTMLHtmlElementDOML2Deprecated {\n}\ndeclare var HTMLHtmlElement: {\n    prototype: HTMLHtmlElement;\n    new(): HTMLHtmlElement;\n}\n\ninterface MSBorderColorStyle {\n    borderColor: any;\n}\n\ninterface SVGTransformList {\n    numberOfItems: number;\n    getItem(index: number): SVGTransform;\n    consolidate(): SVGTransform;\n    clear(): void;\n    appendItem(newItem: SVGTransform): SVGTransform;\n    initialize(newItem: SVGTransform): SVGTransform;\n    removeItem(index: number): SVGTransform;\n    insertItemBefore(newItem: SVGTransform, index: number): SVGTransform;\n    replaceItem(newItem: SVGTransform, index: number): SVGTransform;\n    createSVGTransformFromMatrix(matrix: SVGMatrix): SVGTransform;\n}\ndeclare var SVGTransformList: {\n    prototype: SVGTransformList;\n    new(): SVGTransformList;\n}\n\ninterface SVGPathSegClosePath extends SVGPathSeg {\n}\ndeclare var SVGPathSegClosePath: {\n    prototype: SVGPathSegClosePath;\n    new(): SVGPathSegClosePath;\n}\n\ninterface DOML2DeprecatedMarginStyle_MSHTMLIFrameElementExtensions {\n    vspace: number;\n    hspace: number;\n}\n\ninterface HTMLFrameElement extends HTMLElement, GetSVGDocument, MSHTMLFrameElementExtensions, MSDataBindingExtensions, MSBorderColorStyle_HTMLFrameElement {\n    scrolling: string;\n    marginHeight: string;\n    src: string;\n    name: string;\n    marginWidth: string;\n    contentDocument: Document;\n    longDesc: string;\n    noResize: bool;\n}\ndeclare var HTMLFrameElement: {\n    prototype: HTMLFrameElement;\n    new(): HTMLFrameElement;\n}\n\ninterface SVGAnimatedLength {\n    animVal: SVGLength;\n    baseVal: SVGLength;\n}\ndeclare var SVGAnimatedLength: {\n    prototype: SVGAnimatedLength;\n    new(): SVGAnimatedLength;\n}\n\ninterface CSSMediaRule extends CSSRule {\n    media: MediaList;\n    cssRules: CSSRuleList;\n    insertRule(rule: string, index?: number): number;\n    deleteRule(index?: number): void;\n}\ndeclare var CSSMediaRule: {\n    prototype: CSSMediaRule;\n    new(): CSSMediaRule;\n}\n\ninterface HTMLQuoteElement extends HTMLElement, MSHTMLQuoteElementExtensions {\n    cite: string;\n}\ndeclare var HTMLQuoteElement: {\n    prototype: HTMLQuoteElement;\n    new(): HTMLQuoteElement;\n}\n\ninterface SVGDefsElement extends SVGElement, SVGStylable, SVGTransformable, SVGLangSpace, SVGTests {\n}\ndeclare var SVGDefsElement: {\n    prototype: SVGDefsElement;\n    new(): SVGDefsElement;\n}\n\ninterface SVGAnimatedPoints {\n    points: SVGPointList;\n    animatedPoints: SVGPointList;\n}\n\ninterface WindowModal {\n    dialogArguments: any;\n    returnValue: any;\n}\n\ninterface MSHTMLButtonElementExtensions {\n    status: any;\n    createTextRange(): TextRange;\n}\n\ninterface XMLHttpRequest extends EventTarget, MSXMLHttpRequestExtensions {\n    onreadystatechange: (ev: Event) => any;\n    status: number;\n    onload: (ev: Event) => any;\n    readyState: number;\n    responseText: string;\n    responseXML: Document;\n    statusText: string;\n    open(method: string, url: string, async?: bool, user?: string, password?: string): void;\n    send(data?: any): void;\n    abort(): void;\n    getAllResponseHeaders(): string;\n    setRequestHeader(header: string, value: string): void;\n    getResponseHeader(header: string): string;\n    LOADING: number;\n    DONE: number;\n    UNSENT: number;\n    OPENED: number;\n    HEADERS_RECEIVED: number;\n}\ndeclare var XMLHttpRequest: {\n    prototype: XMLHttpRequest;\n    new (): XMLHttpRequest;\n    LOADING: number;\n    DONE: number;\n    UNSENT: number;\n    OPENED: number;\n    HEADERS_RECEIVED: number;\n}\n\ninterface HTMLTableHeaderCellElement extends HTMLTableCellElement, HTMLTableHeaderCellScope {\n}\ndeclare var HTMLTableHeaderCellElement: {\n    prototype: HTMLTableHeaderCellElement;\n    new(): HTMLTableHeaderCellElement;\n}\n\ninterface HTMLDListElement extends HTMLElement, DOML2DeprecatedListSpaceReduction, MSHTMLDListElementExtensions {\n}\ndeclare var HTMLDListElement: {\n    prototype: HTMLDListElement;\n    new(): HTMLDListElement;\n}\n\ninterface MSDataBindingExtensions {\n    dataSrc: string;\n    dataFormatAs: string;\n    dataFld: string;\n}\n\ninterface SVGEllipseElement extends SVGElement, SVGStylable, SVGTransformable, SVGLangSpace, SVGTests {\n    ry: SVGAnimatedLength;\n    cx: SVGAnimatedLength;\n    rx: SVGAnimatedLength;\n    cy: SVGAnimatedLength;\n}\ndeclare var SVGEllipseElement: {\n    prototype: SVGEllipseElement;\n    new(): SVGEllipseElement;\n}\n\ninterface SVGPathSegLinetoHorizontalRel extends SVGPathSeg {\n    x: number;\n}\ndeclare var SVGPathSegLinetoHorizontalRel: {\n    prototype: SVGPathSegLinetoHorizontalRel;\n    new(): SVGPathSegLinetoHorizontalRel;\n}\n\ninterface SVGAElement extends SVGElement, SVGStylable, SVGTransformable, SVGLangSpace, SVGTests, SVGURIReference {\n    target: SVGAnimatedString;\n}\ndeclare var SVGAElement: {\n    prototype: SVGAElement;\n    new(): SVGAElement;\n}\n\ninterface MSHTMLMetaElementExtensions {\n    url: string;\n    charset: string;\n}\n\ninterface SVGStylable {\n    className: SVGAnimatedString;\n    style: CSSStyleDeclaration;\n}\n\ninterface MSHTMLTableCellElementExtensions {\n}\n\ninterface HTMLFrameSetElement extends HTMLElement, MSHTMLFrameSetElementExtensions, MSBorderColorStyle_HTMLFrameSetElement {\n    onresize: (ev: UIEvent) => any;\n    ononline: (ev: Event) => any;\n    onafterprint: (ev: Event) => any;\n    onbeforeprint: (ev: Event) => any;\n    onoffline: (ev: Event) => any;\n    rows: string;\n    cols: string;\n    onblur: (ev: FocusEvent) => any;\n    onunload: (ev: Event) => any;\n    onhashchange: (ev: Event) => any;\n    onfocus: (ev: FocusEvent) => any;\n    onmessage: (ev: MessageEvent) => any;\n    onload: (ev: Event) => any;\n    onerror: (ev: Event) => any;\n    onbeforeunload: (ev: BeforeUnloadEvent) => any;\n    onstorage: (ev: StorageEvent) => any;\n}\ndeclare var HTMLFrameSetElement: {\n    prototype: HTMLFrameSetElement;\n    new(): HTMLFrameSetElement;\n}\n\ninterface SVGTransformable extends SVGLocatable {\n    transform: SVGAnimatedTransformList;\n}\n\ninterface Screen extends MSScreenExtensions {\n    width: number;\n    colorDepth: number;\n    availWidth: number;\n    pixelDepth: number;\n    availHeight: number;\n    height: number;\n}\ndeclare var Screen: {\n    prototype: Screen;\n    new(): Screen;\n}\n\ninterface NavigatorGeolocation {\n    geolocation: Geolocation;\n}\n\ninterface Coordinates {\n    altitudeAccuracy: number;\n    longitude: number;\n    latitude: number;\n    speed: number;\n    heading: number;\n    altitude: number;\n    accuracy: number;\n}\ndeclare var Coordinates: {\n    prototype: Coordinates;\n    new(): Coordinates;\n}\n\ninterface DOML2DeprecatedAlignmentStyle_HTMLTableColElement {\n    align: string;\n}\n\ninterface EventListener {\n    (evt: Event): void;\n}\n\ninterface SVGLangSpace {\n    xmllang: string;\n    xmlspace: string;\n}\n\ninterface DataTransfer {\n    effectAllowed: string;\n    dropEffect: string;\n    clearData(format?: string): bool;\n    setData(format: string, data: string): bool;\n    getData(format: string): string;\n}\ndeclare var DataTransfer: {\n    prototype: DataTransfer;\n    new(): DataTransfer;\n}\n\ninterface FocusEvent extends UIEvent {\n    relatedTarget: EventTarget;\n    initFocusEvent(typeArg: string, canBubbleArg: bool, cancelableArg: bool, viewArg: AbstractView, detailArg: number, relatedTargetArg: EventTarget): void;\n}\ndeclare var FocusEvent: {\n    prototype: FocusEvent;\n    new(): FocusEvent;\n}\n\ninterface Range {\n    startOffset: number;\n    collapsed: bool;\n    endOffset: number;\n    startContainer: Node;\n    endContainer: Node;\n    commonAncestorContainer: Node;\n    setStart(refNode: Node, offset: number): void;\n    setEndBefore(refNode: Node): void;\n    setStartBefore(refNode: Node): void;\n    selectNode(refNode: Node): void;\n    detach(): void;\n    getBoundingClientRect(): ClientRect;\n    toString(): string;\n    compareBoundaryPoints(how: number, sourceRange: Range): number;\n    insertNode(newNode: Node): void;\n    collapse(toStart: bool): void;\n    selectNodeContents(refNode: Node): void;\n    cloneContents(): DocumentFragment;\n    setEnd(refNode: Node, offset: number): void;\n    cloneRange(): Range;\n    getClientRects(): ClientRectList;\n    surroundContents(newParent: Node): void;\n    deleteContents(): void;\n    setStartAfter(refNode: Node): void;\n    extractContents(): DocumentFragment;\n    setEndAfter(refNode: Node): void;\n    END_TO_END: number;\n    START_TO_START: number;\n    START_TO_END: number;\n    END_TO_START: number;\n}\ndeclare var Range: {\n    prototype: Range;\n    new(): Range;\n    END_TO_END: number;\n    START_TO_START: number;\n    START_TO_END: number;\n    END_TO_START: number;\n}\n\ninterface MSHTMLPreElementExtensions extends DOML2DeprecatedTextFlowControl_HTMLBlockElement {\n    cite: string;\n}\n\ninterface SVGPoint {\n    y: number;\n    x: number;\n    matrixTransform(matrix: SVGMatrix): SVGPoint;\n}\ndeclare var SVGPoint: {\n    prototype: SVGPoint;\n    new(): SVGPoint;\n}\n\ninterface MSPluginsCollection {\n    length: number;\n    refresh(reload?: bool): void;\n}\ndeclare var MSPluginsCollection: {\n    prototype: MSPluginsCollection;\n    new(): MSPluginsCollection;\n}\n\ninterface MSHTMLFontElementExtensions {\n}\n\ninterface SVGAnimatedNumberList {\n    animVal: SVGNumberList;\n    baseVal: SVGNumberList;\n}\ndeclare var SVGAnimatedNumberList: {\n    prototype: SVGAnimatedNumberList;\n    new(): SVGAnimatedNumberList;\n}\n\ninterface SVGSVGElement extends SVGElement, SVGZoomAndPan, SVGLangSpace, SVGLocatable, SVGTests, SVGFitToViewBox, SVGSVGElementEventHandlers, SVGStylable, DocumentEvent, ViewCSS_SVGSVGElement {\n    width: SVGAnimatedLength;\n    x: SVGAnimatedLength;\n    contentStyleType: string;\n    screenPixelToMillimeterY: number;\n    height: SVGAnimatedLength;\n    contentScriptType: string;\n    pixelUnitToMillimeterX: number;\n    currentTranslate: SVGPoint;\n    y: SVGAnimatedLength;\n    viewport: SVGRect;\n    currentScale: number;\n    screenPixelToMillimeterX: number;\n    pixelUnitToMillimeterY: number;\n    setCurrentTime(seconds: number): void;\n    createSVGLength(): SVGLength;\n    getIntersectionList(rect: SVGRect, referenceElement: SVGElement): NodeList;\n    unpauseAnimations(): void;\n    createSVGRect(): SVGRect;\n    checkIntersection(element: SVGElement, rect: SVGRect): bool;\n    unsuspendRedrawAll(): void;\n    pauseAnimations(): void;\n    suspendRedraw(maxWaitMilliseconds: number): number;\n    deselectAll(): void;\n    createSVGAngle(): SVGAngle;\n    getEnclosureList(rect: SVGRect, referenceElement: SVGElement): NodeList;\n    createSVGTransform(): SVGTransform;\n    unsuspendRedraw(suspendHandleID: number): void;\n    forceRedraw(): void;\n    getCurrentTime(): number;\n    checkEnclosure(element: SVGElement, rect: SVGRect): bool;\n    createSVGMatrix(): SVGMatrix;\n    createSVGPoint(): SVGPoint;\n    createSVGNumber(): SVGNumber;\n    createSVGTransformFromMatrix(matrix: SVGMatrix): SVGTransform;\n    getElementById(elementId: string): Element;\n}\ndeclare var SVGSVGElement: {\n    prototype: SVGSVGElement;\n    new(): SVGSVGElement;\n}\n\ninterface HTMLLabelElement extends HTMLElement, MSDataBindingExtensions, MSHTMLLabelElementExtensions {\n    htmlFor: string;\n    form: HTMLFormElement;\n}\ndeclare var HTMLLabelElement: {\n    prototype: HTMLLabelElement;\n    new(): HTMLLabelElement;\n}\n\ninterface MSResourceMetadata {\n    protocol: string;\n    fileSize: string;\n    fileUpdatedDate: string;\n    nameProp: string;\n    fileCreatedDate: string;\n    fileModifiedDate: string;\n    mimeType: string;\n}\n\ninterface MSHTMLQuoteElementExtensions {\n    dateTime: string;\n}\n\ninterface DOML2DeprecatedAlignmentStyle_HTMLIFrameElement {\n    align: string;\n}\n\ninterface HTMLLegendElement extends HTMLElement, DOML2DeprecatedAlignmentStyle_HTMLLegendElement, MSDataBindingExtensions, MSHTMLLegendElementExtensions {\n    form: HTMLFormElement;\n}\ndeclare var HTMLLegendElement: {\n    prototype: HTMLLegendElement;\n    new(): HTMLLegendElement;\n}\n\ninterface HTMLDirectoryElement extends HTMLElement, DOML2DeprecatedListSpaceReduction, MSHTMLDirectoryElementExtensions {\n}\ndeclare var HTMLDirectoryElement: {\n    prototype: HTMLDirectoryElement;\n    new(): HTMLDirectoryElement;\n}\n\ninterface NavigatorAbilities {\n}\n\ninterface MSHTMLImageElementExtensions {\n    href: string;\n}\n\ninterface SVGAnimatedInteger {\n    animVal: number;\n    baseVal: number;\n}\ndeclare var SVGAnimatedInteger: {\n    prototype: SVGAnimatedInteger;\n    new(): SVGAnimatedInteger;\n}\n\ninterface SVGTextElement extends SVGTextPositioningElement, SVGTransformable {\n}\ndeclare var SVGTextElement: {\n    prototype: SVGTextElement;\n    new(): SVGTextElement;\n}\n\ninterface SVGTSpanElement extends SVGTextPositioningElement {\n}\ndeclare var SVGTSpanElement: {\n    prototype: SVGTSpanElement;\n    new(): SVGTSpanElement;\n}\n\ninterface HTMLLIElement extends HTMLElement, DOML2DeprecatedListNumberingAndBulletStyle, MSHTMLLIElementExtensions {\n    value: number;\n}\ndeclare var HTMLLIElement: {\n    prototype: HTMLLIElement;\n    new(): HTMLLIElement;\n}\n\ninterface SVGPathSegLinetoVerticalAbs extends SVGPathSeg {\n    y: number;\n}\ndeclare var SVGPathSegLinetoVerticalAbs: {\n    prototype: SVGPathSegLinetoVerticalAbs;\n    new(): SVGPathSegLinetoVerticalAbs;\n}\n\ninterface ViewCSS {\n    getComputedStyle(elt: Element, pseudoElt?: string): CSSStyleDeclaration;\n}\n\ninterface MSAttrExtensions {\n    expando: bool;\n}\n\ninterface MSStorageExtensions {\n    remainingSpace: number;\n}\n\ninterface SVGStyleElement extends SVGElement, SVGLangSpace {\n    media: string;\n    type: string;\n    title: string;\n}\ndeclare var SVGStyleElement: {\n    prototype: SVGStyleElement;\n    new(): SVGStyleElement;\n}\n\ninterface MSCurrentStyleCSSProperties extends MSCSSProperties {\n    blockDirection: string;\n    clipBottom: string;\n    clipLeft: string;\n    clipRight: string;\n    clipTop: string;\n    hasLayout: string;\n}\ndeclare var MSCurrentStyleCSSProperties: {\n    prototype: MSCurrentStyleCSSProperties;\n    new(): MSCurrentStyleCSSProperties;\n}\n\ninterface MSLinkStyleExtensions {\n    styleSheet: StyleSheet;\n}\n\ninterface MSHTMLCollectionExtensions {\n    urns(urn: any): Object;\n    tags(tagName: any): Object;\n}\n\ninterface DOML2DeprecatedWordWrapSuppression_HTMLDivElement {\n    noWrap: bool;\n}\n\ninterface DocumentTraversal {\n    createNodeIterator(root: Node, whatToShow: number, filter: NodeFilterCallback, entityReferenceExpansion: bool): NodeIterator;\n    createTreeWalker(root: Node, whatToShow: number, filter: NodeFilterCallback, entityReferenceExpansion: bool): TreeWalker;\n}\n\ninterface Storage extends MSStorageExtensions {\n    length: number;\n    getItem(key: string): any;\n    [key: string]: any;\n    setItem(key: string, data: string): void;\n    clear(): void;\n    removeItem(key: string): void;\n    key(index: number): string;\n    [index: number]: any;\n}\ndeclare var Storage: {\n    prototype: Storage;\n    new(): Storage;\n}\n\ninterface HTMLTableHeaderCellScope {\n    scope: string;\n}\n\ninterface HTMLIFrameElement extends HTMLElement, GetSVGDocument, MSHTMLIFrameElementExtensions, MSDataBindingExtensions, DOML2DeprecatedAlignmentStyle_HTMLIFrameElement {\n    width: string;\n    contentWindow: Window;\n    scrolling: string;\n    src: string;\n    marginHeight: string;\n    name: string;\n    marginWidth: string;\n    height: string;\n    contentDocument: Document;\n    longDesc: string;\n    frameBorder: string;\n}\ndeclare var HTMLIFrameElement: {\n    prototype: HTMLIFrameElement;\n    new(): HTMLIFrameElement;\n}\n\ninterface MSNavigatorAbilities {\n    userLanguage: string;\n    plugins: MSPluginsCollection;\n    cookieEnabled: bool;\n    appCodeName: string;\n    cpuClass: string;\n    appMinorVersion: string;\n    connectionSpeed: number;\n    browserLanguage: string;\n    mimeTypes: MSMimeTypesCollection;\n    product: string;\n    systemLanguage: string;\n    javaEnabled(): bool;\n    taintEnabled(): bool;\n}\n\ninterface TextRangeCollection {\n    length: number;\n    item(index: number): TextRange;\n    [index: number]: TextRange;\n}\ndeclare var TextRangeCollection: {\n    prototype: TextRangeCollection;\n    new(): TextRangeCollection;\n}\n\ninterface HTMLBodyElement extends HTMLElement, HTMLBodyElementDOML2Deprecated, MSHTMLBodyElementExtensions, DOML2DeprecatedBackgroundStyle, DOML2DeprecatedBackgroundColorStyle {\n    onresize: (ev: UIEvent) => any;\n    ononline: (ev: Event) => any;\n    onafterprint: (ev: Event) => any;\n    onbeforeprint: (ev: Event) => any;\n    onoffline: (ev: Event) => any;\n    onblur: (ev: FocusEvent) => any;\n    onhashchange: (ev: Event) => any;\n    onunload: (ev: Event) => any;\n    onfocus: (ev: FocusEvent) => any;\n    onmessage: (ev: MessageEvent) => any;\n    onload: (ev: Event) => any;\n    onerror: (ev: Event) => any;\n    onbeforeunload: (ev: BeforeUnloadEvent) => any;\n    onstorage: (ev: StorageEvent) => any;\n}\ndeclare var HTMLBodyElement: {\n    prototype: HTMLBodyElement;\n    new(): HTMLBodyElement;\n}\n\ninterface DocumentType extends Node {\n    name: string;\n    notations: NamedNodeMap;\n    systemId: string;\n    internalSubset: string;\n    entities: NamedNodeMap;\n    publicId: string;\n}\ndeclare var DocumentType: {\n    prototype: DocumentType;\n    new(): DocumentType;\n}\n\ninterface MSHTMLInputElementExtensions extends DOML2DeprecatedMarginStyle_HTMLInputElement, DOML2DeprecatedBorderStyle_HTMLInputElement {\n    status: bool;\n    complete: bool;\n    createTextRange(): TextRange;\n}\n\ninterface DOML2DeprecatedAlignmentStyle_HTMLLegendElement {\n    align: string;\n}\n\ninterface SVGRadialGradientElement extends SVGGradientElement {\n    cx: SVGAnimatedLength;\n    r: SVGAnimatedLength;\n    cy: SVGAnimatedLength;\n    fx: SVGAnimatedLength;\n    fy: SVGAnimatedLength;\n}\ndeclare var SVGRadialGradientElement: {\n    prototype: SVGRadialGradientElement;\n    new(): SVGRadialGradientElement;\n}\n\ninterface MutationEvent extends Event {\n    newValue: string;\n    attrChange: number;\n    attrName: string;\n    prevValue: string;\n    relatedNode: Node;\n    initMutationEvent(typeArg: string, canBubbleArg: bool, cancelableArg: bool, relatedNodeArg: Node, prevValueArg: string, newValueArg: string, attrNameArg: string, attrChangeArg: number): void;\n    MODIFICATION: number;\n    REMOVAL: number;\n    ADDITION: number;\n}\ndeclare var MutationEvent: {\n    prototype: MutationEvent;\n    new(): MutationEvent;\n    MODIFICATION: number;\n    REMOVAL: number;\n    ADDITION: number;\n}\n\ninterface DragEvent extends MouseEvent {\n    dataTransfer: DataTransfer;\n    initDragEvent(typeArg: string, canBubbleArg: bool, cancelableArg: bool, viewArg: AbstractView, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: bool, altKeyArg: bool, shiftKeyArg: bool, metaKeyArg: bool, buttonArg: number, relatedTargetArg: EventTarget, dataTransferArg: DataTransfer): void;\n}\ndeclare var DragEvent: {\n    prototype: DragEvent;\n    new(): DragEvent;\n}\n\ninterface DOML2DeprecatedWidthStyle_HTMLTableCellElement {\n    width: number;\n}\n\ninterface HTMLTableSectionElement extends HTMLElement, MSHTMLTableSectionElementExtensions, DOML2DeprecatedAlignmentStyle_HTMLTableSectionElement, HTMLTableAlignment {\n    rows: HTMLCollection;\n    deleteRow(index?: number): void;\n    insertRow(index?: number): HTMLElement;\n}\ndeclare var HTMLTableSectionElement: {\n    prototype: HTMLTableSectionElement;\n    new(): HTMLTableSectionElement;\n}\n\ninterface DOML2DeprecatedListNumberingAndBulletStyle {\n    type: string;\n}\n\ninterface HTMLInputElement extends HTMLElement, DOML2DeprecatedAlignmentStyle_HTMLInputElement, MSImageResourceExtensions_HTMLInputElement, MSHTMLInputElementExtensions, MSDataBindingExtensions {\n    width: string;\n    defaultChecked: bool;\n    alt: string;\n    accept: string;\n    value: string;\n    src: string;\n    useMap: string;\n    name: string;\n    form: HTMLFormElement;\n    selectionStart: number;\n    height: string;\n    indeterminate: bool;\n    readOnly: bool;\n    size: number;\n    checked: bool;\n    maxLength: number;\n    selectionEnd: number;\n    type: string;\n    defaultValue: string;\n    setSelectionRange(start: number, end: number): void;\n    select(): void;\n}\ndeclare var HTMLInputElement: {\n    prototype: HTMLInputElement;\n    new(): HTMLInputElement;\n}\n\ninterface HTMLAnchorElement extends HTMLElement, MSHTMLAnchorElementExtensions, MSDataBindingExtensions {\n    rel: string;\n    protocol: string;\n    search: string;\n    coords: string;\n    hostname: string;\n    pathname: string;\n    target: string;\n    href: string;\n    name: string;\n    charset: string;\n    hreflang: string;\n    port: string;\n    host: string;\n    hash: string;\n    rev: string;\n    type: string;\n    shape: string;\n    toString(): string;\n}\ndeclare var HTMLAnchorElement: {\n    prototype: HTMLAnchorElement;\n    new(): HTMLAnchorElement;\n}\n\ninterface SVGImageElement extends SVGElement, SVGStylable, SVGTransformable, SVGLangSpace, SVGTests, SVGURIReference {\n    y: SVGAnimatedLength;\n    width: SVGAnimatedLength;\n    preserveAspectRatio: SVGAnimatedPreserveAspectRatio;\n    x: SVGAnimatedLength;\n    height: SVGAnimatedLength;\n}\ndeclare var SVGImageElement: {\n    prototype: SVGImageElement;\n    new(): SVGImageElement;\n}\n\ninterface MSElementExtensions {\n    msMatchesSelector(selectors: string): bool;\n    fireEvent(eventName: string, eventObj?: any): bool;\n}\n\ninterface HTMLParamElement extends HTMLElement {\n    value: string;\n    name: string;\n    type: string;\n    valueType: string;\n}\ndeclare var HTMLParamElement: {\n    prototype: HTMLParamElement;\n    new(): HTMLParamElement;\n}\n\ninterface MSHTMLDocumentViewExtensions {\n    createStyleSheet(href?: string, index?: number): CSSStyleSheet;\n}\n\ninterface SVGAnimatedNumber {\n    animVal: number;\n    baseVal: number;\n}\ndeclare var SVGAnimatedNumber: {\n    prototype: SVGAnimatedNumber;\n    new(): SVGAnimatedNumber;\n}\n\ninterface PerformanceTiming {\n    redirectStart: number;\n    domainLookupEnd: number;\n    responseStart: number;\n    domComplete: number;\n    domainLookupStart: number;\n    loadEventStart: number;\n    msFirstPaint: number;\n    unloadEventEnd: number;\n    fetchStart: number;\n    requestStart: number;\n    domInteractive: number;\n    navigationStart: number;\n    connectEnd: number;\n    loadEventEnd: number;\n    connectStart: number;\n    responseEnd: number;\n    domLoading: number;\n    redirectEnd: number;\n    unloadEventStart: number;\n    domContentLoadedEventStart: number;\n    domContentLoadedEventEnd: number;\n    toJSON(): any;\n}\ndeclare var PerformanceTiming: {\n    prototype: PerformanceTiming;\n    new(): PerformanceTiming;\n}\n\ninterface DOML2DeprecatedAlignmentStyle_HTMLInputElement {\n    align: string;\n}\n\ninterface HTMLPreElement extends HTMLElement, DOML2DeprecatedWidthStyle, MSHTMLPreElementExtensions {\n}\ndeclare var HTMLPreElement: {\n    prototype: HTMLPreElement;\n    new(): HTMLPreElement;\n}\n\ninterface EventException {\n    code: number;\n    message: string;\n    toString(): string;\n    DISPATCH_REQUEST_ERR: number;\n    UNSPECIFIED_EVENT_TYPE_ERR: number;\n}\ndeclare var EventException: {\n    prototype: EventException;\n    new(): EventException;\n    DISPATCH_REQUEST_ERR: number;\n    UNSPECIFIED_EVENT_TYPE_ERR: number;\n}\n\ninterface MSBorderColorHighlightStyle_HTMLTableCellElement {\n    borderColorLight: any;\n    borderColorDark: any;\n}\n\ninterface DOMHTMLImplementation {\n    createHTMLDocument(title: string): Document;\n}\n\ninterface NavigatorOnLine {\n    onLine: bool;\n}\n\ninterface SVGElementEventHandlers {\n    onmouseover: (ev: MouseEvent) => any;\n    onmousemove: (ev: MouseEvent) => any;\n    onmouseout: (ev: MouseEvent) => any;\n    ondblclick: (ev: MouseEvent) => any;\n    onfocusout: (ev: FocusEvent) => any;\n    onfocusin: (ev: FocusEvent) => any;\n    onmousedown: (ev: MouseEvent) => any;\n    onmouseup: (ev: MouseEvent) => any;\n    onload: (ev: Event) => any;\n    onclick: (ev: MouseEvent) => any;\n}\n\ninterface WindowLocalStorage {\n    localStorage: Storage;\n}\n\ninterface SVGMetadataElement extends SVGElement {\n}\ndeclare var SVGMetadataElement: {\n    prototype: SVGMetadataElement;\n    new(): SVGMetadataElement;\n}\n\ninterface SVGPathSegArcRel extends SVGPathSeg {\n    y: number;\n    sweepFlag: bool;\n    r2: number;\n    x: number;\n    angle: number;\n    r1: number;\n    largeArcFlag: bool;\n}\ndeclare var SVGPathSegArcRel: {\n    prototype: SVGPathSegArcRel;\n    new(): SVGPathSegArcRel;\n}\n\ninterface SVGPathSegMovetoAbs extends SVGPathSeg {\n    y: number;\n    x: number;\n}\ndeclare var SVGPathSegMovetoAbs: {\n    prototype: SVGPathSegMovetoAbs;\n    new(): SVGPathSegMovetoAbs;\n}\n\ninterface SVGStringList {\n    numberOfItems: number;\n    replaceItem(newItem: string, index: number): string;\n    getItem(index: number): string;\n    clear(): void;\n    appendItem(newItem: string): string;\n    initialize(newItem: string): string;\n    removeItem(index: number): string;\n    insertItemBefore(newItem: string, index: number): string;\n}\ndeclare var SVGStringList: {\n    prototype: SVGStringList;\n    new(): SVGStringList;\n}\n\ninterface XDomainRequest {\n    timeout: number;\n    onerror: (ev: Event) => any;\n    onload: (ev: Event) => any;\n    onprogress: (ev: any) => any;\n    ontimeout: (ev: Event) => any;\n    responseText: string;\n    contentType: string;\n    open(method: string, url: string): void;\n    abort(): void;\n    send(data?: any): void;\n}\ndeclare var XDomainRequest: {\n    prototype: XDomainRequest;\n    new (): XDomainRequest;\n}\n\ninterface DOML2DeprecatedBackgroundColorStyle {\n    bgColor: any;\n}\n\ninterface ElementTraversal {\n    childElementCount: number;\n    previousElementSibling: Element;\n    lastElementChild: Element;\n    nextElementSibling: Element;\n    firstElementChild: Element;\n}\n\ninterface SVGLength {\n    valueAsString: string;\n    valueInSpecifiedUnits: number;\n    value: number;\n    unitType: number;\n    newValueSpecifiedUnits(unitType: number, valueInSpecifiedUnits: number): void;\n    convertToSpecifiedUnits(unitType: number): void;\n    SVG_LENGTHTYPE_NUMBER: number;\n    SVG_LENGTHTYPE_CM: number;\n    SVG_LENGTHTYPE_PC: number;\n    SVG_LENGTHTYPE_PERCENTAGE: number;\n    SVG_LENGTHTYPE_MM: number;\n    SVG_LENGTHTYPE_PT: number;\n    SVG_LENGTHTYPE_IN: number;\n    SVG_LENGTHTYPE_EMS: number;\n    SVG_LENGTHTYPE_PX: number;\n    SVG_LENGTHTYPE_UNKNOWN: number;\n    SVG_LENGTHTYPE_EXS: number;\n}\ndeclare var SVGLength: {\n    prototype: SVGLength;\n    new(): SVGLength;\n    SVG_LENGTHTYPE_NUMBER: number;\n    SVG_LENGTHTYPE_CM: number;\n    SVG_LENGTHTYPE_PC: number;\n    SVG_LENGTHTYPE_PERCENTAGE: number;\n    SVG_LENGTHTYPE_MM: number;\n    SVG_LENGTHTYPE_PT: number;\n    SVG_LENGTHTYPE_IN: number;\n    SVG_LENGTHTYPE_EMS: number;\n    SVG_LENGTHTYPE_PX: number;\n    SVG_LENGTHTYPE_UNKNOWN: number;\n    SVG_LENGTHTYPE_EXS: number;\n}\n\ninterface SVGPolygonElement extends SVGElement, SVGStylable, SVGTransformable, SVGLangSpace, SVGAnimatedPoints, SVGTests {\n}\ndeclare var SVGPolygonElement: {\n    prototype: SVGPolygonElement;\n    new(): SVGPolygonElement;\n}\n\ninterface HTMLPhraseElement extends HTMLElement {\n    dateTime: string;\n    cite: string;\n}\ndeclare var HTMLPhraseElement: {\n    prototype: HTMLPhraseElement;\n    new(): HTMLPhraseElement;\n}\n\ninterface MSHTMLAreaElementExtensions {\n}\n\ninterface SVGPathSegCurvetoCubicRel extends SVGPathSeg {\n    y: number;\n    y1: number;\n    x2: number;\n    x: number;\n    x1: number;\n    y2: number;\n}\ndeclare var SVGPathSegCurvetoCubicRel: {\n    prototype: SVGPathSegCurvetoCubicRel;\n    new(): SVGPathSegCurvetoCubicRel;\n}\n\ninterface MSEventObj {\n    nextPage: string;\n    keyCode: number;\n    toElement: Element;\n    returnValue: any;\n    dataFld: string;\n    y: number;\n    dataTransfer: DataTransfer;\n    propertyName: string;\n    url: string;\n    offsetX: number;\n    recordset: Object;\n    screenX: number;\n    buttonID: number;\n    wheelDelta: number;\n    reason: number;\n    origin: string;\n    data: string;\n    srcFilter: Object;\n    boundElements: HTMLCollection;\n    cancelBubble: bool;\n    altLeft: bool;\n    behaviorCookie: number;\n    bookmarks: BookmarkCollection;\n    type: string;\n    repeat: bool;\n    srcElement: Element;\n    source: Window;\n    fromElement: Element;\n    offsetY: number;\n    x: number;\n    behaviorPart: number;\n    qualifier: string;\n    altKey: bool;\n    ctrlKey: bool;\n    clientY: number;\n    shiftKey: bool;\n    shiftLeft: bool;\n    contentOverflow: bool;\n    screenY: number;\n    ctrlLeft: bool;\n    button: number;\n    srcUrn: string;\n    clientX: number;\n    actionURL: string;\n    getAttribute(strAttributeName: string, lFlags?: number): any;\n    setAttribute(strAttributeName: string, AttributeValue: any, lFlags?: number): void;\n    removeAttribute(strAttributeName: string, lFlags?: number): bool;\n}\ndeclare var MSEventObj: {\n    prototype: MSEventObj;\n    new(): MSEventObj;\n}\n\ninterface SVGTextContentElement extends SVGElement, SVGStylable, SVGLangSpace, SVGTests {\n    textLength: SVGAnimatedLength;\n    lengthAdjust: SVGAnimatedEnumeration;\n    getCharNumAtPosition(point: SVGPoint): number;\n    getStartPositionOfChar(charnum: number): SVGPoint;\n    getExtentOfChar(charnum: number): SVGRect;\n    getComputedTextLength(): number;\n    getSubStringLength(charnum: number, nchars: number): number;\n    selectSubString(charnum: number, nchars: number): void;\n    getNumberOfChars(): number;\n    getRotationOfChar(charnum: number): number;\n    getEndPositionOfChar(charnum: number): SVGPoint;\n    LENGTHADJUST_SPACING: number;\n    LENGTHADJUST_SPACINGANDGLYPHS: number;\n    LENGTHADJUST_UNKNOWN: number;\n}\ndeclare var SVGTextContentElement: {\n    prototype: SVGTextContentElement;\n    new(): SVGTextContentElement;\n    LENGTHADJUST_SPACING: number;\n    LENGTHADJUST_SPACINGANDGLYPHS: number;\n    LENGTHADJUST_UNKNOWN: number;\n}\n\ninterface DOML2DeprecatedColorProperty {\n    color: string;\n}\n\ninterface MSHTMLLIElementExtensions {\n}\n\ninterface HTMLCanvasElement extends HTMLElement {\n    width: number;\n    height: number;\n    toDataURL(): string;\n    toDataURL(type: string, ...args: any[]): string;\n    getContext(contextId: string): CanvasRenderingContext2D;\n}\ndeclare var HTMLCanvasElement: {\n    prototype: HTMLCanvasElement;\n    new(): HTMLCanvasElement;\n}\n\ninterface HTMLTitleElement extends HTMLElement {\n    text: string;\n}\ndeclare var HTMLTitleElement: {\n    prototype: HTMLTitleElement;\n    new(): HTMLTitleElement;\n}\n\ninterface Location {\n    hash: string;\n    protocol: string;\n    search: string;\n    href: string;\n    hostname: string;\n    port: string;\n    pathname: string;\n    host: string;\n    reload(flag?: bool): void;\n    replace(url: string): void;\n    assign(url: string): void;\n    toString(): string;\n}\ndeclare var Location: {\n    prototype: Location;\n    new(): Location;\n}\n\ninterface HTMLStyleElement extends HTMLElement, MSLinkStyleExtensions, LinkStyle {\n    media: string;\n    type: string;\n}\ndeclare var HTMLStyleElement: {\n    prototype: HTMLStyleElement;\n    new(): HTMLStyleElement;\n}\n\ninterface MSHTMLOptGroupElementExtensions {\n    index: number;\n    defaultSelected: bool;\n    text: string;\n    value: string;\n    form: HTMLFormElement;\n    selected: bool;\n}\n\ninterface MSBorderColorHighlightStyle {\n    borderColorLight: any;\n    borderColorDark: any;\n}\n\ninterface DOML2DeprecatedSizeProperty_HTMLBaseFontElement {\n    size: number;\n}\n\ninterface SVGTransform {\n    type: number;\n    angle: number;\n    matrix: SVGMatrix;\n    setTranslate(tx: number, ty: number): void;\n    setScale(sx: number, sy: number): void;\n    setMatrix(matrix: SVGMatrix): void;\n    setSkewY(angle: number): void;\n    setRotate(angle: number, cx: number, cy: number): void;\n    setSkewX(angle: number): void;\n    SVG_TRANSFORM_SKEWX: number;\n    SVG_TRANSFORM_UNKNOWN: number;\n    SVG_TRANSFORM_SCALE: number;\n    SVG_TRANSFORM_TRANSLATE: number;\n    SVG_TRANSFORM_MATRIX: number;\n    SVG_TRANSFORM_ROTATE: number;\n    SVG_TRANSFORM_SKEWY: number;\n}\ndeclare var SVGTransform: {\n    prototype: SVGTransform;\n    new(): SVGTransform;\n    SVG_TRANSFORM_SKEWX: number;\n    SVG_TRANSFORM_UNKNOWN: number;\n    SVG_TRANSFORM_SCALE: number;\n    SVG_TRANSFORM_TRANSLATE: number;\n    SVG_TRANSFORM_MATRIX: number;\n    SVG_TRANSFORM_ROTATE: number;\n    SVG_TRANSFORM_SKEWY: number;\n}\n\ninterface MSCSSFilter {\n    Percent: number;\n    Enabled: bool;\n    Duration: number;\n    Play(Duration: number): void;\n    Apply(): void;\n    Stop(): void;\n}\ndeclare var MSCSSFilter: {\n    prototype: MSCSSFilter;\n    new(): MSCSSFilter;\n}\n\ninterface UIEvent extends Event {\n    detail: number;\n    view: AbstractView;\n    initUIEvent(typeArg: string, canBubbleArg: bool, cancelableArg: bool, viewArg: AbstractView, detailArg: number): void;\n}\ndeclare var UIEvent: {\n    prototype: UIEvent;\n    new(): UIEvent;\n}\n\ninterface ViewCSS_SVGSVGElement {\n    getComputedStyle(elt: Element, pseudoElt?: string): CSSStyleDeclaration;\n}\n\ninterface SVGURIReference {\n    href: SVGAnimatedString;\n}\n\ninterface SVGPathSeg {\n    pathSegType: number;\n    pathSegTypeAsLetter: string;\n    PATHSEG_MOVETO_REL: number;\n    PATHSEG_LINETO_VERTICAL_REL: number;\n    PATHSEG_CURVETO_CUBIC_SMOOTH_ABS: number;\n    PATHSEG_CURVETO_QUADRATIC_REL: number;\n    PATHSEG_CURVETO_CUBIC_ABS: number;\n    PATHSEG_LINETO_HORIZONTAL_ABS: number;\n    PATHSEG_CURVETO_QUADRATIC_ABS: number;\n    PATHSEG_LINETO_ABS: number;\n    PATHSEG_CLOSEPATH: number;\n    PATHSEG_LINETO_HORIZONTAL_REL: number;\n    PATHSEG_CURVETO_CUBIC_SMOOTH_REL: number;\n    PATHSEG_LINETO_REL: number;\n    PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS: number;\n    PATHSEG_ARC_REL: number;\n    PATHSEG_CURVETO_CUBIC_REL: number;\n    PATHSEG_UNKNOWN: number;\n    PATHSEG_LINETO_VERTICAL_ABS: number;\n    PATHSEG_ARC_ABS: number;\n    PATHSEG_MOVETO_ABS: number;\n    PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL: number;\n}\ndeclare var SVGPathSeg: {\n    PATHSEG_MOVETO_REL: number;\n    PATHSEG_LINETO_VERTICAL_REL: number;\n    PATHSEG_CURVETO_CUBIC_SMOOTH_ABS: number;\n    PATHSEG_CURVETO_QUADRATIC_REL: number;\n    PATHSEG_CURVETO_CUBIC_ABS: number;\n    PATHSEG_LINETO_HORIZONTAL_ABS: number;\n    PATHSEG_CURVETO_QUADRATIC_ABS: number;\n    PATHSEG_LINETO_ABS: number;\n    PATHSEG_CLOSEPATH: number;\n    PATHSEG_LINETO_HORIZONTAL_REL: number;\n    PATHSEG_CURVETO_CUBIC_SMOOTH_REL: number;\n    PATHSEG_LINETO_REL: number;\n    PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS: number;\n    PATHSEG_ARC_REL: number;\n    PATHSEG_CURVETO_CUBIC_REL: number;\n    PATHSEG_UNKNOWN: number;\n    PATHSEG_LINETO_VERTICAL_ABS: number;\n    PATHSEG_ARC_ABS: number;\n    PATHSEG_MOVETO_ABS: number;\n    PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL: number;\n}\n\ninterface WheelEvent extends MouseEvent {\n    deltaZ: number;\n    deltaX: number;\n    deltaMode: number;\n    deltaY: number;\n    initWheelEvent(typeArg: string, canBubbleArg: bool, cancelableArg: bool, viewArg: AbstractView, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, buttonArg: number, relatedTargetArg: EventTarget, modifiersListArg: string, deltaXArg: number, deltaYArg: number, deltaZArg: number, deltaMode: number): void;\n    DOM_DELTA_PIXEL: number;\n    DOM_DELTA_LINE: number;\n    DOM_DELTA_PAGE: number;\n}\ndeclare var WheelEvent: {\n    prototype: WheelEvent;\n    new(): WheelEvent;\n    DOM_DELTA_PIXEL: number;\n    DOM_DELTA_LINE: number;\n    DOM_DELTA_PAGE: number;\n}\n\ninterface DOML2DeprecatedAlignmentStyle_HTMLDivElement {\n    align: string;\n}\n\ninterface MSEventAttachmentTarget {\n    attachEvent(event: string, listener: EventListener): bool;\n    detachEvent(event: string, listener: EventListener): void;\n}\n\ninterface SVGNumber {\n    value: number;\n}\ndeclare var SVGNumber: {\n    prototype: SVGNumber;\n    new(): SVGNumber;\n}\n\ninterface SVGPathElement extends SVGElement, SVGStylable, SVGAnimatedPathData, SVGTransformable, SVGLangSpace, SVGTests {\n    getPathSegAtLength(distance: number): number;\n    getPointAtLength(distance: number): SVGPoint;\n    createSVGPathSegCurvetoQuadraticAbs(x: number, y: number, x1: number, y1: number): SVGPathSegCurvetoQuadraticAbs;\n    createSVGPathSegLinetoRel(x: number, y: number): SVGPathSegLinetoRel;\n    createSVGPathSegCurvetoQuadraticRel(x: number, y: number, x1: number, y1: number): SVGPathSegCurvetoQuadraticRel;\n    createSVGPathSegCurvetoCubicAbs(x: number, y: number, x1: number, y1: number, x2: number, y2: number): SVGPathSegCurvetoCubicAbs;\n    createSVGPathSegLinetoAbs(x: number, y: number): SVGPathSegLinetoAbs;\n    createSVGPathSegClosePath(): SVGPathSegClosePath;\n    createSVGPathSegCurvetoCubicRel(x: number, y: number, x1: number, y1: number, x2: number, y2: number): SVGPathSegCurvetoCubicRel;\n    createSVGPathSegCurvetoQuadraticSmoothRel(x: number, y: number): SVGPathSegCurvetoQuadraticSmoothRel;\n    createSVGPathSegMovetoRel(x: number, y: number): SVGPathSegMovetoRel;\n    createSVGPathSegCurvetoCubicSmoothAbs(x: number, y: number, x2: number, y2: number): SVGPathSegCurvetoCubicSmoothAbs;\n    createSVGPathSegMovetoAbs(x: number, y: number): SVGPathSegMovetoAbs;\n    createSVGPathSegLinetoVerticalRel(y: number): SVGPathSegLinetoVerticalRel;\n    createSVGPathSegArcRel(x: number, y: number, r1: number, r2: number, angle: number, largeArcFlag: bool, sweepFlag: bool): SVGPathSegArcRel;\n    createSVGPathSegCurvetoQuadraticSmoothAbs(x: number, y: number): SVGPathSegCurvetoQuadraticSmoothAbs;\n    createSVGPathSegLinetoHorizontalRel(x: number): SVGPathSegLinetoHorizontalRel;\n    getTotalLength(): number;\n    createSVGPathSegCurvetoCubicSmoothRel(x: number, y: number, x2: number, y2: number): SVGPathSegCurvetoCubicSmoothRel;\n    createSVGPathSegLinetoHorizontalAbs(x: number): SVGPathSegLinetoHorizontalAbs;\n    createSVGPathSegLinetoVerticalAbs(y: number): SVGPathSegLinetoVerticalAbs;\n    createSVGPathSegArcAbs(x: number, y: number, r1: number, r2: number, angle: number, largeArcFlag: bool, sweepFlag: bool): SVGPathSegArcAbs;\n}\ndeclare var SVGPathElement: {\n    prototype: SVGPathElement;\n    new(): SVGPathElement;\n}\n\ninterface MSCompatibleInfo {\n    version: string;\n    userAgent: string;\n}\ndeclare var MSCompatibleInfo: {\n    prototype: MSCompatibleInfo;\n    new(): MSCompatibleInfo;\n}\n\ninterface MSHTMLDocumentEventExtensions {\n    createEventObject(eventObj?: any): MSEventObj;\n    fireEvent(eventName: string, eventObj?: any): bool;\n}\n\ninterface Text extends CharacterData, MSNodeExtensions {\n    wholeText: string;\n    splitText(offset: number): Text;\n    replaceWholeText(content: string): Text;\n}\ndeclare var Text: {\n    prototype: Text;\n    new(): Text;\n}\n\ninterface SVGAnimatedRect {\n    animVal: SVGRect;\n    baseVal: SVGRect;\n}\ndeclare var SVGAnimatedRect: {\n    prototype: SVGAnimatedRect;\n    new(): SVGAnimatedRect;\n}\n\ninterface CSSNamespaceRule extends CSSRule {\n    namespaceURI: string;\n    prefix: string;\n}\ndeclare var CSSNamespaceRule: {\n    prototype: CSSNamespaceRule;\n    new(): CSSNamespaceRule;\n}\n\ninterface HTMLUnknownElement extends HTMLElement, MSDataBindingRecordSetReadonlyExtensions, MSHTMLUnknownElementExtensions {\n}\ndeclare var HTMLUnknownElement: {\n    prototype: HTMLUnknownElement;\n    new(): HTMLUnknownElement;\n}\n\ninterface SVGPathSegList {\n    numberOfItems: number;\n    replaceItem(newItem: SVGPathSeg, index: number): SVGPathSeg;\n    getItem(index: number): SVGPathSeg;\n    clear(): void;\n    appendItem(newItem: SVGPathSeg): SVGPathSeg;\n    initialize(newItem: SVGPathSeg): SVGPathSeg;\n    removeItem(index: number): SVGPathSeg;\n    insertItemBefore(newItem: SVGPathSeg, index: number): SVGPathSeg;\n}\ndeclare var SVGPathSegList: {\n    prototype: SVGPathSegList;\n    new(): SVGPathSegList;\n}\n\ninterface HTMLAudioElement extends HTMLMediaElement {\n}\ndeclare var HTMLAudioElement: {\n    prototype: HTMLAudioElement;\n    new(): HTMLAudioElement;\n}\n\ninterface MSImageResourceExtensions {\n    dynsrc: string;\n    vrml: string;\n    lowsrc: string;\n    start: string;\n    loop: number;\n}\n\ninterface MSBorderColorHighlightStyle_HTMLTableRowElement {\n    borderColorLight: any;\n    borderColorDark: any;\n}\n\ninterface PositionError {\n    code: number;\n    message: string;\n    toString(): string;\n    POSITION_UNAVAILABLE: number;\n    PERMISSION_DENIED: number;\n    TIMEOUT: number;\n}\ndeclare var PositionError: {\n    POSITION_UNAVAILABLE: number;\n    PERMISSION_DENIED: number;\n    TIMEOUT: number;\n}\n\ninterface BrowserPublic {\n}\ndeclare var BrowserPublic: {\n    prototype: BrowserPublic;\n    new(): BrowserPublic;\n}\n\ninterface HTMLTableCellElement extends HTMLElement, DOML2DeprecatedTableCellHeight, HTMLTableAlignment, MSBorderColorHighlightStyle_HTMLTableCellElement, DOML2DeprecatedWidthStyle_HTMLTableCellElement, DOML2DeprecatedBackgroundStyle, MSBorderColorStyle_HTMLTableCellElement, MSHTMLTableCellElementExtensions, DOML2DeprecatedAlignmentStyle_HTMLTableCellElement, HTMLTableHeaderCellScope, DOML2DeprecatedWordWrapSuppression, DOML2DeprecatedBackgroundColorStyle {\n    headers: string;\n    abbr: string;\n    rowSpan: number;\n    cellIndex: number;\n    colSpan: number;\n    axis: string;\n}\ndeclare var HTMLTableCellElement: {\n    prototype: HTMLTableCellElement;\n    new(): HTMLTableCellElement;\n}\n\ninterface MSNamespaceInfoCollection {\n    length: number;\n    add(namespace?: string, urn?: string, implementationUrl?: any): Object;\n    item(index: any): Object;\n    [index: string]: Object;\n    (index: any): Object;\n}\ndeclare var MSNamespaceInfoCollection: {\n    prototype: MSNamespaceInfoCollection;\n    new(): MSNamespaceInfoCollection;\n}\n\ninterface SVGElementInstance extends EventTarget {\n    previousSibling: SVGElementInstance;\n    parentNode: SVGElementInstance;\n    lastChild: SVGElementInstance;\n    nextSibling: SVGElementInstance;\n    childNodes: SVGElementInstanceList;\n    correspondingUseElement: SVGUseElement;\n    correspondingElement: SVGElement;\n    firstChild: SVGElementInstance;\n}\ndeclare var SVGElementInstance: {\n    prototype: SVGElementInstance;\n    new(): SVGElementInstance;\n}\n\ninterface MSHTMLUListElementExtensions {\n}\n\ninterface SVGCircleElement extends SVGElement, SVGStylable, SVGTransformable, SVGLangSpace, SVGTests {\n    cx: SVGAnimatedLength;\n    r: SVGAnimatedLength;\n    cy: SVGAnimatedLength;\n}\ndeclare var SVGCircleElement: {\n    prototype: SVGCircleElement;\n    new(): SVGCircleElement;\n}\n\ninterface HTMLBaseFontElement extends HTMLElement, DOML2DeprecatedSizeProperty_HTMLBaseFontElement, DOML2DeprecatedColorProperty {\n    face: string;\n}\ndeclare var HTMLBaseFontElement: {\n    prototype: HTMLBaseFontElement;\n    new(): HTMLBaseFontElement;\n}\n\ninterface CustomEvent extends Event {\n    detail: Object;\n    initCustomEvent(typeArg: string, canBubbleArg: bool, cancelableArg: bool, detailArg: Object): void;\n}\ndeclare var CustomEvent: {\n    prototype: CustomEvent;\n    new(): CustomEvent;\n}\n\ninterface CSSImportRule extends CSSRule {\n    styleSheet: CSSStyleSheet;\n    href: string;\n    media: MediaList;\n}\ndeclare var CSSImportRule: {\n    prototype: CSSImportRule;\n    new(): CSSImportRule;\n}\n\ninterface StyleSheetList {\n    length: number;\n    item(index?: number): StyleSheet;\n    [index: number]: StyleSheet;\n}\ndeclare var StyleSheetList: {\n    prototype: StyleSheetList;\n    new(): StyleSheetList;\n}\n\ninterface HTMLTextAreaElement extends HTMLElement, MSDataBindingExtensions, MSHTMLTextAreaElementExtensions {\n    value: string;\n    form: HTMLFormElement;\n    name: string;\n    selectionStart: number;\n    rows: number;\n    cols: number;\n    readOnly: bool;\n    wrap: string;\n    selectionEnd: number;\n    type: string;\n    defaultValue: string;\n    setSelectionRange(start: number, end: number): void;\n    select(): void;\n}\ndeclare var HTMLTextAreaElement: {\n    prototype: HTMLTextAreaElement;\n    new(): HTMLTextAreaElement;\n}\n\ninterface MSHTMLFormElementExtensions {\n    encoding: string;\n}\n\ninterface DOML2DeprecatedMarginStyle {\n    vspace: number;\n    hspace: number;\n}\n\ninterface Geolocation {\n    clearWatch(watchId: number): void;\n    getCurrentPosition(successCallback: PositionCallback, errorCallback?: PositionErrorCallback, options?: PositionOptions): void;\n    watchPosition(successCallback: PositionCallback, errorCallback?: PositionErrorCallback, options?: PositionOptions): number;\n}\ndeclare var Geolocation: {\n    prototype: Geolocation;\n    new(): Geolocation;\n}\n\ninterface MSWindowModeless {\n    dialogTop: any;\n    dialogLeft: any;\n    dialogWidth: any;\n    dialogHeight: any;\n    menuArguments: any;\n}\n\ninterface HTMLMarqueeElement extends HTMLElement, DOML2DeprecatedMarginStyle_HTMLMarqueeElement, MSDataBindingExtensions, MSHTMLMarqueeElementExtensions, DOML2DeprecatedBackgroundColorStyle {\n    width: string;\n    onbounce: (ev: Event) => any;\n    trueSpeed: bool;\n    scrollAmount: number;\n    scrollDelay: number;\n    behavior: string;\n    height: string;\n    loop: number;\n    direction: string;\n    onstart: (ev: Event) => any;\n    onfinish: (ev: Event) => any;\n    stop(): void;\n    start(): void;\n}\ndeclare var HTMLMarqueeElement: {\n    prototype: HTMLMarqueeElement;\n    new(): HTMLMarqueeElement;\n}\n\ninterface SVGRect {\n    y: number;\n    width: number;\n    x: number;\n    height: number;\n}\ndeclare var SVGRect: {\n    prototype: SVGRect;\n    new(): SVGRect;\n}\n\ninterface MSNodeExtensions {\n    swapNode(otherNode: Node): Node;\n    removeNode(deep?: bool): Node;\n    replaceNode(replacement: Node): Node;\n}\n\ninterface KeyboardEventExtensions {\n    keyCode: number;\n    which: number;\n    charCode: number;\n}\n\ninterface History {\n    length: number;\n    back(distance?: any): void;\n    forward(distance?: any): void;\n    go(delta?: any): void;\n}\ndeclare var History: {\n    prototype: History;\n    new(): History;\n}\n\ninterface DocumentStyle {\n    styleSheets: StyleSheetList;\n}\n\ninterface SVGPathSegCurvetoCubicAbs extends SVGPathSeg {\n    y: number;\n    y1: number;\n    x2: number;\n    x: number;\n    x1: number;\n    y2: number;\n}\ndeclare var SVGPathSegCurvetoCubicAbs: {\n    prototype: SVGPathSegCurvetoCubicAbs;\n    new(): SVGPathSegCurvetoCubicAbs;\n}\n\ninterface TimeRanges {\n    length: number;\n    start(index: number): number;\n    end(index: number): number;\n}\ndeclare var TimeRanges: {\n    prototype: TimeRanges;\n    new(): TimeRanges;\n}\n\ninterface SVGPathSegCurvetoQuadraticAbs extends SVGPathSeg {\n    y: number;\n    y1: number;\n    x: number;\n    x1: number;\n}\ndeclare var SVGPathSegCurvetoQuadraticAbs: {\n    prototype: SVGPathSegCurvetoQuadraticAbs;\n    new(): SVGPathSegCurvetoQuadraticAbs;\n}\n\ninterface MSHTMLSelectElementExtensions {\n}\n\ninterface CSSRule {\n    cssText: string;\n    parentStyleSheet: CSSStyleSheet;\n    parentRule: CSSRule;\n    type: number;\n    IMPORT_RULE: number;\n    MEDIA_RULE: number;\n    STYLE_RULE: number;\n    NAMESPACE_RULE: number;\n    PAGE_RULE: number;\n    UNKNOWN_RULE: number;\n    FONT_FACE_RULE: number;\n    CHARSET_RULE: number;\n}\ndeclare var CSSRule: {\n    prototype: CSSRule;\n    new(): CSSRule;\n    IMPORT_RULE: number;\n    MEDIA_RULE: number;\n    STYLE_RULE: number;\n    NAMESPACE_RULE: number;\n    PAGE_RULE: number;\n    UNKNOWN_RULE: number;\n    FONT_FACE_RULE: number;\n    CHARSET_RULE: number;\n}\n\ninterface SVGPathSegLinetoAbs extends SVGPathSeg {\n    y: number;\n    x: number;\n}\ndeclare var SVGPathSegLinetoAbs: {\n    prototype: SVGPathSegLinetoAbs;\n    new(): SVGPathSegLinetoAbs;\n}\n\ninterface MSMouseEventExtensions {\n    toElement: Element;\n    layerY: number;\n    fromElement: Element;\n    which: number;\n    layerX: number;\n}\n\ninterface HTMLModElement extends HTMLElement, MSHTMLModElementExtensions {\n    dateTime: string;\n    cite: string;\n}\ndeclare var HTMLModElement: {\n    prototype: HTMLModElement;\n    new(): HTMLModElement;\n}\n\ninterface DOML2DeprecatedWordWrapSuppression {\n    noWrap: bool;\n}\n\ninterface BeforeUnloadEvent extends Event {\n    returnValue: string;\n}\ndeclare var BeforeUnloadEvent: {\n    prototype: BeforeUnloadEvent;\n    new(): BeforeUnloadEvent;\n}\n\ninterface MSPopupWindow {\n    document: HTMLDocument;\n    isOpen: bool;\n    show(x: number, y: number, w: number, h: number, element?: any): void;\n    hide(): void;\n}\ndeclare var MSPopupWindow: {\n    prototype: MSPopupWindow;\n    new(): MSPopupWindow;\n}\n\ninterface SVGMatrix {\n    e: number;\n    c: number;\n    a: number;\n    b: number;\n    d: number;\n    f: number;\n    multiply(secondMatrix: SVGMatrix): SVGMatrix;\n    flipY(): SVGMatrix;\n    skewY(angle: number): SVGMatrix;\n    inverse(): SVGMatrix;\n    scaleNonUniform(scaleFactorX: number, scaleFactorY: number): SVGMatrix;\n    rotate(angle: number): SVGMatrix;\n    flipX(): SVGMatrix;\n    translate(x: number, y: number): SVGMatrix;\n    scale(scaleFactor: number): SVGMatrix;\n    rotateFromVector(x: number, y: number): SVGMatrix;\n    skewX(angle: number): SVGMatrix;\n}\ndeclare var SVGMatrix: {\n    prototype: SVGMatrix;\n    new(): SVGMatrix;\n}\n\ninterface SVGUseElement extends SVGElement, SVGStylable, SVGTransformable, SVGLangSpace, SVGTests, SVGURIReference {\n    y: SVGAnimatedLength;\n    width: SVGAnimatedLength;\n    animatedInstanceRoot: SVGElementInstance;\n    instanceRoot: SVGElementInstance;\n    x: SVGAnimatedLength;\n    height: SVGAnimatedLength;\n}\ndeclare var SVGUseElement: {\n    prototype: SVGUseElement;\n    new(): SVGUseElement;\n}\n\ninterface Event extends MSEventExtensions {\n    timeStamp: number;\n    defaultPrevented: bool;\n    isTrusted: bool;\n    currentTarget: EventTarget;\n    target: EventTarget;\n    eventPhase: number;\n    type: string;\n    cancelable: bool;\n    bubbles: bool;\n    initEvent(eventTypeArg: string, canBubbleArg: bool, cancelableArg: bool): void;\n    stopPropagation(): void;\n    stopImmediatePropagation(): void;\n    preventDefault(): void;\n    CAPTURING_PHASE: number;\n    AT_TARGET: number;\n    BUBBLING_PHASE: number;\n}\ndeclare var Event: {\n    prototype: Event;\n    new(): Event;\n    CAPTURING_PHASE: number;\n    AT_TARGET: number;\n    BUBBLING_PHASE: number;\n}\n\ninterface ImageData {\n    width: number;\n    data: number[];\n    height: number;\n}\ndeclare var ImageData: {\n    prototype: ImageData;\n    new(): ImageData;\n}\n\ninterface MSHTMLElementExtensions {\n    onlosecapture: (ev: MSEventObj) => any;\n    onrowexit: (ev: MSEventObj) => any;\n    oncontrolselect: (ev: MSEventObj) => any;\n    onrowsinserted: (ev: MSEventObj) => any;\n    onmouseleave: (ev: MouseEvent) => any;\n    document: HTMLDocument;\n    behaviorUrns: MSBehaviorUrnsCollection;\n    onpropertychange: (ev: MSEventObj) => any;\n    children: HTMLCollection;\n    filters: Object;\n    onbeforecut: (ev: DragEvent) => any;\n    scopeName: string;\n    onbeforepaste: (ev: DragEvent) => any;\n    onmove: (ev: MSEventObj) => any;\n    onafterupdate: (ev: MSEventObj) => any;\n    onbeforecopy: (ev: DragEvent) => any;\n    onlayoutcomplete: (ev: MSEventObj) => any;\n    onresizeend: (ev: MSEventObj) => any;\n    uniqueID: string;\n    onhelp: (ev: Event) => any;\n    onbeforeactivate: (ev: UIEvent) => any;\n    isMultiLine: bool;\n    uniqueNumber: number;\n    tagUrn: string;\n    onfocusout: (ev: FocusEvent) => any;\n    ondataavailable: (ev: MSEventObj) => any;\n    hideFocus: bool;\n    onbeforeupdate: (ev: MSEventObj) => any;\n    onfilterchange: (ev: MSEventObj) => any;\n    onfocusin: (ev: FocusEvent) => any;\n    recordNumber: any;\n    parentTextEdit: Element;\n    ondatasetcomplete: (ev: MSEventObj) => any;\n    onbeforedeactivate: (ev: UIEvent) => any;\n    outerText: string;\n    onresizestart: (ev: MSEventObj) => any;\n    onactivate: (ev: UIEvent) => any;\n    isTextEdit: bool;\n    isDisabled: bool;\n    readyState: string;\n    all: HTMLCollection;\n    onmouseenter: (ev: MouseEvent) => any;\n    onmovestart: (ev: MSEventObj) => any;\n    onselectstart: (ev: Event) => any;\n    onpaste: (ev: DragEvent) => any;\n    canHaveHTML: bool;\n    innerText: string;\n    onerrorupdate: (ev: MSEventObj) => any;\n    ondeactivate: (ev: UIEvent) => any;\n    oncut: (ev: DragEvent) => any;\n    onmoveend: (ev: MSEventObj) => any;\n    onresize: (ev: UIEvent) => any;\n    language: string;\n    ondatasetchanged: (ev: MSEventObj) => any;\n    oncopy: (ev: DragEvent) => any;\n    onrowsdelete: (ev: MSEventObj) => any;\n    parentElement: HTMLElement;\n    onrowenter: (ev: MSEventObj) => any;\n    onbeforeeditfocus: (ev: MSEventObj) => any;\n    canHaveChildren: bool;\n    sourceIndex: number;\n    oncellchange: (ev: MSEventObj) => any;\n    dragDrop(): bool;\n    releaseCapture(): void;\n    addFilter(filter: Object): void;\n    setCapture(containerCapture?: bool): void;\n    removeBehavior(cookie: number): bool;\n    contains(child: HTMLElement): bool;\n    applyElement(apply: Element, where?: string): Element;\n    replaceAdjacentText(where: string, newText: string): string;\n    mergeAttributes(source: HTMLElement, preserveIdentity?: bool): void;\n    insertAdjacentElement(position: string, insertedElement: Element): Element;\n    insertAdjacentText(where: string, text: string): void;\n    getAdjacentText(where: string): string;\n    removeFilter(filter: Object): void;\n    setActive(): void;\n    addBehavior(bstrUrl: string, factory?: any): number;\n    clearAttributes(): void;\n}\n\ninterface HTMLTableColElement extends HTMLElement, MSHTMLTableColElementExtensions, HTMLTableAlignment, DOML2DeprecatedAlignmentStyle_HTMLTableColElement {\n    width: any;\n    span: number;\n}\ndeclare var HTMLTableColElement: {\n    prototype: HTMLTableColElement;\n    new(): HTMLTableColElement;\n}\n\ninterface HTMLDocument extends MSEventAttachmentTarget, MSHTMLDocumentSelection, MSHTMLDocumentExtensions, MSNodeExtensions, MSResourceMetadata, MSHTMLDocumentEventExtensions, MSHTMLDocumentViewExtensions {\n    ondragend: (ev: DragEvent) => any;\n    ondragover: (ev: DragEvent) => any;\n    onkeydown: (ev: KeyboardEvent) => any;\n    bgColor: string;\n    onkeyup: (ev: KeyboardEvent) => any;\n    onreset: (ev: Event) => any;\n    onmouseup: (ev: MouseEvent) => any;\n    ondragstart: (ev: DragEvent) => any;\n    scripts: HTMLCollection;\n    ondrag: (ev: DragEvent) => any;\n    linkColor: string;\n    ondragleave: (ev: DragEvent) => any;\n    onmouseover: (ev: MouseEvent) => any;\n    onpause: (ev: Event) => any;\n    charset: string;\n    vlinkColor: string;\n    onmousedown: (ev: MouseEvent) => any;\n    onseeked: (ev: Event) => any;\n    title: string;\n    onclick: (ev: MouseEvent) => any;\n    onwaiting: (ev: Event) => any;\n    defaultCharset: string;\n    embeds: HTMLCollection;\n    ondurationchange: (ev: Event) => any;\n    all: HTMLCollection;\n    applets: HTMLCollection;\n    forms: HTMLCollection;\n    onblur: (ev: FocusEvent) => any;\n    dir: string;\n    body: HTMLElement;\n    designMode: string;\n    onemptied: (ev: Event) => any;\n    domain: string;\n    onseeking: (ev: Event) => any;\n    oncanplay: (ev: Event) => any;\n    onstalled: (ev: Event) => any;\n    onmousemove: (ev: MouseEvent) => any;\n    onratechange: (ev: Event) => any;\n    onloadstart: (ev: Event) => any;\n    ondragenter: (ev: DragEvent) => any;\n    onsubmit: (ev: Event) => any;\n    onprogress: (ev: any) => any;\n    ondblclick: (ev: MouseEvent) => any;\n    oncontextmenu: (ev: MouseEvent) => any;\n    activeElement: Element;\n    onchange: (ev: Event) => any;\n    onloadedmetadata: (ev: Event) => any;\n    onerror: (ev: Event) => any;\n    onplay: (ev: Event) => any;\n    links: HTMLCollection;\n    onplaying: (ev: Event) => any;\n    URL: string;\n    images: HTMLCollection;\n    head: HTMLHeadElement;\n    location: Location;\n    cookie: string;\n    oncanplaythrough: (ev: Event) => any;\n    onabort: (ev: UIEvent) => any;\n    characterSet: string;\n    anchors: HTMLCollection;\n    lastModified: string;\n    onreadystatechange: (ev: Event) => any;\n    onkeypress: (ev: KeyboardEvent) => any;\n    onloadeddata: (ev: Event) => any;\n    plugins: HTMLCollection;\n    onsuspend: (ev: Event) => any;\n    referrer: string;\n    readyState: string;\n    alinkColor: string;\n    onfocus: (ev: FocusEvent) => any;\n    fgColor: string;\n    ontimeupdate: (ev: Event) => any;\n    onselect: (ev: UIEvent) => any;\n    ondrop: (ev: DragEvent) => any;\n    onmouseout: (ev: MouseEvent) => any;\n    onended: (ev: Event) => any;\n    compatMode: string;\n    onscroll: (ev: UIEvent) => any;\n    onmousewheel: (ev: MouseWheelEvent) => any;\n    onload: (ev: Event) => any;\n    onvolumechange: (ev: Event) => any;\n    oninput: (ev: Event) => any;\n    queryCommandValue(commandId: string): string;\n    queryCommandIndeterm(commandId: string): bool;\n    execCommand(commandId: string, showUI?: bool, value?: any): bool;\n    getElementsByName(elementName: string): NodeList;\n    writeln(...content: string[]): void;\n    open(url?: string, name?: string, features?: string, replace?: bool): any;\n    queryCommandState(commandId: string): bool;\n    close(): void;\n    hasFocus(): bool;\n    getElementsByClassName(classNames: string): NodeList;\n    queryCommandSupported(commandId: string): bool;\n    getSelection(): Selection;\n    queryCommandEnabled(commandId: string): bool;\n    write(...content: string[]): void;\n    queryCommandText(commandId: string): string;\n}\n\ninterface SVGException {\n    code: number;\n    message: string;\n    toString(): string;\n    SVG_MATRIX_NOT_INVERTABLE: number;\n    SVG_WRONG_TYPE_ERR: number;\n    SVG_INVALID_VALUE_ERR: number;\n}\ndeclare var SVGException: {\n    prototype: SVGException;\n    new(): SVGException;\n    SVG_MATRIX_NOT_INVERTABLE: number;\n    SVG_WRONG_TYPE_ERR: number;\n    SVG_INVALID_VALUE_ERR: number;\n}\n\ninterface DOML2DeprecatedTableCellHeight {\n    height: any;\n}\n\ninterface HTMLTableAlignment {\n    ch: string;\n    vAlign: string;\n    chOff: string;\n}\n\ninterface SVGAnimatedEnumeration {\n    animVal: number;\n    baseVal: number;\n}\ndeclare var SVGAnimatedEnumeration: {\n    prototype: SVGAnimatedEnumeration;\n    new(): SVGAnimatedEnumeration;\n}\n\ninterface SVGLinearGradientElement extends SVGGradientElement {\n    y1: SVGAnimatedLength;\n    x2: SVGAnimatedLength;\n    x1: SVGAnimatedLength;\n    y2: SVGAnimatedLength;\n}\ndeclare var SVGLinearGradientElement: {\n    prototype: SVGLinearGradientElement;\n    new(): SVGLinearGradientElement;\n}\n\ninterface DOML2DeprecatedSizeProperty {\n    size: number;\n}\n\ninterface MSHTMLHeadingElementExtensions extends DOML2DeprecatedTextFlowControl_HTMLBlockElement {\n}\n\ninterface MSBorderColorStyle_HTMLTableCellElement {\n    borderColor: any;\n}\n\ninterface DOML2DeprecatedWidthStyle_HTMLHRElement {\n    width: number;\n}\n\ninterface HTMLUListElement extends HTMLElement, DOML2DeprecatedListSpaceReduction, DOML2DeprecatedListNumberingAndBulletStyle, MSHTMLUListElementExtensions {\n}\ndeclare var HTMLUListElement: {\n    prototype: HTMLUListElement;\n    new(): HTMLUListElement;\n}\n\ninterface SVGRectElement extends SVGElement, SVGStylable, SVGTransformable, SVGLangSpace, SVGTests {\n    y: SVGAnimatedLength;\n    width: SVGAnimatedLength;\n    ry: SVGAnimatedLength;\n    rx: SVGAnimatedLength;\n    x: SVGAnimatedLength;\n    height: SVGAnimatedLength;\n}\ndeclare var SVGRectElement: {\n    prototype: SVGRectElement;\n    new(): SVGRectElement;\n}\n\ninterface DOML2DeprecatedBorderStyle {\n    border: string;\n}\n\ninterface HTMLDivElement extends HTMLElement, DOML2DeprecatedAlignmentStyle_HTMLDivElement, MSHTMLDivElementExtensions, MSDataBindingExtensions {\n}\ndeclare var HTMLDivElement: {\n    prototype: HTMLDivElement;\n    new(): HTMLDivElement;\n}\n\ninterface NavigatorDoNotTrack {\n    msDoNotTrack: string;\n}\n\ninterface SVG1_1Properties {\n    fillRule: string;\n    strokeLinecap: string;\n    stopColor: string;\n    glyphOrientationHorizontal: string;\n    kerning: string;\n    alignmentBaseline: string;\n    dominantBaseline: string;\n    fill: string;\n    strokeMiterlimit: string;\n    marker: string;\n    glyphOrientationVertical: string;\n    markerMid: string;\n    textAnchor: string;\n    fillOpacity: string;\n    strokeDasharray: string;\n    mask: string;\n    stopOpacity: string;\n    stroke: string;\n    strokeDashoffset: string;\n    strokeOpacity: string;\n    markerStart: string;\n    pointerEvents: string;\n    baselineShift: string;\n    markerEnd: string;\n    clipRule: string;\n    strokeLinejoin: string;\n    clipPath: string;\n    strokeWidth: string;\n}\n\ninterface NamedNodeMap {\n    length: number;\n    removeNamedItemNS(namespaceURI: string, localName: string): Node;\n    item(index: number): Node;\n    [index: number]: Node;\n    removeNamedItem(name: string): Node;\n    getNamedItem(name: string): Node;\n    [name: string]: Node;\n    setNamedItem(arg: Node): Node;\n    getNamedItemNS(namespaceURI: string, localName: string): Node;\n    setNamedItemNS(arg: Node): Node;\n}\ndeclare var NamedNodeMap: {\n    prototype: NamedNodeMap;\n    new(): NamedNodeMap;\n}\n\ninterface MediaList {\n    length: number;\n    mediaText: string;\n    deleteMedium(oldMedium: string): void;\n    appendMedium(newMedium: string): void;\n    item(index: number): string;\n    [index: number]: string;\n    toString(): string;\n}\ndeclare var MediaList: {\n    prototype: MediaList;\n    new(): MediaList;\n}\n\ninterface SVGPathSegCurvetoQuadraticSmoothAbs extends SVGPathSeg {\n    y: number;\n    x: number;\n}\ndeclare var SVGPathSegCurvetoQuadraticSmoothAbs: {\n    prototype: SVGPathSegCurvetoQuadraticSmoothAbs;\n    new(): SVGPathSegCurvetoQuadraticSmoothAbs;\n}\n\ninterface SVGLengthList {\n    numberOfItems: number;\n    replaceItem(newItem: SVGLength, index: number): SVGLength;\n    getItem(index: number): SVGLength;\n    clear(): void;\n    appendItem(newItem: SVGLength): SVGLength;\n    initialize(newItem: SVGLength): SVGLength;\n    removeItem(index: number): SVGLength;\n    insertItemBefore(newItem: SVGLength, index: number): SVGLength;\n}\ndeclare var SVGLengthList: {\n    prototype: SVGLengthList;\n    new(): SVGLengthList;\n}\n\ninterface SVGPathSegCurvetoCubicSmoothRel extends SVGPathSeg {\n    y: number;\n    x2: number;\n    x: number;\n    y2: number;\n}\ndeclare var SVGPathSegCurvetoCubicSmoothRel: {\n    prototype: SVGPathSegCurvetoCubicSmoothRel;\n    new(): SVGPathSegCurvetoCubicSmoothRel;\n}\n\ninterface MSWindowExtensions {\n    status: string;\n    onmouseleave: (ev: MouseEvent) => any;\n    screenLeft: number;\n    offscreenBuffering: any;\n    maxConnectionsPerServer: number;\n    onmouseenter: (ev: MouseEvent) => any;\n    clipboardData: DataTransfer;\n    defaultStatus: string;\n    clientInformation: Navigator;\n    closed: bool;\n    onhelp: (ev: Event) => any;\n    external: BrowserPublic;\n    event: MSEventObj;\n    onfocusout: (ev: FocusEvent) => any;\n    screenTop: number;\n    onfocusin: (ev: FocusEvent) => any;\n    showModelessDialog(url?: string, argument?: any, options?: any): Window;\n    navigate(url: string): void;\n    resizeBy(x?: number, y?: number): void;\n    item(index: any): any;\n    resizeTo(x?: number, y?: number): void;\n    createPopup(arguments?: any): MSPopupWindow;\n    toStaticHTML(html: string): string;\n    execScript(code: string, language?: string): any;\n    msWriteProfilerMark(profilerMarkName: string): void;\n    moveTo(x?: number, y?: number): void;\n    moveBy(x?: number, y?: number): void;\n    showHelp(url: string, helpArg?: any, features?: string): void;\n}\n\ninterface ProcessingInstruction extends Node {\n    target: string;\n    data: string;\n}\ndeclare var ProcessingInstruction: {\n    prototype: ProcessingInstruction;\n    new(): ProcessingInstruction;\n}\n\ninterface MSBehaviorUrnsCollection {\n    length: number;\n    item(index: number): string;\n}\ndeclare var MSBehaviorUrnsCollection: {\n    prototype: MSBehaviorUrnsCollection;\n    new(): MSBehaviorUrnsCollection;\n}\n\ninterface CSSFontFaceRule extends CSSRule {\n    style: CSSStyleDeclaration;\n}\ndeclare var CSSFontFaceRule: {\n    prototype: CSSFontFaceRule;\n    new(): CSSFontFaceRule;\n}\n\ninterface DOML2DeprecatedBackgroundStyle {\n    background: string;\n}\n\ninterface TextEvent extends UIEvent {\n    inputMethod: number;\n    data: string;\n    locale: string;\n    initTextEvent(typeArg: string, canBubbleArg: bool, cancelableArg: bool, viewArg: AbstractView, dataArg: string, inputMethod: number, locale: string): void;\n    DOM_INPUT_METHOD_KEYBOARD: number;\n    DOM_INPUT_METHOD_DROP: number;\n    DOM_INPUT_METHOD_IME: number;\n    DOM_INPUT_METHOD_SCRIPT: number;\n    DOM_INPUT_METHOD_VOICE: number;\n    DOM_INPUT_METHOD_UNKNOWN: number;\n    DOM_INPUT_METHOD_PASTE: number;\n    DOM_INPUT_METHOD_HANDWRITING: number;\n    DOM_INPUT_METHOD_OPTION: number;\n    DOM_INPUT_METHOD_MULTIMODAL: number;\n}\ndeclare var TextEvent: {\n    prototype: TextEvent;\n    new(): TextEvent;\n    DOM_INPUT_METHOD_KEYBOARD: number;\n    DOM_INPUT_METHOD_DROP: number;\n    DOM_INPUT_METHOD_IME: number;\n    DOM_INPUT_METHOD_SCRIPT: number;\n    DOM_INPUT_METHOD_VOICE: number;\n    DOM_INPUT_METHOD_UNKNOWN: number;\n    DOM_INPUT_METHOD_PASTE: number;\n    DOM_INPUT_METHOD_HANDWRITING: number;\n    DOM_INPUT_METHOD_OPTION: number;\n    DOM_INPUT_METHOD_MULTIMODAL: number;\n}\n\ninterface MSHTMLHRElementExtensions extends DOML2DeprecatedColorProperty {\n}\n\ninterface AbstractView {\n    styleMedia: StyleMedia;\n    document: Document;\n}\n\ninterface DocumentFragment extends Node, NodeSelector, MSEventAttachmentTarget, MSNodeExtensions {\n}\ndeclare var DocumentFragment: {\n    prototype: DocumentFragment;\n    new(): DocumentFragment;\n}\n\ninterface DOML2DeprecatedAlignmentStyle_HTMLFieldSetElement {\n    align: string;\n}\n\ninterface SVGPolylineElement extends SVGElement, SVGStylable, SVGTransformable, SVGLangSpace, SVGAnimatedPoints, SVGTests {\n}\ndeclare var SVGPolylineElement: {\n    prototype: SVGPolylineElement;\n    new(): SVGPolylineElement;\n}\n\ninterface DOML2DeprecatedWidthStyle {\n    width: number;\n}\n\ninterface DOML2DeprecatedAlignmentStyle_HTMLHeadingElement {\n    align: string;\n}\n\ninterface SVGAnimatedPathData {\n    pathSegList: SVGPathSegList;\n}\n\ninterface Position {\n    timestamp: Date;\n    coords: Coordinates;\n}\ndeclare var Position: {\n    prototype: Position;\n    new(): Position;\n}\n\ninterface BookmarkCollection {\n    length: number;\n    item(index: number): any;\n    [index: number]: any;\n}\ndeclare var BookmarkCollection: {\n    prototype: BookmarkCollection;\n    new(): BookmarkCollection;\n}\n\ninterface CSSPageRule extends CSSRule, StyleSheetPage {\n    selectorText: string;\n    style: CSSStyleDeclaration;\n}\ndeclare var CSSPageRule: {\n    prototype: CSSPageRule;\n    new(): CSSPageRule;\n}\n\ninterface WindowPerformance {\n    performance: any;\n}\n\ninterface HTMLBRElement extends HTMLElement, DOML2DeprecatedTextFlowControl_HTMLBRElement {\n}\ndeclare var HTMLBRElement: {\n    prototype: HTMLBRElement;\n    new(): HTMLBRElement;\n}\n\ninterface MSHTMLDivElementExtensions extends DOML2DeprecatedWordWrapSuppression_HTMLDivElement {\n}\n\ninterface DOML2DeprecatedBorderStyle_HTMLInputElement {\n    border: string;\n}\n\ninterface HTMLSpanElement extends HTMLElement, MSHTMLSpanElementExtensions, MSDataBindingExtensions {\n}\ndeclare var HTMLSpanElement: {\n    prototype: HTMLSpanElement;\n    new(): HTMLSpanElement;\n}\n\ninterface HTMLHRElementDOML2Deprecated {\n    noShade: bool;\n}\n\ninterface HTMLHeadElement extends HTMLElement {\n    profile: string;\n}\ndeclare var HTMLHeadElement: {\n    prototype: HTMLHeadElement;\n    new(): HTMLHeadElement;\n}\n\ninterface NodeFilterCallback {\n    (...args: any[]): any;\n}\n\ninterface HTMLHeadingElement extends HTMLElement, DOML2DeprecatedAlignmentStyle_HTMLHeadingElement, MSHTMLHeadingElementExtensions {\n}\ndeclare var HTMLHeadingElement: {\n    prototype: HTMLHeadingElement;\n    new(): HTMLHeadingElement;\n}\n\ninterface HTMLFormElement extends HTMLElement, MSHTMLFormElementExtensions, MSHTMLCollectionExtensions {\n    length: number;\n    target: string;\n    acceptCharset: string;\n    enctype: string;\n    elements: HTMLCollection;\n    action: string;\n    name: string;\n    method: string;\n    reset(): void;\n    item(name?: any, index?: any): any;\n    (name: any, index: any): any;\n    submit(): void;\n    namedItem(name: string): any;\n    [name: string]: any;\n    (name: string): any;\n}\ndeclare var HTMLFormElement: {\n    prototype: HTMLFormElement;\n    new(): HTMLFormElement;\n}\n\ninterface SVGZoomAndPan {\n    zoomAndPan: number;\n    SVG_ZOOMANDPAN_MAGNIFY: number;\n    SVG_ZOOMANDPAN_UNKNOWN: number;\n    SVG_ZOOMANDPAN_DISABLE: number;\n}\ndeclare var SVGZoomAndPan: {\n    prototype: SVGZoomAndPan;\n    new(): SVGZoomAndPan;\n    SVG_ZOOMANDPAN_MAGNIFY: number;\n    SVG_ZOOMANDPAN_UNKNOWN: number;\n    SVG_ZOOMANDPAN_DISABLE: number;\n}\n\ninterface MSEventExtensions {\n    cancelBubble: bool;\n    srcElement: Element;\n}\n\ninterface HTMLMediaElement extends HTMLElement {\n    initialTime: number;\n    played: TimeRanges;\n    currentSrc: string;\n    readyState: string;\n    autobuffer: bool;\n    loop: bool;\n    ended: bool;\n    buffered: TimeRanges;\n    error: MediaError;\n    seekable: TimeRanges;\n    autoplay: bool;\n    controls: bool;\n    volume: number;\n    src: string;\n    playbackRate: number;\n    duration: number;\n    muted: bool;\n    defaultPlaybackRate: number;\n    paused: bool;\n    seeking: bool;\n    currentTime: number;\n    preload: string;\n    networkState: number;\n    pause(): void;\n    play(): void;\n    load(): void;\n    canPlayType(type: string): string;\n    HAVE_METADATA: number;\n    HAVE_CURRENT_DATA: number;\n    HAVE_NOTHING: number;\n    NETWORK_NO_SOURCE: number;\n    HAVE_ENOUGH_DATA: number;\n    NETWORK_EMPTY: number;\n    NETWORK_LOADING: number;\n    NETWORK_IDLE: number;\n    HAVE_FUTURE_DATA: number;\n}\ndeclare var HTMLMediaElement: {\n    prototype: HTMLMediaElement;\n    new(): HTMLMediaElement;\n    HAVE_METADATA: number;\n    HAVE_CURRENT_DATA: number;\n    HAVE_NOTHING: number;\n    NETWORK_NO_SOURCE: number;\n    HAVE_ENOUGH_DATA: number;\n    NETWORK_EMPTY: number;\n    NETWORK_LOADING: number;\n    NETWORK_IDLE: number;\n    HAVE_FUTURE_DATA: number;\n}\n\ninterface ElementCSSInlineStyle extends MSElementCSSInlineStyleExtensions {\n    runtimeStyle: MSStyleCSSProperties;\n    currentStyle: MSCurrentStyleCSSProperties;\n}\n\ninterface DOMParser {\n    parseFromString(source: string, mimeType: string): Document;\n}\ndeclare var DOMParser: {\n    prototype: DOMParser;\n    new (): DOMParser;\n}\n\ninterface MSMimeTypesCollection {\n    length: number;\n}\ndeclare var MSMimeTypesCollection: {\n    prototype: MSMimeTypesCollection;\n    new(): MSMimeTypesCollection;\n}\n\ninterface StyleSheet {\n    disabled: bool;\n    ownerNode: Node;\n    parentStyleSheet: StyleSheet;\n    href: string;\n    media: MediaList;\n    type: string;\n    title: string;\n}\ndeclare var StyleSheet: {\n    prototype: StyleSheet;\n    new(): StyleSheet;\n}\n\ninterface DOML2DeprecatedBorderStyle_HTMLTableElement {\n    border: string;\n}\n\ninterface DOML2DeprecatedWidthStyle_HTMLAppletElement {\n    width: number;\n}\n\ninterface SVGTextPathElement extends SVGTextContentElement, SVGURIReference {\n    startOffset: SVGAnimatedLength;\n    method: SVGAnimatedEnumeration;\n    spacing: SVGAnimatedEnumeration;\n    TEXTPATH_SPACINGTYPE_EXACT: number;\n    TEXTPATH_METHODTYPE_STRETCH: number;\n    TEXTPATH_SPACINGTYPE_AUTO: number;\n    TEXTPATH_SPACINGTYPE_UNKNOWN: number;\n    TEXTPATH_METHODTYPE_UNKNOWN: number;\n    TEXTPATH_METHODTYPE_ALIGN: number;\n}\ndeclare var SVGTextPathElement: {\n    prototype: SVGTextPathElement;\n    new(): SVGTextPathElement;\n    TEXTPATH_SPACINGTYPE_EXACT: number;\n    TEXTPATH_METHODTYPE_STRETCH: number;\n    TEXTPATH_SPACINGTYPE_AUTO: number;\n    TEXTPATH_SPACINGTYPE_UNKNOWN: number;\n    TEXTPATH_METHODTYPE_UNKNOWN: number;\n    TEXTPATH_METHODTYPE_ALIGN: number;\n}\n\ninterface NodeList {\n    length: number;\n    item(index: number): Node;\n    [index: number]: Node;\n}\ndeclare var NodeList: {\n    prototype: NodeList;\n    new(): NodeList;\n}\n\ninterface HTMLDTElement extends HTMLElement, DOML2DeprecatedWordWrapSuppression_HTMLDTElement {\n}\ndeclare var HTMLDTElement: {\n    prototype: HTMLDTElement;\n    new(): HTMLDTElement;\n}\n\ninterface XMLSerializer {\n    serializeToString(target: Node): string;\n}\ndeclare var XMLSerializer: {\n    prototype: XMLSerializer;\n    new (): XMLSerializer;\n}\n\ninterface StyleSheetPage {\n    pseudoClass: string;\n    selector: string;\n}\n\ninterface DOML2DeprecatedWordWrapSuppression_HTMLDDElement {\n    noWrap: bool;\n}\n\ninterface MSHTMLTableRowElementExtensions {\n    height: any;\n}\n\ninterface SVGGradientElement extends SVGElement, SVGUnitTypes, SVGStylable, SVGURIReference {\n    spreadMethod: SVGAnimatedEnumeration;\n    gradientTransform: SVGAnimatedTransformList;\n    gradientUnits: SVGAnimatedEnumeration;\n    SVG_SPREADMETHOD_REFLECT: number;\n    SVG_SPREADMETHOD_PAD: number;\n    SVG_SPREADMETHOD_UNKNOWN: number;\n    SVG_SPREADMETHOD_REPEAT: number;\n}\ndeclare var SVGGradientElement: {\n    prototype: SVGGradientElement;\n    new(): SVGGradientElement;\n    SVG_SPREADMETHOD_REFLECT: number;\n    SVG_SPREADMETHOD_PAD: number;\n    SVG_SPREADMETHOD_UNKNOWN: number;\n    SVG_SPREADMETHOD_REPEAT: number;\n}\n\ninterface DOML2DeprecatedTextFlowControl_HTMLBRElement {\n    clear: string;\n}\n\ninterface MSHTMLParagraphElementExtensions extends DOML2DeprecatedTextFlowControl_HTMLBlockElement {\n}\n\ninterface NodeFilter {\n    acceptNode(n: Node): number;\n    SHOW_ENTITY_REFERENCE: number;\n    SHOW_NOTATION: number;\n    SHOW_ENTITY: number;\n    SHOW_DOCUMENT: number;\n    SHOW_PROCESSING_INSTRUCTION: number;\n    FILTER_REJECT: number;\n    SHOW_CDATA_SECTION: number;\n    FILTER_ACCEPT: number;\n    SHOW_ALL: number;\n    SHOW_DOCUMENT_TYPE: number;\n    SHOW_TEXT: number;\n    SHOW_ELEMENT: number;\n    SHOW_COMMENT: number;\n    FILTER_SKIP: number;\n    SHOW_ATTRIBUTE: number;\n    SHOW_DOCUMENT_FRAGMENT: number;\n}\ndeclare var NodeFilter: {\n    prototype: NodeFilter;\n    new(): NodeFilter;\n    SHOW_ENTITY_REFERENCE: number;\n    SHOW_NOTATION: number;\n    SHOW_ENTITY: number;\n    SHOW_DOCUMENT: number;\n    SHOW_PROCESSING_INSTRUCTION: number;\n    FILTER_REJECT: number;\n    SHOW_CDATA_SECTION: number;\n    FILTER_ACCEPT: number;\n    SHOW_ALL: number;\n    SHOW_DOCUMENT_TYPE: number;\n    SHOW_TEXT: number;\n    SHOW_ELEMENT: number;\n    SHOW_COMMENT: number;\n    FILTER_SKIP: number;\n    SHOW_ATTRIBUTE: number;\n    SHOW_DOCUMENT_FRAGMENT: number;\n}\n\ninterface MSBorderColorStyle_HTMLFrameElement {\n    borderColor: any;\n}\n\ninterface MSHTMLOListElementExtensions {\n}\n\ninterface DOML2DeprecatedWordWrapSuppression_HTMLDTElement {\n    noWrap: bool;\n}\n\ninterface ScreenView extends AbstractView {\n    outerWidth: number;\n    pageXOffset: number;\n    innerWidth: number;\n    pageYOffset: number;\n    screenY: number;\n    outerHeight: number;\n    screen: Screen;\n    innerHeight: number;\n    screenX: number;\n    scroll(x?: number, y?: number): void;\n    scrollBy(x?: number, y?: number): void;\n    scrollTo(x?: number, y?: number): void;\n}\n\ninterface DOML2DeprecatedMarginStyle_HTMLObjectElement {\n    vspace: number;\n    hspace: number;\n}\n\ninterface DOML2DeprecatedMarginStyle_HTMLInputElement {\n    vspace: number;\n    hspace: number;\n}\n\ninterface MSHTMLTableSectionElementExtensions extends DOML2DeprecatedBackgroundColorStyle {\n    moveRow(indexFrom?: number, indexTo?: number): Object;\n}\n\ninterface HTMLFieldSetElement extends HTMLElement, MSHTMLFieldSetElementExtensions {\n    form: HTMLFormElement;\n}\ndeclare var HTMLFieldSetElement: {\n    prototype: HTMLFieldSetElement;\n    new(): HTMLFieldSetElement;\n}\n\ninterface MediaError {\n    code: number;\n    MEDIA_ERR_ABORTED: number;\n    MEDIA_ERR_NETWORK: number;\n    MEDIA_ERR_SRC_NOT_SUPPORTED: number;\n    MEDIA_ERR_DECODE: number;\n}\ndeclare var MediaError: {\n    prototype: MediaError;\n    new(): MediaError;\n    MEDIA_ERR_ABORTED: number;\n    MEDIA_ERR_NETWORK: number;\n    MEDIA_ERR_SRC_NOT_SUPPORTED: number;\n    MEDIA_ERR_DECODE: number;\n}\n\ninterface SVGNumberList {\n    numberOfItems: number;\n    replaceItem(newItem: SVGNumber, index: number): SVGNumber;\n    getItem(index: number): SVGNumber;\n    clear(): void;\n    appendItem(newItem: SVGNumber): SVGNumber;\n    initialize(newItem: SVGNumber): SVGNumber;\n    removeItem(index: number): SVGNumber;\n    insertItemBefore(newItem: SVGNumber, index: number): SVGNumber;\n}\ndeclare var SVGNumberList: {\n    prototype: SVGNumberList;\n    new(): SVGNumberList;\n}\n\ninterface HTMLBGSoundElement extends HTMLElement {\n    balance: any;\n    volume: any;\n    src: string;\n    loop: number;\n}\ndeclare var HTMLBGSoundElement: {\n    prototype: HTMLBGSoundElement;\n    new(): HTMLBGSoundElement;\n}\n\ninterface HTMLElement extends Element, MSHTMLElementRangeExtensions, ElementCSSInlineStyle, MSEventAttachmentTarget, MSHTMLElementExtensions, MSNodeExtensions {\n    ondragend: (ev: DragEvent) => any;\n    onkeydown: (ev: KeyboardEvent) => any;\n    ondragover: (ev: DragEvent) => any;\n    onkeyup: (ev: KeyboardEvent) => any;\n    offsetTop: number;\n    onreset: (ev: Event) => any;\n    onmouseup: (ev: MouseEvent) => any;\n    ondragstart: (ev: DragEvent) => any;\n    ondrag: (ev: DragEvent) => any;\n    innerHTML: string;\n    onmouseover: (ev: MouseEvent) => any;\n    ondragleave: (ev: DragEvent) => any;\n    lang: string;\n    onpause: (ev: Event) => any;\n    className: string;\n    onseeked: (ev: Event) => any;\n    onmousedown: (ev: MouseEvent) => any;\n    title: string;\n    onclick: (ev: MouseEvent) => any;\n    onwaiting: (ev: Event) => any;\n    outerHTML: string;\n    offsetLeft: number;\n    ondurationchange: (ev: Event) => any;\n    offsetHeight: number;\n    dir: string;\n    onblur: (ev: FocusEvent) => any;\n    onemptied: (ev: Event) => any;\n    onseeking: (ev: Event) => any;\n    oncanplay: (ev: Event) => any;\n    onstalled: (ev: Event) => any;\n    onmousemove: (ev: MouseEvent) => any;\n    style: MSStyleCSSProperties;\n    isContentEditable: bool;\n    onratechange: (ev: Event) => any;\n    onloadstart: (ev: Event) => any;\n    ondragenter: (ev: DragEvent) => any;\n    contentEditable: string;\n    onsubmit: (ev: Event) => any;\n    tabIndex: number;\n    onprogress: (ev: any) => any;\n    ondblclick: (ev: MouseEvent) => any;\n    oncontextmenu: (ev: MouseEvent) => any;\n    onchange: (ev: Event) => any;\n    onloadedmetadata: (ev: Event) => any;\n    onerror: (ev: Event) => any;\n    onplay: (ev: Event) => any;\n    id: string;\n    onplaying: (ev: Event) => any;\n    oncanplaythrough: (ev: Event) => any;\n    onabort: (ev: UIEvent) => any;\n    onreadystatechange: (ev: Event) => any;\n    onkeypress: (ev: KeyboardEvent) => any;\n    offsetParent: Element;\n    onloadeddata: (ev: Event) => any;\n    disabled: bool;\n    onsuspend: (ev: Event) => any;\n    accessKey: string;\n    onfocus: (ev: FocusEvent) => any;\n    ontimeupdate: (ev: Event) => any;\n    onselect: (ev: UIEvent) => any;\n    ondrop: (ev: DragEvent) => any;\n    offsetWidth: number;\n    onmouseout: (ev: MouseEvent) => any;\n    onended: (ev: Event) => any;\n    onscroll: (ev: UIEvent) => any;\n    onmousewheel: (ev: MouseWheelEvent) => any;\n    onvolumechange: (ev: Event) => any;\n    onload: (ev: Event) => any;\n    oninput: (ev: Event) => any;\n    click(): void;\n    getElementsByClassName(classNames: string): NodeList;\n    scrollIntoView(top?: bool): void;\n    focus(): void;\n    blur(): void;\n    insertAdjacentHTML(where: string, html: string): void;\n}\ndeclare var HTMLElement: {\n    prototype: HTMLElement;\n    new(): HTMLElement;\n}\n\ninterface Comment extends CharacterData, MSCommentExtensions {\n}\ndeclare var Comment: {\n    prototype: Comment;\n    new(): Comment;\n}\n\ninterface CanvasPattern {\n}\ndeclare var CanvasPattern: {\n    prototype: CanvasPattern;\n    new(): CanvasPattern;\n}\n\ninterface HTMLHRElement extends HTMLElement, DOML2DeprecatedWidthStyle_HTMLHRElement, MSHTMLHRElementExtensions, HTMLHRElementDOML2Deprecated, DOML2DeprecatedAlignmentStyle_HTMLHRElement, DOML2DeprecatedSizeProperty {\n}\ndeclare var HTMLHRElement: {\n    prototype: HTMLHRElement;\n    new(): HTMLHRElement;\n}\n\ninterface MSHTMLFrameSetElementExtensions {\n    name: string;\n    frameBorder: string;\n    border: string;\n    frameSpacing: any;\n}\n\ninterface DOML2DeprecatedTextFlowControl_HTMLBlockElement {\n    clear: string;\n}\n\ninterface PositionOptions {\n    enableHighAccuracy?: bool;\n    timeout?: number;\n    maximumAge?: number;\n}\n\ninterface HTMLObjectElement extends HTMLElement, MSHTMLObjectElementExtensions, GetSVGDocument, DOML2DeprecatedMarginStyle_HTMLObjectElement, MSDataBindingExtensions, MSDataBindingRecordSetExtensions, DOML2DeprecatedAlignmentStyle_HTMLObjectElement, DOML2DeprecatedBorderStyle_HTMLObjectElement {\n    width: string;\n    codeType: string;\n    archive: string;\n    standby: string;\n    name: string;\n    useMap: string;\n    form: HTMLFormElement;\n    data: string;\n    height: string;\n    contentDocument: Document;\n    codeBase: string;\n    declare: bool;\n    type: string;\n    code: string;\n}\ndeclare var HTMLObjectElement: {\n    prototype: HTMLObjectElement;\n    new(): HTMLObjectElement;\n}\n\ninterface MSHTMLMenuElementExtensions {\n}\n\ninterface DocumentView {\n    defaultView: AbstractView;\n    elementFromPoint(x: number, y: number): Element;\n}\n\ninterface StorageEvent extends Event {\n    oldValue: any;\n    newValue: any;\n    url: string;\n    storageArea: Storage;\n    key: string;\n    initStorageEvent(typeArg: string, canBubbleArg: bool, cancelableArg: bool, keyArg: string, oldValueArg: any, newValueArg: any, urlArg: string, storageAreaArg: Storage): void;\n}\ndeclare var StorageEvent: {\n    prototype: StorageEvent;\n    new(): StorageEvent;\n}\n\ninterface HTMLEmbedElement extends HTMLElement, GetSVGDocument, MSHTMLEmbedElementExtensions {\n    width: string;\n    src: string;\n    name: string;\n    height: string;\n}\ndeclare var HTMLEmbedElement: {\n    prototype: HTMLEmbedElement;\n    new(): HTMLEmbedElement;\n}\n\ninterface CharacterData extends Node {\n    length: number;\n    data: string;\n    deleteData(offset: number, count: number): void;\n    replaceData(offset: number, count: number, arg: string): void;\n    appendData(arg: string): void;\n    insertData(offset: number, arg: string): void;\n    substringData(offset: number, count: number): string;\n}\ndeclare var CharacterData: {\n    prototype: CharacterData;\n    new(): CharacterData;\n}\n\ninterface DOML2DeprecatedAlignmentStyle_HTMLTableSectionElement {\n    align: string;\n}\n\ninterface HTMLOptGroupElement extends HTMLElement, MSDataBindingExtensions, MSHTMLOptGroupElementExtensions {\n    label: string;\n}\ndeclare var HTMLOptGroupElement: {\n    prototype: HTMLOptGroupElement;\n    new(): HTMLOptGroupElement;\n}\n\ninterface HTMLIsIndexElement extends HTMLElement, MSHTMLIsIndexElementExtensions {\n    form: HTMLFormElement;\n    prompt: string;\n}\ndeclare var HTMLIsIndexElement: {\n    prototype: HTMLIsIndexElement;\n    new(): HTMLIsIndexElement;\n}\n\ninterface SVGPathSegLinetoRel extends SVGPathSeg {\n    y: number;\n    x: number;\n}\ndeclare var SVGPathSegLinetoRel: {\n    prototype: SVGPathSegLinetoRel;\n    new(): SVGPathSegLinetoRel;\n}\n\ninterface MSHTMLDocumentSelection {\n    selection: MSSelection;\n}\n\ninterface DOMException {\n    code: number;\n    message: string;\n    toString(): string;\n    HIERARCHY_REQUEST_ERR: number;\n    NO_MODIFICATION_ALLOWED_ERR: number;\n    INVALID_MODIFICATION_ERR: number;\n    NAMESPACE_ERR: number;\n    INVALID_CHARACTER_ERR: number;\n    TYPE_MISMATCH_ERR: number;\n    ABORT_ERR: number;\n    INVALID_STATE_ERR: number;\n    SECURITY_ERR: number;\n    NETWORK_ERR: number;\n    WRONG_DOCUMENT_ERR: number;\n    QUOTA_EXCEEDED_ERR: number;\n    INDEX_SIZE_ERR: number;\n    DOMSTRING_SIZE_ERR: number;\n    SYNTAX_ERR: number;\n    SERIALIZE_ERR: number;\n    VALIDATION_ERR: number;\n    NOT_FOUND_ERR: number;\n    URL_MISMATCH_ERR: number;\n    PARSE_ERR: number;\n    NO_DATA_ALLOWED_ERR: number;\n    NOT_SUPPORTED_ERR: number;\n    INVALID_ACCESS_ERR: number;\n    INUSE_ATTRIBUTE_ERR: number;\n}\ndeclare var DOMException: {\n    prototype: DOMException;\n    new(): DOMException;\n    HIERARCHY_REQUEST_ERR: number;\n    NO_MODIFICATION_ALLOWED_ERR: number;\n    INVALID_MODIFICATION_ERR: number;\n    NAMESPACE_ERR: number;\n    INVALID_CHARACTER_ERR: number;\n    TYPE_MISMATCH_ERR: number;\n    ABORT_ERR: number;\n    INVALID_STATE_ERR: number;\n    SECURITY_ERR: number;\n    NETWORK_ERR: number;\n    WRONG_DOCUMENT_ERR: number;\n    QUOTA_EXCEEDED_ERR: number;\n    INDEX_SIZE_ERR: number;\n    DOMSTRING_SIZE_ERR: number;\n    SYNTAX_ERR: number;\n    SERIALIZE_ERR: number;\n    VALIDATION_ERR: number;\n    NOT_FOUND_ERR: number;\n    URL_MISMATCH_ERR: number;\n    PARSE_ERR: number;\n    NO_DATA_ALLOWED_ERR: number;\n    NOT_SUPPORTED_ERR: number;\n    INVALID_ACCESS_ERR: number;\n    INUSE_ATTRIBUTE_ERR: number;\n}\n\ninterface MSCompatibleInfoCollection {\n    length: number;\n    item(index: number): MSCompatibleInfo;\n}\ndeclare var MSCompatibleInfoCollection: {\n    prototype: MSCompatibleInfoCollection;\n    new(): MSCompatibleInfoCollection;\n}\n\ninterface MSHTMLIsIndexElementExtensions {\n    action: string;\n}\n\ninterface SVGAnimatedBoolean {\n    animVal: bool;\n    baseVal: bool;\n}\ndeclare var SVGAnimatedBoolean: {\n    prototype: SVGAnimatedBoolean;\n    new(): SVGAnimatedBoolean;\n}\n\ninterface SVGSwitchElement extends SVGElement, SVGStylable, SVGTransformable, SVGLangSpace, SVGTests {\n}\ndeclare var SVGSwitchElement: {\n    prototype: SVGSwitchElement;\n    new(): SVGSwitchElement;\n}\n\ninterface MSHTMLIFrameElementExtensions extends DOML2DeprecatedMarginStyle_MSHTMLIFrameElementExtensions, DOML2DeprecatedBorderStyle_MSHTMLIFrameElementExtensions {\n    onload: (ev: Event) => any;\n    frameSpacing: any;\n    noResize: bool;\n}\n\ninterface SVGPreserveAspectRatio {\n    align: number;\n    meetOrSlice: number;\n    SVG_PRESERVEASPECTRATIO_NONE: number;\n    SVG_PRESERVEASPECTRATIO_XMINYMID: number;\n    SVG_PRESERVEASPECTRATIO_XMAXYMIN: number;\n    SVG_PRESERVEASPECTRATIO_XMINYMAX: number;\n    SVG_PRESERVEASPECTRATIO_XMAXYMAX: number;\n    SVG_MEETORSLICE_UNKNOWN: number;\n    SVG_PRESERVEASPECTRATIO_XMAXYMID: number;\n    SVG_PRESERVEASPECTRATIO_XMIDYMAX: number;\n    SVG_PRESERVEASPECTRATIO_XMINYMIN: number;\n    SVG_MEETORSLICE_MEET: number;\n   SVG_PRESERVEASPECTRATIO_XMIDYMID: number;\n    SVG_PRESERVEASPECTRATIO_XMIDYMIN: number;\n    SVG_MEETORSLICE_SLICE: number;\n    SVG_PRESERVEASPECTRATIO_UNKNOWN: number;\n}\ndeclare var SVGPreserveAspectRatio: {\n    prototype: SVGPreserveAspectRatio;\n    new(): SVGPreserveAspectRatio;\n    SVG_PRESERVEASPECTRATIO_NONE: number;\n    SVG_PRESERVEASPECTRATIO_XMINYMID: number;\n    SVG_PRESERVEASPECTRATIO_XMAXYMIN: number;\n    SVG_PRESERVEASPECTRATIO_XMINYMAX: number;\n    SVG_PRESERVEASPECTRATIO_XMAXYMAX: number;\n    SVG_MEETORSLICE_UNKNOWN: number;\n    SVG_PRESERVEASPECTRATIO_XMAXYMID: number;\n    SVG_PRESERVEASPECTRATIO_XMIDYMAX: number;\n    SVG_PRESERVEASPECTRATIO_XMINYMIN: number;\n    SVG_MEETORSLICE_MEET: number;\n    SVG_PRESERVEASPECTRATIO_XMIDYMID: number;\n    SVG_PRESERVEASPECTRATIO_XMIDYMIN: number;\n    SVG_MEETORSLICE_SLICE: number;\n    SVG_PRESERVEASPECTRATIO_UNKNOWN: number;\n}\n\ninterface Attr extends Node, MSAttrExtensions {\n    specified: bool;\n    ownerElement: Element;\n    value: string;\n    name: string;\n}\ndeclare var Attr: {\n    prototype: Attr;\n    new(): Attr;\n}\n\ninterface MSBorderColorStyle_HTMLTableRowElement {\n    borderColor: any;\n}\n\ninterface DOML2DeprecatedAlignmentStyle_HTMLTableCaptionElement {\n    align: string;\n}\n\ninterface PerformanceNavigation {\n    redirectCount: number;\n    type: number;\n    toJSON(): any;\n    TYPE_RELOAD: number;\n    TYPE_RESERVED: number;\n    TYPE_BACK_FORWARD: number;\n    TYPE_NAVIGATE: number;\n}\ndeclare var PerformanceNavigation: {\n    prototype: PerformanceNavigation;\n    new(): PerformanceNavigation;\n    TYPE_RELOAD: number;\n    TYPE_RESERVED: number;\n    TYPE_BACK_FORWARD: number;\n    TYPE_NAVIGATE: number;\n}\n\ninterface HTMLBodyElementDOML2Deprecated {\n    link: any;\n    aLink: any;\n    text: any;\n    vLink: any;\n}\n\ninterface SVGStopElement extends SVGElement, SVGStylable {\n    offset: SVGAnimatedNumber;\n}\ndeclare var SVGStopElement: {\n    prototype: SVGStopElement;\n    new(): SVGStopElement;\n}\n\ninterface PositionCallback {\n    (position: Position): void;\n}\n\ninterface SVGSymbolElement extends SVGElement, SVGStylable, SVGLangSpace, SVGFitToViewBox {\n}\ndeclare var SVGSymbolElement: {\n    prototype: SVGSymbolElement;\n    new(): SVGSymbolElement;\n}\n\ninterface SVGElementInstanceList {\n    length: number;\n    item(index: number): SVGElementInstance;\n}\ndeclare var SVGElementInstanceList: {\n    prototype: SVGElementInstanceList;\n    new(): SVGElementInstanceList;\n}\n\ninterface MSDataBindingRecordSetExtensions {\n    recordset: Object;\n    namedRecordset(dataMember: string, hierarchy?: any): Object;\n}\n\ninterface CSSRuleList {\n    length: number;\n    item(index: number): CSSRule;\n    [index: number]: CSSRule;\n}\ndeclare var CSSRuleList: {\n    prototype: CSSRuleList;\n    new(): CSSRuleList;\n}\n\ninterface MSHTMLTableColElementExtensions {\n}\n\ninterface LinkStyle {\n    sheet: StyleSheet;\n}\n\ninterface MSHTMLMarqueeElementExtensions {\n}\n\ninterface HTMLVideoElement extends HTMLMediaElement {\n    width: number;\n    videoWidth: number;\n    videoHeight: number;\n    height: number;\n    poster: string;\n}\ndeclare var HTMLVideoElement: {\n    prototype: HTMLVideoElement;\n    new(): HTMLVideoElement;\n}\n\ninterface MSXMLHttpRequestExtensions {\n    responseBody: any;\n    timeout: number;\n    ontimeout: (ev: Event) => any;\n}\n\ninterface ClientRectList {\n    length: number;\n    item(index: number): ClientRect;\n    [index: number]: ClientRect;\n}\ndeclare var ClientRectList: {\n    prototype: ClientRectList;\n    new(): ClientRectList;\n}\n\ninterface DOML2DeprecatedAlignmentStyle_HTMLTableCellElement {\n    align: string;\n}\n\ninterface SVGMaskElement extends SVGElement, SVGUnitTypes, SVGStylable, SVGLangSpace, SVGTests {\n    y: SVGAnimatedLength;\n    width: SVGAnimatedLength;\n    maskUnits: SVGAnimatedEnumeration;\n    maskContentUnits: SVGAnimatedEnumeration;\n    x: SVGAnimatedLength;\n    height: SVGAnimatedLength;\n}\ndeclare var SVGMaskElement: {\n    prototype: SVGMaskElement;\n    new(): SVGMaskElement;\n}\n\ndeclare var Audio: { new (src?: string): HTMLAudioElement; };\ndeclare var Option: { new (text?: string, value?: string, defaultSelected?: bool, selected?: bool): HTMLOptionElement; };\ndeclare var Image: { new (width?: number, height?: number): HTMLImageElement; };\n\ndeclare var ondragend: (ev: DragEvent) => any;\ndeclare var onkeydown: (ev: KeyboardEvent) => any;\ndeclare var ondragover: (ev: DragEvent) => any;\ndeclare var onkeyup: (ev: KeyboardEvent) => any;\ndeclare var onreset: (ev: Event) => any;\ndeclare var onmouseup: (ev: MouseEvent) => any;\ndeclare var ondragstart: (ev: DragEvent) => any;\ndeclare var ondrag: (ev: DragEvent) => any;\ndeclare var onmouseover: (ev: MouseEvent) => any;\ndeclare var ondragleave: (ev: DragEvent) => any;\ndeclare var history: History;\ndeclare var name: string;\ndeclare var onafterprint: (ev: Event) => any;\ndeclare var onpause: (ev: Event) => any;\ndeclare var onbeforeprint: (ev: Event) => any;\ndeclare var top: Window;\ndeclare var onmousedown: (ev: MouseEvent) => any;\ndeclare var onseeked: (ev: Event) => any;\ndeclare var opener: Window;\ndeclare var onclick: (ev: MouseEvent) => any;\ndeclare var onwaiting: (ev: Event) => any;\ndeclare var ononline: (ev: Event) => any;\ndeclare var ondurationchange: (ev: Event) => any;\ndeclare var frames: Window;\ndeclare var onblur: (ev: FocusEvent) => any;\ndeclare var onemptied: (ev: Event) => any;\ndeclare var onseeking: (ev: Event) => any;\ndeclare var oncanplay: (ev: Event) => any;\ndeclare var onstalled: (ev: Event) => any;\ndeclare var onmousemove: (ev: MouseEvent) => any;\ndeclare var onoffline: (ev: Event) => any;\ndeclare var length: number;\ndeclare var onbeforeunload: (ev: BeforeUnloadEvent) => any;\ndeclare var onratechange: (ev: Event) => any;\ndeclare var onstorage: (ev: StorageEvent) => any;\ndeclare var onloadstart: (ev: Event) => any;\ndeclare var ondragenter: (ev: DragEvent) => any;\ndeclare var onsubmit: (ev: Event) => any;\ndeclare var self: Window;\ndeclare var onprogress: (ev: any) => any;\ndeclare var ondblclick: (ev: MouseEvent) => any;\ndeclare var oncontextmenu: (ev: MouseEvent) => any;\ndeclare var onchange: (ev: Event) => any;\ndeclare var onloadedmetadata: (ev: Event) => any;\ndeclare var onplay: (ev: Event) => any;\ndeclare var onerror: ErrorFunction;\ndeclare var onplaying: (ev: Event) => any;\ndeclare var parent: Window;\ndeclare var location: Location;\ndeclare var oncanplaythrough: (ev: Event) => any;\ndeclare var onabort: (ev: UIEvent) => any;\ndeclare var onreadystatechange: (ev: Event) => any;\ndeclare var onkeypress: (ev: KeyboardEvent) => any;\ndeclare var frameElement: Element;\ndeclare var onloadeddata: (ev: Event) => any;\ndeclare var onsuspend: (ev: Event) => any;\ndeclare var window: Window;\ndeclare var onfocus: (ev: FocusEvent) => any;\ndeclare var onmessage: (ev: MessageEvent) => any;\ndeclare var ontimeupdate: (ev: Event) => any;\ndeclare var onresize: (ev: UIEvent) => any;\ndeclare var navigator: Navigator;\ndeclare var onselect: (ev: UIEvent) => any;\ndeclare var ondrop: (ev: DragEvent) => any;\ndeclare var onmouseout: (ev: MouseEvent) => any;\ndeclare var onended: (ev: Event) => any;\ndeclare var onhashchange: (ev: Event) => any;\ndeclare var onunload: (ev: Event) => any;\ndeclare var onscroll: (ev: UIEvent) => any;\ndeclare var onmousewheel: (ev: MouseWheelEvent) => any;\ndeclare var onload: (ev: Event) => any;\ndeclare var onvolumechange: (ev: Event) => any;\ndeclare var oninput: (ev: Event) => any;\ndeclare function alert(message?: string): void;\ndeclare function focus(): void;\ndeclare function print(): void;\ndeclare function prompt(message?: string, defaul?: string): string;\ndeclare function toString(): string;\ndeclare function open(url?: string, target?: string, features?: string, replace?: bool): Window;\ndeclare function close(): void;\ndeclare function confirm(message?: string): bool;\ndeclare function postMessage(message: any, targetOrigin: string, ports?: any): void;\ndeclare function showModalDialog(url?: string, argument?: any, options?: any): any;\ndeclare function blur(): void;\ndeclare function getSelection(): Selection;\ndeclare function getComputedStyle(elt: Element, pseudoElt?: string): CSSStyleDeclaration;\ndeclare function attachEvent(event: string, listener: EventListener): bool;\ndeclare function detachEvent(event: string, listener: EventListener): void;\ndeclare var status: string;\ndeclare var onmouseleave: (ev: MouseEvent) => any;\ndeclare var screenLeft: number;\ndeclare var offscreenBuffering: any;\ndeclare var maxConnectionsPerServer: number;\ndeclare var onmouseenter: (ev: MouseEvent) => any;\ndeclare var clipboardData: DataTransfer;\ndeclare var defaultStatus: string;\ndeclare var clientInformation: Navigator;\ndeclare var closed: bool;\ndeclare var onhelp: (ev: Event) => any;\ndeclare var external: BrowserPublic;\ndeclare var event: MSEventObj;\ndeclare var onfocusout: (ev: FocusEvent) => any;\ndeclare var screenTop: number;\ndeclare var onfocusin: (ev: FocusEvent) => any;\ndeclare function showModelessDialog(url?: string, argument?: any, options?: any): Window;\ndeclare function navigate(url: string): void;\ndeclare function resizeBy(x?: number, y?: number): void;\ndeclare function item(index: any): any;\ndeclare function resizeTo(x?: number, y?: number): void;\ndeclare function createPopup(arguments?: any): MSPopupWindow;\ndeclare function toStaticHTML(html: string): string;\ndeclare function execScript(code: string, language?: string): any;\ndeclare function msWriteProfilerMark(profilerMarkName: string): void;\ndeclare function moveTo(x?: number, y?: number): void;\ndeclare function moveBy(x?: number, y?: number): void;\ndeclare function showHelp(url: string, helpArg?: any, features?: string): void;\ndeclare var performance: any;\ndeclare var outerWidth: number;\ndeclare var pageXOffset: number;\ndeclare var innerWidth: number;\ndeclare var pageYOffset: number;\ndeclare var screenY: number;\ndeclare var outerHeight: number;\ndeclare var screen: Screen;\ndeclare var innerHeight: number;\ndeclare var screenX: number;\ndeclare function scroll(x?: number, y?: number): void;\ndeclare function scrollBy(x?: number, y?: number): void;\ndeclare function scrollTo(x?: number, y?: number): void;\ndeclare var styleMedia: StyleMedia;\ndeclare var document: Document;\ndeclare function removeEventListener(type: string, listener: EventListener, useCapture?: bool): void;\ndeclare function addEventListener(type: string, listener: EventListener, useCapture?: bool): void;\ndeclare function dispatchEvent(evt: Event): bool;\ndeclare var localStorage: Storage;\ndeclare var sessionStorage: Storage;\ndeclare function clearTimeout(handle: number): void;\ndeclare function setTimeout(expression: any, msec?: number, language?: any): number;\ndeclare function clearInterval(handle: number): void;\ndeclare function setInterval(expression: any, msec?: number, language?: any): number;\n\n\n/////////////////////////////\n/// IE10 DOM APIs \n/////////////////////////////\n\ninterface HTMLBodyElement {\n    onpopstate: (ev: PopStateEvent) => any;\n}\n\ninterface MSGestureEvent extends UIEvent {\n    offsetY: number;\n    translationY: number;\n    velocityExpansion: number;\n    velocityY: number;\n    velocityAngular: number;\n    translationX: number;\n    velocityX: number;\n    hwTimestamp: number;\n    offsetX: number;\n    screenX: number;\n    rotation: number;\n    expansion: number;\n    clientY: number;\n    screenY: number;\n    scale: number;\n    gestureObject: any;\n    clientX: number;\n    initGestureEvent(typeArg: string, canBubbleArg: bool, cancelableArg: bool, viewArg: AbstractView, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, offsetXArg: number, offsetYArg: number, translationXArg: number, translationYArg: number, scaleArg: number, expansionArg: number, rotationArg: number, velocityXArg: number, velocityYArg: number, velocityExpansionArg: number, velocityAngularArg: number, hwTimestampArg: number): void;\n    MSGESTURE_FLAG_BEGIN: number;\n    MSGESTURE_FLAG_END: number;\n    MSGESTURE_FLAG_CANCEL: number;\n    MSGESTURE_FLAG_INERTIA: number;\n    MSGESTURE_FLAG_NONE: number;\n}\ndeclare var MSGestureEvent: {\n    prototype: MSGestureEvent;\n    new(): MSGestureEvent;\n    MSGESTURE_FLAG_BEGIN: number;\n    MSGESTURE_FLAG_END: number;\n    MSGESTURE_FLAG_CANCEL: number;\n    MSGESTURE_FLAG_INERTIA: number;\n    MSGESTURE_FLAG_NONE: number;\n}\n\ninterface HTMLAnchorElement {\n    text: string;\n}\n\ninterface HTMLInputElement {\n    validationMessage: string;\n    files: FileList;\n    max: string;\n    formTarget: string;\n    willValidate: bool;\n    step: string;\n    autofocus: bool;\n    required: bool;\n    formEnctype: string;\n    valueAsNumber: number;\n    placeholder: string;\n    formMethod: string;\n    list: HTMLElement;\n    autocomplete: string;\n    min: string;\n    formAction: string;\n    pattern: string;\n    validity: ValidityState;\n    formNoValidate: string;\n    multiple: bool;\n    checkValidity(): bool;\n    stepDown(n?: number): void;\n    stepUp(n?: number): void;\n    setCustomValidity(error: string): void;\n}\n\ninterface ErrorEvent extends Event {\n    colno: number;\n    filename: string;\n    lineno: number;\n    message: string;\n    initErrorEvent(typeArg: string, canBubbleArg: bool, cancelableArg: bool, messageArg: string, filenameArg: string, linenoArg: number): void;\n}\ndeclare var ErrorEvent: {\n    prototype: ErrorEvent;\n    new(): ErrorEvent;\n}\n\ninterface SVGFilterElement extends SVGElement, SVGUnitTypes, SVGStylable, SVGLangSpace, SVGURIReference {\n    y: SVGAnimatedLength;\n    width: SVGAnimatedLength;\n    filterResX: SVGAnimatedInteger;\n    filterUnits: SVGAnimatedEnumeration;\n    primitiveUnits: SVGAnimatedEnumeration;\n    x: SVGAnimatedLength;\n    height: SVGAnimatedLength;\n    filterResY: SVGAnimatedInteger;\n    setFilterRes(filterResX: number, filterResY: number): void;\n}\ndeclare var SVGFilterElement: {\n    prototype: SVGFilterElement;\n    new(): SVGFilterElement;\n}\n\ninterface TrackEvent extends Event {\n    track: any;\n}\ndeclare var TrackEvent: {\n    prototype: TrackEvent;\n    new(): TrackEvent;\n}\n\ninterface SVGFEMergeNodeElement extends SVGElement {\n    in1: SVGAnimatedString;\n}\ndeclare var SVGFEMergeNodeElement: {\n    prototype: SVGFEMergeNodeElement;\n    new(): SVGFEMergeNodeElement;\n}\n\ninterface SVGFEFloodElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n}\ndeclare var SVGFEFloodElement: {\n    prototype: SVGFEFloodElement;\n    new(): SVGFEFloodElement;\n}\n\ninterface MSElementExtensions {\n    msRegionOverflow: string;\n    onmspointerdown: (ev: any) => any;\n    onmsgotpointercapture: (ev: any) => any;\n    onmsgesturedoubletap: (ev: any) => any;\n    onmspointerhover: (ev: any) => any;\n    onmsgesturehold: (ev: any) => any;\n    onmspointermove: (ev: any) => any;\n    onmsgesturechange: (ev: any) => any;\n    onmsgesturestart: (ev: any) => any;\n    onmspointercancel: (ev: any) => any;\n    onmsgestureend: (ev: any) => any;\n    onmsgesturetap: (ev: any) => any;\n    onmspointerout: (ev: any) => any;\n    onmsinertiastart: (ev: any) => any;\n    onmslostpointercapture: (ev: any) => any;\n    onmspointerover: (ev: any) => any;\n    msContentZoomFactor: number;\n    onmspointerup: (ev: any) => any;\n    msGetRegionContent(): MSRangeCollection;\n    msReleasePointerCapture(pointerId: number): void;\n    msSetPointerCapture(pointerId: number): void;\n}\ndeclare var MSElementExtensions: {\n    prototype: MSElementExtensions;\n    new(): MSElementExtensions;\n}\n\ninterface MSCSSScrollTranslationProperties {\n    msScrollTranslation: string;\n}\n\ninterface MSGesture {\n    target: Element;\n    addPointer(pointerId: number): void;\n    stop(): void;\n}\ndeclare var MSGesture: {\n    prototype: MSGesture;\n    new (): MSGesture;\n}\n\ninterface TextTrackCue extends EventTarget {\n    onenter: (ev: Event) => any;\n    track: TextTrack;\n    endTime: number;\n    text: string;\n    pauseOnExit: bool;\n    id: string;\n    startTime: number;\n    onexit: (ev: Event) => any;\n    getCueAsHTML(): DocumentFragment;\n}\ndeclare var TextTrackCue: {\n    prototype: TextTrackCue;\n    new(): TextTrackCue;\n}\n\ninterface MSHTMLDocumentViewExtensions {\n    msCSSOMElementFloatMetrics: bool;\n    msElementsFromPoint(x: number, y: number): NodeList;\n    msElementsFromRect(left: number, top: number, width: number, height: number): NodeList;\n}\ndeclare var MSHTMLDocumentViewExtensions: {\n    prototype: MSHTMLDocumentViewExtensions;\n    new(): MSHTMLDocumentViewExtensions;\n}\n\ninterface MSStreamReader extends MSBaseReader {\n    error: DOMError;\n    readAsArrayBuffer(stream: MSStream, size?: number): void;\n    readAsBlob(stream: MSStream, size?: number): void;\n    readAsDataURL(stream: MSStream, size?: number): void;\n    readAsText(stream: MSStream, encoding?: string, size?: number): void;\n}\ndeclare var MSStreamReader: {\n    prototype: MSStreamReader;\n    new (): MSStreamReader;\n}\n\ninterface CSSFlexibleBoxProperties {\n    msFlex: string;\n    msFlexDirection: string;\n    msFlexNegative: string;\n    msFlexPack: string;\n    msFlexWrap: string;\n    msFlexItemAlign: string;\n    msFlexOrder: string;\n    msFlexPositive: string;\n    msFlexAlign: string;\n    msFlexFlow: string;\n    msFlexPreferredSize: string;\n    msFlexLinePack: string;\n}\n\ninterface DOMTokenList {\n    length: number;\n    contains(token: string): bool;\n    remove(token: string): void;\n    toggle(token: string): bool;\n    add(token: string): void;\n    item(index: number): string;\n    [index: number]: string;\n    toString(): string;\n}\ndeclare var DOMTokenList: {\n    prototype: DOMTokenList;\n    new(): DOMTokenList;\n}\n\ninterface EventException {\n    name: string;\n}\n\ninterface SVGFEFuncAElement extends SVGComponentTransferFunctionElement {\n}\ndeclare var SVGFEFuncAElement: {\n    prototype: SVGFEFuncAElement;\n    new(): SVGFEFuncAElement;\n}\n\ninterface Performance {\n    now(): number;\n}\n\ninterface SVGFETileElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    in1: SVGAnimatedString;\n}\ndeclare var SVGFETileElement: {\n    prototype: SVGFETileElement;\n    new(): SVGFETileElement;\n}\n\ninterface SVGFEBlendElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    in2: SVGAnimatedString;\n    mode: SVGAnimatedEnumeration;\n    in1: SVGAnimatedString;\n    SVG_FEBLEND_MODE_DARKEN: number;\n    SVG_FEBLEND_MODE_UNKNOWN: number;\n    SVG_FEBLEND_MODE_MULTIPLY: number;\n    SVG_FEBLEND_MODE_NORMAL: number;\n    SVG_FEBLEND_MODE_SCREEN: number;\n    SVG_FEBLEND_MODE_LIGHTEN: number;\n}\ndeclare var SVGFEBlendElement: {\n    prototype: SVGFEBlendElement;\n    new(): SVGFEBlendElement;\n    SVG_FEBLEND_MODE_DARKEN: number;\n    SVG_FEBLEND_MODE_UNKNOWN: number;\n    SVG_FEBLEND_MODE_MULTIPLY: number;\n    SVG_FEBLEND_MODE_NORMAL: number;\n    SVG_FEBLEND_MODE_SCREEN: number;\n    SVG_FEBLEND_MODE_LIGHTEN: number;\n}\n\ninterface WindowTimers extends WindowTimersExtension {\n}\ndeclare var WindowTimers: {\n    prototype: WindowTimers;\n    new(): WindowTimers;\n}\n\ninterface CSSStyleDeclaration extends CSS2DTransformsProperties, CSSTransitionsProperties, CSSFontsProperties, MSCSSHighContrastProperties, CSSGridProperties, CSSAnimationsProperties, MSCSSContentZoomProperties, MSCSSScrollTranslationProperties, MSCSSTouchManipulationProperties, CSSFlexibleBoxProperties, MSCSSPositionedFloatsProperties, MSCSSRegionProperties, MSCSSSelectionBoundaryProperties, CSSMultiColumnProperties, CSSTextProperties, CSS3DTransformsProperties {\n}\n\ninterface MessageChannel {\n    port2: MessagePort;\n    port1: MessagePort;\n}\ndeclare var MessageChannel: {\n    prototype: MessageChannel;\n    new (): MessageChannel;\n}\n\ninterface SVGFEMergeElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n}\ndeclare var SVGFEMergeElement: {\n    prototype: SVGFEMergeElement;\n    new(): SVGFEMergeElement;\n}\n\ninterface Navigator extends MSFileSaver {\n}\n\ninterface TransitionEvent extends Event {\n    propertyName: string;\n    elapsedTime: number;\n    initTransitionEvent(typeArg: string, canBubbleArg: bool, cancelableArg: bool, propertyNameArg: string, elapsedTimeArg: number): void;\n}\ndeclare var TransitionEvent: {\n    prototype: TransitionEvent;\n    new(): TransitionEvent;\n}\n\ninterface MediaQueryList {\n    matches: bool;\n    media: string;\n    addListener(listener: MediaQueryListListener): void;\n    removeListener(listener: MediaQueryListListener): void;\n}\ndeclare var MediaQueryList: {\n    prototype: MediaQueryList;\n    new(): MediaQueryList;\n}\n\ninterface DOMError {\n    name: string;\n    toString(): string;\n}\ndeclare var DOMError: {\n    prototype: DOMError;\n    new(): DOMError;\n}\n\ninterface SVGFEPointLightElement extends SVGElement {\n    y: SVGAnimatedNumber;\n    x: SVGAnimatedNumber;\n    z: SVGAnimatedNumber;\n}\ndeclare var SVGFEPointLightElement: {\n    prototype: SVGFEPointLightElement;\n    new(): SVGFEPointLightElement;\n}\n\ninterface CSSFontsProperties {\n    msFontFeatureSettings: string;\n    fontFeatureSettings: string;\n}\n\ninterface CloseEvent extends Event {\n    wasClean: bool;\n    reason: string;\n    code: number;\n    initCloseEvent(typeArg: string, canBubbleArg: bool, cancelableArg: bool, wasCleanArg: bool, codeArg: number, reasonArg: string): void;\n}\ndeclare var CloseEvent: {\n    prototype: CloseEvent;\n    new(): CloseEvent;\n}\n\ninterface WebSocket extends EventTarget {\n    protocol: string;\n    readyState: number;\n    bufferedAmount: number;\n    onopen: (ev: Event) => any;\n    extensions: string;\n    onmessage: (ev: any) => any;\n    onclose: (ev: CloseEvent) => any;\n    onerror: (ev: ErrorEvent) => any;\n    binaryType: string;\n    url: string;\n    close(code?: number, reason?: string): void;\n    send(data: any): void;\n    OPEN: number;\n    CLOSING: number;\n    CONNECTING: number;\n    CLOSED: number;\n}\ndeclare var WebSocket: {\n    prototype: WebSocket;\n    new (url: string): WebSocket;\n    new (url: string, prototcol: string): WebSocket;\n    new (url: string, prototcol: string[]): WebSocket;\n    OPEN: number;\n    CLOSING: number;\n    CONNECTING: number;\n    CLOSED: number;\n}\n\ninterface ProgressEvent extends Event {\n    loaded: number;\n    lengthComputable: bool;\n    total: number;\n    initProgressEvent(typeArg: string, canBubbleArg: bool, cancelableArg: bool, lengthComputableArg: bool, loadedArg: number, totalArg: number): void;\n}\ndeclare var ProgressEvent: {\n    prototype: ProgressEvent;\n    new(): ProgressEvent;\n}\n\ninterface HTMLCanvasElement {\n    msToBlob(): Blob;\n}\n\ninterface IDBObjectStore {\n    indexNames: DOMStringList;\n    name: string;\n    transaction: IDBTransaction;\n    keyPath: string;\n    count(key?: any): IDBRequest;\n    add(value: any, key?: any): IDBRequest;\n    clear(): IDBRequest;\n    createIndex(name: string, keyPath: string, optionalParameters?: any): IDBIndex;\n    put(value: any, key?: any): IDBRequest;\n    openCursor(range?: any, direction?: string): IDBRequest;\n    deleteIndex(indexName: string): void;\n    index(name: string): IDBIndex;\n    get(key: any): IDBRequest;\n    delet(key: any): IDBRequest;\n}\ndeclare var IDBObjectStore: {\n    prototype: IDBObjectStore;\n    new(): IDBObjectStore;\n}\n\ninterface ObjectURLOptions {\n    oneTimeOnly?: bool;\n}\n\ninterface SVGFEGaussianBlurElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    stdDeviationX: SVGAnimatedNumber;\n    in1: SVGAnimatedString;\n    stdDeviationY: SVGAnimatedNumber;\n    setStdDeviation(stdDeviationX: number, stdDeviationY: number): void;\n}\ndeclare var SVGFEGaussianBlurElement: {\n    prototype: SVGFEGaussianBlurElement;\n    new(): SVGFEGaussianBlurElement;\n}\n\ninterface MSHTMLDocumentExtensions {\n    onmspointerdown: (ev: any) => any;\n    onmspointercancel: (ev: any) => any;\n    onmsgesturedoubletap: (ev: any) => any;\n    onmsgesturetap: (ev: any) => any;\n    onmsgestureend: (ev: any) => any;\n    onmspointerout: (ev: any) => any;\n    onmsmanipulationstatechanged: (ev: any) => any;\n    onmsinertiastart: (ev: any) => any;\n    onmspointerhover: (ev: any) => any;\n    onmscontentzoom: (ev: any) => any;\n    onmsgesturehold: (ev: any) => any;\n    onmspointermove: (ev: any) => any;\n    onmspointerover: (ev: any) => any;\n    onmsgesturechange: (ev: any) => any;\n    onmsgesturestart: (ev: any) => any;\n    onmspointerup: (ev: any) => any;\n}\ndeclare var MSHTMLDocumentExtensions: {\n    prototype: MSHTMLDocumentExtensions;\n    new(): MSHTMLDocumentExtensions;\n}\n\ninterface MSCSSSelectionBoundaryProperties {\n    msUserSelect: string;\n}\n\ninterface SVGFilterPrimitiveStandardAttributes extends SVGStylable {\n    y: SVGAnimatedLength;\n    width: SVGAnimatedLength;\n    x: SVGAnimatedLength;\n    height: SVGAnimatedLength;\n    result: SVGAnimatedString;\n}\n\ninterface IDBVersionChangeEvent extends Event {\n    newVersion: number;\n    oldVersion: number;\n}\ndeclare var IDBVersionChangeEvent: {\n    prototype: IDBVersionChangeEvent;\n    new(): IDBVersionChangeEvent;\n}\n\ninterface IDBIndex {\n    unique: bool;\n    name: string;\n    keyPath: string;\n    objectStore: IDBObjectStore;\n    count(key?: any): IDBRequest;\n    getKey(key: any): IDBRequest;\n    openKeyCursor(range?: IDBKeyRange, direction?: string): IDBRequest;\n    get(key: any): IDBRequest;\n    openCursor(range?: IDBKeyRange, direction?: string): IDBRequest;\n}\ndeclare var IDBIndex: {\n    prototype: IDBIndex;\n    new(): IDBIndex;\n}\n\ninterface FileList {\n    length: number;\n    item(index: number): File;\n    [index: number]: File;\n}\ndeclare var FileList: {\n    prototype: FileList;\n    new(): FileList;\n}\n\ninterface IDBCursor {\n    source: any;\n    direction: string;\n    key: any;\n    primaryKey: any;\n    advance(count: number): void;\n    delet(): IDBRequest;\n    continu(key?: any): void;\n    update(value: any): IDBRequest;\n}\ndeclare var IDBCursor: {\n    prototype: IDBCursor;\n    new(): IDBCursor;\n}\n\ninterface CSSAnimationsProperties {\n    animationFillMode: string;\n    msAnimationDirection: string;\n    msAnimationDelay: string;\n    msAnimationFillMode: string;\n    animationIterationCount: string;\n    msAnimationPlayState: string;\n    msAnimationIterationCount: string;\n    animationDelay: string;\n    animationTimingFunction: string;\n    msAnimation: string;\n    animation: string;\n    animationDirection: string;\n    animationDuration: string;\n    animationName: string;\n    animationPlayState: string;\n    msAnimationTimingFunction: string;\n    msAnimationName: string;\n    msAnimationDuration: string;\n}\n\ninterface SVGFESpecularLightingElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    kernelUnitLengthY: SVGAnimatedNumber;\n    surfaceScale: SVGAnimatedNumber;\n    specularExponent: SVGAnimatedNumber;\n    in1: SVGAnimatedString;\n    kernelUnitLengthX: SVGAnimatedNumber;\n    specularConstant: SVGAnimatedNumber;\n}\ndeclare var SVGFESpecularLightingElement: {\n    prototype: SVGFESpecularLightingElement;\n    new(): SVGFESpecularLightingElement;\n}\n\ninterface File extends Blob {\n    lastModifiedDate: any;\n    name: string;\n}\ndeclare var File: {\n    prototype: File;\n    new(): File;\n}\n\ninterface URL {\n    revokeObjectURL(url: string): void;\n    createObjectURL(object: any, options?: ObjectURLOptions): string;\n}\ndeclare var URL: URL;\n\ninterface RangeException {\n    name: string;\n}\n\ninterface IDBCursorWithValue extends IDBCursor {\n    value: any;\n}\ndeclare var IDBCursorWithValue: {\n    prototype: IDBCursorWithValue;\n    new(): IDBCursorWithValue;\n}\n\ninterface HTMLTextAreaElement {\n    validationMessage: string;\n    autofocus: bool;\n    validity: ValidityState;\n    required: bool;\n    maxLength: number;\n    willValidate: bool;\n    placeholder: string;\n    checkValidity(): bool;\n    setCustomValidity(error: string): void;\n}\n\ninterface XMLHttpRequestEventTarget extends EventTarget {\n    onprogress: (ev: ProgressEvent) => any;\n    onerror: (ev: ErrorEvent) => any;\n    onload: (ev: any) => any;\n    ontimeout: (ev: any) => any;\n    onabort: (ev: any) => any;\n    onloadstart: (ev: any) => any;\n    onloadend: (ev: ProgressEvent) => any;\n}\ndeclare var XMLHttpRequestEventTarget: {\n    prototype: XMLHttpRequestEventTarget;\n    new(): XMLHttpRequestEventTarget;\n}\n\ninterface IDBEnvironment {\n    msIndexedDB: IDBFactory;\n    indexedDB: IDBFactory;\n}\n\ninterface AudioTrackList extends EventTarget {\n    length: number;\n    onchange: (ev: any) => any;\n    onaddtrack: (ev: TrackEvent) => any;\n    getTrackById(id: string): AudioTrack;\n    item(index: number): AudioTrack;\n    [index: number]: AudioTrack;\n}\ndeclare var AudioTrackList: {\n    prototype: AudioTrackList;\n    new(): AudioTrackList;\n}\n\ninterface MSBaseReader extends EventTarget {\n    onprogress: (ev: ProgressEvent) => any;\n    readyState: number;\n    onabort: (ev: any) => any;\n    onloadend: (ev: ProgressEvent) => any;\n    onerror: (ev: ErrorEvent) => any;\n    onload: (ev: any) => any;\n    onloadstart: (ev: any) => any;\n    result: any;\n    abort(): void;\n    LOADING: number;\n    EMPTY: number;\n    DONE: number;\n}\n\ninterface History {\n    state: any;\n    replaceState(statedata: any, title: string, url?: string): void;\n    pushState(statedata: any, title: string, url?: string): void;\n}\n\ninterface MSProtocol {\n    protocol: string;\n}\ndeclare var MSProtocol: {\n    prototype: MSProtocol;\n    new(): MSProtocol;\n}\n\ninterface SVGFEMorphologyElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    operator: SVGAnimatedEnumeration;\n    radiusX: SVGAnimatedNumber;\n    radiusY: SVGAnimatedNumber;\n    in1: SVGAnimatedString;\n    SVG_MORPHOLOGY_OPERATOR_UNKNOWN: number;\n    SVG_MORPHOLOGY_OPERATOR_ERODE: number;\n    SVG_MORPHOLOGY_OPERATOR_DILATE: number;\n}\ndeclare var SVGFEMorphologyElement: {\n    prototype: SVGFEMorphologyElement;\n    new(): SVGFEMorphologyElement;\n    SVG_MORPHOLOGY_OPERATOR_UNKNOWN: number;\n    SVG_MORPHOLOGY_OPERATOR_ERODE: number;\n    SVG_MORPHOLOGY_OPERATOR_DILATE: number;\n}\n\ninterface HTMLSelectElement {\n    validationMessage: string;\n    autofocus: bool;\n    validity: ValidityState;\n    required: bool;\n    willValidate: bool;\n    checkValidity(): bool;\n    setCustomValidity(error: string): void;\n}\n\ninterface CSSTransitionsProperties {\n    transition: string;\n    transitionDelay: string;\n    transitionDuration: string;\n    msTransitionTimingFunction: string;\n    msTransition: string;\n    msTransitionDuration: string;\n    transitionTimingFunction: string;\n    msTransitionDelay: string;\n    transitionProperty: string;\n    msTransitionProperty: string;\n}\n\ninterface SVGFEFuncRElement extends SVGComponentTransferFunctionElement {\n}\ndeclare var SVGFEFuncRElement: {\n    prototype: SVGFEFuncRElement;\n    new(): SVGFEFuncRElement;\n}\n\ninterface CSSRule {\n    KEYFRAMES_RULE: number;\n    KEYFRAME_RULE: number;\n    VIEWPORT_RULE: number;\n}\n//declare var CSSRule: {\n//    KEYFRAMES_RULE: number;\n//    KEYFRAME_RULE: number;\n//    VIEWPORT_RULE: number;\n//}\n\ninterface WindowTimersExtension {\n    msSetImmediate(expression: any, ...args: any[]): number;\n    clearImmediate(handle: number): void;\n    msClearImmediate(handle: number): void;\n    setImmediate(expression: any, ...args: any[]): number;\n}\n\ninterface SVGFEDisplacementMapElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    in2: SVGAnimatedString;\n    xChannelSelector: SVGAnimatedEnumeration;\n    yChannelSelector: SVGAnimatedEnumeration;\n    scale: SVGAnimatedNumber;\n    in1: SVGAnimatedString;\n    SVG_CHANNEL_B: number;\n    SVG_CHANNEL_R: number;\n    SVG_CHANNEL_G: number;\n    SVG_CHANNEL_UNKNOWN: number;\n    SVG_CHANNEL_A: number;\n}\ndeclare var SVGFEDisplacementMapElement: {\n    prototype: SVGFEDisplacementMapElement;\n    new(): SVGFEDisplacementMapElement;\n    SVG_CHANNEL_B: number;\n    SVG_CHANNEL_R: number;\n    SVG_CHANNEL_G: number;\n    SVG_CHANNEL_UNKNOWN: number;\n    SVG_CHANNEL_A: number;\n}\n\ninterface MSCSSContentZoomProperties {\n    msContentZoomLimit: string;\n    msContentZooming: string;\n    msContentZoomSnapType: string;\n    msContentZoomLimitMax: any;\n    msContentZoomSnapPoints: string;\n    msContentZoomSnap: string;\n    msContentZoomLimitMin: any;\n    msContentZoomChaining: string;\n}\n\ninterface AnimationEvent extends Event {\n    animationName: string;\n    elapsedTime: number;\n    initAnimationEvent(typeArg: string, canBubbleArg: bool, cancelableArg: bool, animationNameArg: string, elapsedTimeArg: number): void;\n}\ndeclare var AnimationEvent: {\n    prototype: AnimationEvent;\n    new(): AnimationEvent;\n}\n\ninterface SVGComponentTransferFunctionElement extends SVGElement {\n    tableValues: SVGAnimatedNumberList;\n    slope: SVGAnimatedNumber;\n    type: SVGAnimatedEnumeration;\n    exponent: SVGAnimatedNumber;\n    amplitude: SVGAnimatedNumber;\n    intercept: SVGAnimatedNumber;\n    offset: SVGAnimatedNumber;\n    SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN: number;\n    SVG_FECOMPONENTTRANSFER_TYPE_TABLE: number;\n    SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY: number;\n    SVG_FECOMPONENTTRANSFER_TYPE_GAMMA: number;\n    SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE: number;\n    SVG_FECOMPONENTTRANSFER_TYPE_LINEAR: number;\n}\ndeclare var SVGComponentTransferFunctionElement: {\n    prototype: SVGComponentTransferFunctionElement;\n    new(): SVGComponentTransferFunctionElement;\n    SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN: number;\n    SVG_FECOMPONENTTRANSFER_TYPE_TABLE: number;\n    SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY: number;\n    SVG_FECOMPONENTTRANSFER_TYPE_GAMMA: number;\n    SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE: number;\n    SVG_FECOMPONENTTRANSFER_TYPE_LINEAR: number;\n}\n\ninterface MSRangeCollection {\n    length: number;\n    item(index: number): Range;\n    [index: number]: Range;\n}\ndeclare var MSRangeCollection: {\n    prototype: MSRangeCollection;\n    new(): MSRangeCollection;\n}\n\ninterface MSHTMLElementExtensions {\n    onmscontentzoom: (ev: any) => any;\n    onmsmanipulationstatechanged: (ev: any) => any;\n}\ndeclare var MSHTMLElementExtensions: {\n    prototype: MSHTMLElementExtensions;\n    new(): MSHTMLElementExtensions;\n}\n\ninterface MSCSSPositionedFloatsProperties {\n    msWrapMargin: any;\n    msWrapFlow: string;\n}\n\ninterface SVGException {\n    name: string;\n}\n\ninterface SVGFEDistantLightElement extends SVGElement {\n    azimuth: SVGAnimatedNumber;\n    elevation: SVGAnimatedNumber;\n}\ndeclare var SVGFEDistantLightElement: {\n    prototype: SVGFEDistantLightElement;\n    new(): SVGFEDistantLightElement;\n}\n\ninterface MSCSSRegionProperties {\n    msFlowFrom: string;\n    msFlowInto: string;\n    msWrapThrough: string;\n}\n\ninterface SVGFEFuncBElement extends SVGComponentTransferFunctionElement {\n}\ndeclare var SVGFEFuncBElement: {\n    prototype: SVGFEFuncBElement;\n    new(): SVGFEFuncBElement;\n}\n\ninterface IDBKeyRange {\n    upper: any;\n    upperOpen: bool;\n    lower: any;\n    lowerOpen: bool;\n    bound(lower: any, upper: any, lowerOpen?: bool, upperOpen?: bool): IDBKeyRange;\n    only(value: any): IDBKeyRange;\n    lowerBound(bound: any, open?: bool): IDBKeyRange;\n    upperBound(bound: any, open?: bool): IDBKeyRange;\n}\ndeclare var IDBKeyRange: {\n    prototype: IDBKeyRange;\n    new(): IDBKeyRange;\n}\n\ninterface WindowConsole {\n    console: Console;\n}\n\ninterface SVG1_1Properties {\n    floodOpacity: string;\n    floodColor: string;\n    filter: string;\n    lightingColor: string;\n    enableBackground: string;\n    colorInterpolationFilters: string;\n}\ndeclare var SVG1_1Properties: {\n    prototype: SVG1_1Properties;\n    new(): SVG1_1Properties;\n}\n\ninterface IDBTransaction extends EventTarget {\n    oncomplete: (ev: Event) => any;\n    db: IDBDatabase;\n    mode: string;\n    error: DOMError;\n    onerror: (ev: ErrorEvent) => any;\n    onabort: (ev: any) => any;\n    abort(): void;\n    objectStore(name: string): IDBObjectStore;\n}\ndeclare var IDBTransaction: {\n    prototype: IDBTransaction;\n    new(): IDBTransaction;\n}\n\ninterface MSWindowExtensions {\n    onmspointerdown: (ev: any) => any;\n    onmspointercancel: (ev: any) => any;\n    onmsgesturedoubletap: (ev: any) => any;\n    onmsgestureend: (ev: any) => any;\n    onmsgesturetap: (ev: any) => any;\n    onmspointerout: (ev: any) => any;\n    onmspointerhover: (ev: any) => any;\n    onmsinertiastart: (ev: any) => any;\n    onmspointermove: (ev: any) => any;\n    onmsgesturehold: (ev: any) => any;\n    onmspointerover: (ev: any) => any;\n    onmsgesturechange: (ev: any) => any;\n    onmsgesturestart: (ev: any) => any;\n    onmspointerup: (ev: any) => any;\n    msIsStaticHTML(html: string): bool;\n}\ndeclare var MSWindowExtensions: {\n    prototype: MSWindowExtensions;\n    new(): MSWindowExtensions;\n}\n\ninterface AudioTrack {\n    kind: string;\n    language: string;\n    id: string;\n    label: string;\n    enabled: bool;\n}\ndeclare var AudioTrack: {\n    prototype: AudioTrack;\n    new(): AudioTrack;\n}\n\ninterface SVGFEConvolveMatrixElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    orderY: SVGAnimatedInteger;\n    kernelUnitLengthY: SVGAnimatedNumber;\n    orderX: SVGAnimatedInteger;\n    preserveAlpha: SVGAnimatedBoolean;\n    kernelMatrix: SVGAnimatedNumberList;\n    edgeMode: SVGAnimatedEnumeration;\n    kernelUnitLengthX: SVGAnimatedNumber;\n    bias: SVGAnimatedNumber;\n    targetX: SVGAnimatedInteger;\n    targetY: SVGAnimatedInteger;\n    divisor: SVGAnimatedNumber;\n    in1: SVGAnimatedString;\n    SVG_EDGEMODE_WRAP: number;\n    SVG_EDGEMODE_DUPLICATE: number;\n    SVG_EDGEMODE_UNKNOWN: number;\n    SVG_EDGEMODE_NONE: number;\n}\ndeclare var SVGFEConvolveMatrixElement: {\n    prototype: SVGFEConvolveMatrixElement;\n    new(): SVGFEConvolveMatrixElement;\n    SVG_EDGEMODE_WRAP: number;\n    SVG_EDGEMODE_DUPLICATE: number;\n    SVG_EDGEMODE_UNKNOWN: number;\n    SVG_EDGEMODE_NONE: number;\n}\n\ninterface TextTrackCueList {\n    length: number;\n    item(index: number): TextTrackCue;\n    [index: number]: TextTrackCue;\n    getCueById(id: string): TextTrackCue;\n}\ndeclare var TextTrackCueList: {\n    prototype: TextTrackCueList;\n    new(): TextTrackCueList;\n}\n\ninterface CSSKeyframesRule extends CSSRule {\n    name: string;\n    cssRules: CSSRuleList;\n    findRule(rule: string): CSSKeyframeRule;\n    deleteRule(rule: string): void;\n    appendRule(rule: string): void;\n}\ndeclare var CSSKeyframesRule: {\n    prototype: CSSKeyframesRule;\n    new(): CSSKeyframesRule;\n}\n\ninterface MSCSSTouchManipulationProperties {\n    msScrollSnapPointsY: string;\n    msOverflowStyle: string;\n    msScrollLimitXMax: any;\n    msScrollSnapType: string;\n    msScrollSnapPointsX: string;\n    msScrollLimitYMax: any;\n    msScrollSnapY: string;\n    msScrollLimitXMin: any;\n    msScrollLimitYMin: any;\n    msScrollChaining: string;\n    msTouchAction: string;\n    msScrollSnapX: string;\n    msScrollLimit: string;\n    msScrollRails: string;\n    msTouchSelect: string;\n}\n\ninterface Window extends WindowAnimationTiming, WindowBase64, IDBEnvironment, WindowConsole {\n    onpopstate: (ev: PopStateEvent) => any;\n    applicationCache: ApplicationCache;\n    matchMedia(mediaQuery: string): MediaQueryList;\n    msMatchMedia(mediaQuery: string): MediaQueryList;\n}\n\ninterface SVGFETurbulenceElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    baseFrequencyX: SVGAnimatedNumber;\n    numOctaves: SVGAnimatedInteger;\n    type: SVGAnimatedEnumeration;\n    baseFrequencyY: SVGAnimatedNumber;\n    stitchTiles: SVGAnimatedEnumeration;\n    seed: SVGAnimatedNumber;\n    SVG_STITCHTYPE_UNKNOWN: number;\n    SVG_STITCHTYPE_NOSTITCH: number;\n    SVG_TURBULENCE_TYPE_UNKNOWN: number;\n    SVG_TURBULENCE_TYPE_TURBULENCE: number;\n    SVG_TURBULENCE_TYPE_FRACTALNOISE: number;\n    SVG_STITCHTYPE_STITCH: number;\n}\ndeclare var SVGFETurbulenceElement: {\n    prototype: SVGFETurbulenceElement;\n    new(): SVGFETurbulenceElement;\n    SVG_STITCHTYPE_UNKNOWN: number;\n    SVG_STITCHTYPE_NOSTITCH: number;\n    SVG_TURBULENCE_TYPE_UNKNOWN: number;\n    SVG_TURBULENCE_TYPE_TURBULENCE: number;\n    SVG_TURBULENCE_TYPE_FRACTALNOISE: number;\n    SVG_STITCHTYPE_STITCH: number;\n}\n\ninterface TextTrackList {\n    length: number;\n    item(index: number): TextTrack;\n    [index: number]: TextTrack;\n}\ndeclare var TextTrackList: {\n    prototype: TextTrackList;\n    new(): TextTrackList;\n}\n\ninterface WindowAnimationTiming {\n    animationStartTime: number;\n    msAnimationStartTime: number;\n    msCancelRequestAnimationFrame(handle: number): void;\n    cancelAnimationFrame(handle: number): void;\n    requestAnimationFrame(callback: FrameRequestCallback): number;\n    msRequestAnimationFrame(callback: FrameRequestCallback): number;\n}\n\ninterface SVGFEFuncGElement extends SVGComponentTransferFunctionElement {\n}\ndeclare var SVGFEFuncGElement: {\n    prototype: SVGFEFuncGElement;\n    new(): SVGFEFuncGElement;\n}\n\ninterface SVGFEColorMatrixElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    in1: SVGAnimatedString;\n    type: SVGAnimatedEnumeration;\n    values: SVGAnimatedNumberList;\n    SVG_FECOLORMATRIX_TYPE_SATURATE: number;\n    SVG_FECOLORMATRIX_TYPE_UNKNOWN: number;\n    SVG_FECOLORMATRIX_TYPE_MATRIX: number;\n    SVG_FECOLORMATRIX_TYPE_HUEROTATE: number;\n    SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA: number;\n}\ndeclare var SVGFEColorMatrixElement: {\n    prototype: SVGFEColorMatrixElement;\n    new(): SVGFEColorMatrixElement;\n    SVG_FECOLORMATRIX_TYPE_SATURATE: number;\n    SVG_FECOLORMATRIX_TYPE_UNKNOWN: number;\n    SVG_FECOLORMATRIX_TYPE_MATRIX: number;\n    SVG_FECOLORMATRIX_TYPE_HUEROTATE: number;\n    SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA: number;\n}\n\ninterface Console {\n    info(): void;\n    info(message: any, ...optionalParams: any[]): void;\n    profile(reportName?: string): bool;\n    assert(): void;\n    assert(test: bool): void;\n    assert(test: bool, message: any, ...optionalParams: any[]): void;\n    msIsIndependentlyComposed(element: Element): bool;\n    clear(): bool;\n    dir(): bool;\n    dir(value: any, ...optionalParams: any[]): bool;\n    warn(): void;\n    warn(message: any, ...optionalParams: any[]): void;\n    error(): void;\n    error(message: any, ...optionalParams: any[]): void;\n    log(): void;\n    log(message: any, ...optionalParams: any[]): void;\n    profileEnd(): bool;\n}\ndeclare var Console: {\n    prototype: Console;\n    new(): Console;\n}\n\ninterface SVGFESpotLightElement extends SVGElement {\n    pointsAtY: SVGAnimatedNumber;\n    y: SVGAnimatedNumber;\n    limitingConeAngle: SVGAnimatedNumber;\n    specularExponent: SVGAnimatedNumber;\n    x: SVGAnimatedNumber;\n    pointsAtZ: SVGAnimatedNumber;\n    z: SVGAnimatedNumber;\n    pointsAtX: SVGAnimatedNumber;\n}\ndeclare var SVGFESpotLightElement: {\n    prototype: SVGFESpotLightElement;\n    new(): SVGFESpotLightElement;\n}\n\ninterface DocumentVisibility {\n    msHidden: bool;\n    msVisibilityState: string;\n    visibilityState: string;\n    hidden: bool;\n}\n\ninterface WindowBase64 {\n    btoa(rawString: string): string;\n    atob(encodedString: string): string;\n}\n\ninterface IDBDatabase extends EventTarget {\n    version: string;\n    name: string;\n    objectStoreNames: DOMStringList;\n    onerror: (ev: ErrorEvent) => any;\n    onabort: (ev: any) => any;\n    createObjectStore(name: string, optionalParameters?: any): IDBObjectStore;\n    close(): void;\n    transaction(storeNames: any, mode?: string): IDBTransaction;\n    deleteObjectStore(name: string): void;\n}\ndeclare var IDBDatabase: {\n    prototype: IDBDatabase;\n    new(): IDBDatabase;\n}\n\ninterface MSProtocolsCollection {\n}\ndeclare var MSProtocolsCollection: {\n    prototype: MSProtocolsCollection;\n    new(): MSProtocolsCollection;\n}\n\ninterface DOMStringList {\n    length: number;\n    contains(str: string): bool;\n    item(index: number): string;\n    [index: number]: string;\n}\ndeclare var DOMStringList: {\n    prototype: DOMStringList;\n    new(): DOMStringList;\n}\n\ninterface CSSMultiColumnProperties {\n    breakAfter: string;\n    columnSpan: string;\n    columnRule: string;\n    columnFill: string;\n    columnRuleStyle: string;\n    breakBefore: string;\n    columnCount: any;\n    breakInside: string;\n    columnWidth: any;\n    columns: string;\n    columnRuleColor: any;\n    columnGap: any;\n    columnRuleWidth: any;\n}\n\ninterface IDBOpenDBRequest extends IDBRequest {\n    onupgradeneeded: (ev: IDBVersionChangeEvent) => any;\n    onblocked: (ev: Event) => any;\n}\ndeclare var IDBOpenDBRequest: {\n    prototype: IDBOpenDBRequest;\n    new(): IDBOpenDBRequest;\n}\n\ninterface HTMLButtonElement {\n    validationMessage: string;\n    formTarget: string;\n    willValidate: bool;\n    formAction: string;\n    autofocus: bool;\n    validity: ValidityState;\n    formNoValidate: string;\n    formEnctype: string;\n    formMethod: string;\n    checkValidity(): bool;\n    setCustomValidity(error: string): void;\n}\n\ninterface HTMLProgressElement extends HTMLElement {\n    value: number;\n    max: number;\n    position: number;\n    form: HTMLFormElement;\n}\ndeclare var HTMLProgressElement: {\n    prototype: HTMLProgressElement;\n    new(): HTMLProgressElement;\n}\n\ninterface SVGFEOffsetElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    dy: SVGAnimatedNumber;\n    in1: SVGAnimatedString;\n    dx: SVGAnimatedNumber;\n}\ndeclare var SVGFEOffsetElement: {\n    prototype: SVGFEOffsetElement;\n    new(): SVGFEOffsetElement;\n}\n\ninterface HTMLFormElement {\n    autocomplete: string;\n    noValidate: bool;\n    checkValidity(): bool;\n}\n\ninterface MSUnsafeFunctionCallback {\n    (): any;\n}\n\ninterface Document extends DocumentVisibility {\n}\n\ninterface MessageEvent extends Event {\n    ports: any;\n}\n\ninterface HTMLScriptElement {\n    async: bool;\n}\n\ninterface HTMLMediaElement extends MSHTMLMediaElementExtensions {\n    textTracks: TextTrackList;\n    audioTracks: AudioTrackList;\n}\n\ninterface TextTrack extends EventTarget {\n    language: string;\n    mode: number;\n    readyState: string;\n    activeCues: TextTrackCueList;\n    cues: TextTrackCueList;\n    oncuechange: (ev: Event) => any;\n    kind: string;\n    onload: (ev: any) => any;\n    onerror: (ev: ErrorEvent) => any;\n    label: string;\n    ERROR: number;\n    SHOWING: number;\n    LOADING: number;\n    LOADED: number;\n    NONE: number;\n    HIDDEN: number;\n    DISABLED: number;\n}\ndeclare var TextTrack: {\n    prototype: TextTrack;\n    new(): TextTrack;\n    ERROR: number;\n    SHOWING: number;\n    LOADING: number;\n    LOADED: number;\n    NONE: number;\n    HIDDEN: number;\n    DISABLED: number;\n}\n\ninterface MediaQueryListListener {\n    (mql: MediaQueryList): void;\n}\n\ninterface IDBRequest extends EventTarget {\n    source: any;\n    onsuccess: (ev: Event) => any;\n    error: DOMError;\n    transaction: IDBTransaction;\n    onerror: (ev: ErrorEvent) => any;\n    readyState: string;\n    result: any;\n}\ndeclare var IDBRequest: {\n    prototype: IDBRequest;\n    new(): IDBRequest;\n}\n\ninterface MessagePort extends EventTarget {\n    onmessage: (ev: any) => any;\n    close(): void;\n    postMessage(message: any, ports?: any): void;\n    start(): void;\n}\ndeclare var MessagePort: {\n    prototype: MessagePort;\n    new(): MessagePort;\n}\n\ninterface FileReader extends MSBaseReader {\n    error: DOMError;\n    readAsArrayBuffer(blob: Blob): void;\n    readAsDataURL(blob: Blob): void;\n    readAsText(blob: Blob, encoding?: string): void;\n}\ndeclare var FileReader: {\n    prototype: FileReader;\n    new (): FileReader;\n}\n\ninterface Blob {\n    type: string;\n    size: number;\n    msDetachStream(): any;\n    slice(start?: number, end?: number, contentType?: string): Blob;\n    close(): void;\n    msClose(): void;\n}\ninterface BlobPropertyBag {\n    /** Corresponds to the \'type\' property of the Blob object */\n    type?: string;\n    /** Either \'transparent\' or \'native\' */\n    endings?: string;\n}\ndeclare var Blob: {\n    prototype: Blob;\n    new (blobParts?: any[], options?: BlobPropertyBag): Blob;\n}\n\ninterface ApplicationCache extends EventTarget {\n    status: number;\n    ondownloading: (ev: Event) => any;\n    onprogress: (ev: ProgressEvent) => any;\n    onupdateready: (ev: Event) => any;\n    oncached: (ev: Event) => any;\n    onobsolete: (ev: Event) => any;\n    onerror: (ev: ErrorEvent) => any;\n    onchecking: (ev: Event) => any;\n    onnoupdate: (ev: Event) => any;\n    swapCache(): void;\n    abort(): void;\n    update(): void;\n    CHECKING: number;\n    UNCACHED: number;\n    UPDATEREADY: number;\n    DOWNLOADING: number;\n    IDLE: number;\n    OBSOLETE: number;\n}\ndeclare var ApplicationCache: {\n    prototype: ApplicationCache;\n    new(): ApplicationCache;\n    CHECKING: number;\n    UNCACHED: number;\n    UPDATEREADY: number;\n    DOWNLOADING: number;\n    IDLE: number;\n    OBSOLETE: number;\n}\n\ninterface MSHTMLVideoElementExtensions {\n    msIsStereo3D: bool;\n    msStereo3DPackingMode: string;\n    onMSVideoOptimalLayoutChanged: (ev: any) => any;\n    onMSVideoFrameStepCompleted: (ev: any) => any;\n    msStereo3DRenderMode: string;\n    msIsLayoutOptimalForPlayback: bool;\n    msHorizontalMirror: bool;\n    onMSVideoFormatChanged: (ev: any) => any;\n    msZoom: bool;\n    msInsertVideoEffect(activatableClassId: string, effectRequired: bool, config?: any): void;\n    msSetVideoRectangle(left: number, top: number, right: number, bottom: number): void;\n    msFrameStep(forward: bool): void;\n}\n\ninterface FrameRequestCallback {\n    (time: number): void;\n}\n\ninterface CSS3DTransformsProperties {\n    perspective: string;\n    msBackfaceVisibility: string;\n    perspectiveOrigin: string;\n    transformStyle: string;\n    backfaceVisibility: string;\n    msPerspectiveOrigin: string;\n    msTransformStyle: string;\n    msPerspective: string;\n}\n\ninterface XMLHttpRequest {\n    withCredentials: bool;\n}\n\ninterface PopStateEvent extends Event {\n    state: any;\n    initPopStateEvent(typeArg: string, canBubbleArg: bool, cancelableArg: bool, stateArg: any): void;\n}\ndeclare var PopStateEvent: {\n    prototype: PopStateEvent;\n    new(): PopStateEvent;\n}\n\ninterface CSSKeyframeRule extends CSSRule {\n    keyText: string;\n    style: CSSStyleDeclaration;\n}\ndeclare var CSSKeyframeRule: {\n    prototype: CSSKeyframeRule;\n    new(): CSSKeyframeRule;\n}\n\ninterface CSSGridProperties {\n    msGridRows: string;\n    msGridColumnSpan: any;\n    msGridRow: any;\n    msGridRowSpan: any;\n    msGridColumns: string;\n    msGridColumnAlign: string;\n    msGridRowAlign: string;\n    msGridColumn: any;\n}\n\ninterface MSFileSaver {\n    msSaveBlob(blob: any, defaultName?: string): bool;\n    msSaveOrOpenBlob(blob: any, defaultName?: string): bool;\n}\n\ninterface MSStream {\n    type: string;\n    msDetachStream(): any;\n    msClose(): void;\n}\ndeclare var MSStream: {\n    prototype: MSStream;\n    new(): MSStream;\n}\n\ninterface MediaError extends MSMediaErrorExtensions {\n}\n\ninterface HTMLFieldSetElement {\n    validationMessage: string;\n    validity: ValidityState;\n    willValidate: bool;\n    checkValidity(): bool;\n    setCustomValidity(error: string): void;\n}\n\ninterface MSBlobBuilder {\n    append(data: any, endings?: string): void;\n    getBlob(contentType?: string): Blob;\n}\ndeclare var MSBlobBuilder: {\n    prototype: MSBlobBuilder;\n    new (): MSBlobBuilder;\n}\n\ninterface MSRangeExtensions {\n    createContextualFragment(fragment: string): DocumentFragment;\n}\n\ninterface HTMLElement {\n    oncuechange: (ev: Event) => any;\n    spellcheck: bool;\n    classList: DOMTokenList;\n    draggable: bool;\n}\n\ninterface DataTransfer {\n    types: DOMStringList;\n    files: FileList;\n}\n\ninterface DOMSettableTokenList extends DOMTokenList {\n    value: string;\n}\ndeclare var DOMSettableTokenList: {\n    prototype: DOMSettableTokenList;\n    new(): DOMSettableTokenList;\n}\n\ninterface IDBFactory {\n    open(name: string, version?: number): IDBOpenDBRequest;\n    cmp(first: any, second: any): number;\n    deleteDatabase(name: string): IDBOpenDBRequest;\n}\ndeclare var IDBFactory: {\n    prototype: IDBFactory;\n    new(): IDBFactory;\n}\n\ninterface Range extends MSRangeExtensions {\n}\n\ninterface HTMLObjectElement {\n    validationMessage: string;\n    validity: ValidityState;\n    willValidate: bool;\n    checkValidity(): bool;\n    setCustomValidity(error: string): void;\n}\n\ninterface MSPointerEvent extends MouseEvent {\n    width: number;\n    rotation: number;\n    pressure: number;\n    pointerType: number;\n    isPrimary: bool;\n    tiltY: number;\n    height: number;\n    intermediatePoints: any;\n    currentPoint: any;\n    tiltX: number;\n    hwTimestamp: number;\n    pointerId: number;\n    initPointerEvent(typeArg: string, canBubbleArg: bool, cancelableArg: bool, viewArg: AbstractView, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: bool, altKeyArg: bool, shiftKeyArg: bool, metaKeyArg: bool, buttonArg: number, relatedTargetArg: EventTarget, offsetXArg: number, offsetYArg: number, widthArg: number, heightArg: number, pressure: number, rotation: number, tiltX: number, tiltY: number, pointerIdArg: number, pointerType: number, hwTimestampArg: number, isPrimary: bool): void;\n    getCurrentPoint(element: Element): void;\n    getIntermediatePoints(element: Element): void;\n    MSPOINTER_TYPE_PEN: number;\n    MSPOINTER_TYPE_MOUSE: number;\n    MSPOINTER_TYPE_TOUCH: number;\n}\ndeclare var MSPointerEvent: {\n    prototype: MSPointerEvent;\n    new(): MSPointerEvent;\n    MSPOINTER_TYPE_PEN: number;\n    MSPOINTER_TYPE_MOUSE: number;\n    MSPOINTER_TYPE_TOUCH: number;\n}\n\ninterface CSSTextProperties {\n    textShadow: string;\n    msHyphenateLimitLines: any;\n    msHyphens: string;\n    msHyphenateLimitChars: string;\n    msHyphenateLimitZone: any;\n}\n\ninterface CSS2DTransformsProperties {\n    transform: string;\n    transformOrigin: string;\n}\n\ninterface DOMException {\n    name: string;\n    INVALID_NODE_TYPE_ERR: number;\n    DATA_CLONE_ERR: number;\n    TIMEOUT_ERR: number;\n}\n//declare var DOMException: {\n//    INVALID_NODE_TYPE_ERR: number;\n//    DATA_CLONE_ERR: number;\n//    TIMEOUT_ERR: number;\n//}\n\ninterface MSCSSHighContrastProperties {\n    msHighContrastAdjust: string;\n}\n\ninterface MSManipulationEvent extends UIEvent {\n    lastState: number;\n    currentState: number;\n    initMSManipulationEvent(typeArg: string, canBubbleArg: bool, cancelableArg: bool, viewArg: AbstractView, detailArg: number, lastState: number, currentState: number): void;\n    MS_MANIPULATION_STATE_STOPPED: number;\n    MS_MANIPULATION_STATE_ACTIVE: number;\n    MS_MANIPULATION_STATE_INERTIA: number;\n}\ndeclare var MSManipulationEvent: {\n    prototype: MSManipulationEvent;\n    new(): MSManipulationEvent;\n    MS_MANIPULATION_STATE_STOPPED: number;\n    MS_MANIPULATION_STATE_ACTIVE: number;\n    MS_MANIPULATION_STATE_INERTIA: number;\n}\n\ninterface FormData {\n    append(name: any, value: any, blobName?: string): void;\n}\ndeclare var FormData: {\n    prototype: FormData;\n    new (): FormData;\n}\n\ninterface MSHTMLImageElementExtensions {\n    msPlayToPrimary: bool;\n    msPlayToDisabled: bool;\n    msPlayToSource: any;\n}\ndeclare var MSHTMLImageElementExtensions: {\n    prototype: MSHTMLImageElementExtensions;\n    new(): MSHTMLImageElementExtensions;\n}\n\ninterface MSHTMLMediaElementExtensions {\n    msAudioCategory: string;\n    msRealTime: bool;\n    msPlayToPrimary: bool;\n    msPlayToDisabled: bool;\n    msPlayToSource: any;\n    msAudioDeviceType: string;\n    msClearEffects(): void;\n    msSetMediaProtectionManager(mediaProtectionManager?: any): void;\n    msInsertAudioEffect(activatableClassId: string, effectRequired: bool, config?: any): void;\n}\n\ninterface SVGFEImageElement extends SVGElement, SVGLangSpace, SVGFilterPrimitiveStandardAttributes, SVGURIReference {\n    preserveAspectRatio: SVGAnimatedPreserveAspectRatio;\n}\ndeclare var SVGFEImageElement: {\n    prototype: SVGFEImageElement;\n    new(): SVGFEImageElement;\n}\n\ninterface HTMLDataListElement extends HTMLElement {\n    options: HTMLCollection;\n}\ndeclare var HTMLDataListElement: {\n    prototype: HTMLDataListElement;\n    new(): HTMLDataListElement;\n}\n\ninterface AbstractWorker extends EventTarget {\n    onerror: (ev: ErrorEvent) => any;\n}\n\ninterface SVGFECompositeElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    operator: SVGAnimatedEnumeration;\n    in2: SVGAnimatedString;\n    k2: SVGAnimatedNumber;\n    k1: SVGAnimatedNumber;\n    k3: SVGAnimatedNumber;\n    in1: SVGAnimatedString;\n    k4: SVGAnimatedNumber;\n    SVG_FECOMPOSITE_OPERATOR_OUT: number;\n    SVG_FECOMPOSITE_OPERATOR_OVER: number;\n    SVG_FECOMPOSITE_OPERATOR_XOR: number;\n    SVG_FECOMPOSITE_OPERATOR_ARITHMETIC: number;\n    SVG_FECOMPOSITE_OPERATOR_UNKNOWN: number;\n    SVG_FECOMPOSITE_OPERATOR_IN: number;\n    SVG_FECOMPOSITE_OPERATOR_ATOP: number;\n}\ndeclare var SVGFECompositeElement: {\n    prototype: SVGFECompositeElement;\n    new(): SVGFECompositeElement;\n    SVG_FECOMPOSITE_OPERATOR_OUT: number;\n    SVG_FECOMPOSITE_OPERATOR_OVER: number;\n    SVG_FECOMPOSITE_OPERATOR_XOR: number;\n    SVG_FECOMPOSITE_OPERATOR_ARITHMETIC: number;\n    SVG_FECOMPOSITE_OPERATOR_UNKNOWN: number;\n    SVG_FECOMPOSITE_OPERATOR_IN: number;\n    SVG_FECOMPOSITE_OPERATOR_ATOP: number;\n}\n\ninterface ValidityState {\n    customError: bool;\n    valueMissing: bool;\n    stepMismatch: bool;\n    rangeUnderflow: bool;\n    rangeOverflow: bool;\n    typeMismatch: bool;\n    patternMismatch: bool;\n    tooLong: bool;\n    valid: bool;\n}\ndeclare var ValidityState: {\n    prototype: ValidityState;\n    new(): ValidityState;\n}\n\ninterface HTMLVideoElement extends MSHTMLVideoElementExtensions {\n}\n\ninterface HTMLTrackElement extends HTMLElement {\n    kind: string;\n    src: string;\n    srclang: string;\n    track: TextTrack;\n    label: string;\n    defaul: bool;\n}\ndeclare var HTMLTrackElement: {\n    prototype: HTMLTrackElement;\n    new(): HTMLTrackElement;\n}\n\ninterface MSApp {\n    createFileFromStorageFile(storageFile: any): File;\n    createBlobFromRandomAccessStream(type: string, seeker: any): Blob;\n    createStreamFromInputStream(type: string, inputStream: any): MSStream;\n    terminateApp(exceptionObject: any): void;\n    createDataPackage(object: any): any;\n    execUnsafeLocalFunction(unsafeFunction: MSUnsafeFunctionCallback): any;\n    getHtmlPrintDocumentSource(htmlDoc: any, printTemplate?: string): any;\n    addPublicLocalApplicationUri(uri: string): void;\n    createDataPackageFromSelection(): any;\n}\ndeclare var MSApp: MSApp;\n\ninterface MSXMLHttpRequestExtensions {\n    response: any;\n    onprogress: (ev: ProgressEvent) => any;\n    onabort: (ev: any) => any;\n    responseType: string;\n    onloadend: (ev: ProgressEvent) => any;\n    upload: XMLHttpRequestEventTarget;\n    onerror: (ev: ErrorEvent) => any;\n    onloadstart: (ev: any) => any;\n}\ndeclare var MSXMLHttpRequestExtensions: {\n    prototype: MSXMLHttpRequestExtensions;\n    new(): MSXMLHttpRequestExtensions;\n}\n\ninterface SVGFEDiffuseLightingElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    kernelUnitLengthY: SVGAnimatedNumber;\n    surfaceScale: SVGAnimatedNumber;\n    in1: SVGAnimatedString;\n    kernelUnitLengthX: SVGAnimatedNumber;\n    diffuseConstant: SVGAnimatedNumber;\n}\ndeclare var SVGFEDiffuseLightingElement: {\n    prototype: SVGFEDiffuseLightingElement;\n    new(): SVGFEDiffuseLightingElement;\n}\n\ninterface SVGFEComponentTransferElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    in1: SVGAnimatedString;\n}\ndeclare var SVGFEComponentTransferElement: {\n    prototype: SVGFEComponentTransferElement;\n    new(): SVGFEComponentTransferElement;\n}\n\ninterface MSCSSMatrix {\n    m24: number;\n    m34: number;\n    a: number;\n    d: number;\n    m32: number;\n    m41: number;\n    m11: number;\n    f: number;\n    e: number;\n    m23: number;\n    m14: number;\n    m33: number;\n    m22: number;\n    m21: number;\n    c: number;\n    m12: number;\n    b: number;\n    m42: number;\n    m31: number;\n    m43: number;\n    m13: number;\n    m44: number;\n    multiply(secondMatrix: MSCSSMatrix): MSCSSMatrix;\n    skewY(angle: number): MSCSSMatrix;\n    setMatrixValue(value: string): void;\n    inverse(): MSCSSMatrix;\n    rotateAxisAngle(x: number, y: number, z: number, angle: number): MSCSSMatrix;\n    toString(): string;\n    rotate(angleX: number, angleY?: number, angleZ?: number): MSCSSMatrix;\n    translate(x: number, y: number, z?: number): MSCSSMatrix;\n    scale(scaleX: number, scaleY?: number, scaleZ?: number): MSCSSMatrix;\n    skewX(angle: number): MSCSSMatrix;\n}\ndeclare var MSCSSMatrix: {\n    prototype: MSCSSMatrix;\n    new (text?: string): MSCSSMatrix;\n}\n\ninterface Worker extends AbstractWorker {\n    onmessage: (ev: any) => any;\n    postMessage(message: any, ports?: any): void;\n    terminate(): void;\n}\ndeclare var Worker: {\n    prototype: Worker;\n    new (stringUrl: string): Worker;\n}\n\ninterface HTMLIFrameElement {\n    sandbox: DOMSettableTokenList;\n}\n\ninterface MSMediaErrorExtensions {\n    msExtendedCode: number;\n}\n\ninterface MSNavigatorAbilities {\n    msProtocols: MSProtocolsCollection;\n    msMaxTouchPoints: number;\n    msPointerEnabled: bool;\n    msManipulationViewsEnabled: bool;\n}\ndeclare var MSNavigatorAbilities: {\n    prototype: MSNavigatorAbilities;\n    new(): MSNavigatorAbilities;\n}\n\ndeclare var onpopstate: (ev: PopStateEvent) => any;\ndeclare var applicationCache: ApplicationCache;\ndeclare function matchMedia(mediaQuery: string): MediaQueryList;\ndeclare function msMatchMedia(mediaQuery: string): MediaQueryList;\ndeclare var animationStartTime: number;\ndeclare var msAnimationStartTime: number;\ndeclare function msCancelRequestAnimationFrame(handle: number): void;\ndeclare function cancelAnimationFrame(handle: number): void;\ndeclare function requestAnimationFrame(callback: FrameRequestCallback): number;\ndeclare function msRequestAnimationFrame(callback: FrameRequestCallback): number;\ndeclare function btoa(rawString: string): string;\ndeclare function atob(encodedString: string): string;\ndeclare var msIndexedDB: IDBFactory;\ndeclare var indexedDB: IDBFactory;\ndeclare var console: Console;\n\n\n/////////////////////////////\n/// WorkerGlobalScope APIs \n/////////////////////////////\n// TODO: These are only available in a Web Worker - should be in a seperate lib file\ndeclare function importScripts(...urls: string[]): void;\n\n\n/////////////////////////////\n/// Windows Script Host APIS\n/////////////////////////////\ndeclare var ActiveXObject: { new (s: string): any; };\n\ninterface ITextWriter {\n    Write(s: string): void;\n    WriteLine(s: string): void;\n    Close(): void;\n}\n\ndeclare var WScript : {\n    Echo(s);\n    StdErr: ITextWriter;\n    StdOut: ITextWriter;\n    Arguments: { length: number; Item(n: number): string; };\n    ScriptFullName: string;\n    Quit(exitCode?: number);\n}\n\n";