{
    "isDeclaration": false,
    "languageVersion": "EcmaScript5",
    "parseOptions": {
        "allowAutomaticSemicolonInsertion": true
    },
    "sourceUnit": {
        "kind": "SourceUnit",
        "fullWidth": 508,
        "moduleElements": [
            {
                "kind": "ExpressionStatement",
                "fullWidth": 479,
                "expression": {
                    "kind": "StringLiteral",
                    "width": 12,
                    "fullWidth": 477,
                    "text": "\"use strict\"",
                    "hasLeadingTrivia": true,
                    "hasLeadingComment": true,
                    "hasLeadingNewLine": true,
                    "leadingTrivia": [
                        {
                            "kind": "SingleLineCommentTrivia",
                            "text": "// Copyright 2009 the Sputnik authors.  All rights reserved."
                        },
                        {
                            "kind": "NewLineTrivia",
                            "text": "\n"
                        },
                        {
                            "kind": "SingleLineCommentTrivia",
                            "text": "// This code is governed by the BSD license found in the LICENSE file."
                        },
                        {
                            "kind": "NewLineTrivia",
                            "text": "\n"
                        },
                        {
                            "kind": "NewLineTrivia",
                            "text": "\n"
                        },
                        {
                            "kind": "MultiLineCommentTrivia",
                            "text": "/**\n * The production Block { } in strict code can't contain function\n * declaration;\n *\n * @path bestPractice/Sbp_A1_T1.js\n * @description Trying to declare function at the Block statement\n * @onlyStrict\n * @negative SyntaxError\n * @bestPractice http://wiki.ecmascript.org/doku.php?id=conventions:no_non_standard_strict_decls\n */"
                        },
                        {
                            "kind": "NewLineTrivia",
                            "text": "\n"
                        },
                        {
                            "kind": "NewLineTrivia",
                            "text": "\n"
                        }
                    ]
                },
                "semicolonToken": {
                    "kind": "SemicolonToken",
                    "width": 1,
                    "fullWidth": 2,
                    "text": ";",
                    "hasTrailingTrivia": true,
                    "hasTrailingNewLine": true,
                    "trailingTrivia": [
                        {
                            "kind": "NewLineTrivia",
                            "text": "\n"
                        }
                    ]
                }
            },
            {
                "kind": "Block",
                "fullWidth": 28,
                "parsedInStrictMode": true,
                "openBraceToken": {
                    "kind": "OpenBraceToken",
                    "width": 1,
                    "fullWidth": 2,
                    "text": "{",
                    "hasTrailingTrivia": true,
                    "hasTrailingNewLine": true,
                    "trailingTrivia": [
                        {
                            "kind": "NewLineTrivia",
                            "text": "\n"
                        }
                    ]
                },
                "statements": [
                    {
                        "kind": "FunctionDeclaration",
                        "fullWidth": 24,
                        "parsedInStrictMode": true,
                        "modifiers": [],
                        "functionKeyword": {
                            "kind": "FunctionKeyword",
                            "width": 8,
                            "fullWidth": 13,
                            "text": "function",
                            "hasLeadingTrivia": true,
                            "hasTrailingTrivia": true,
                            "leadingTrivia": [
                                {
                                    "kind": "WhitespaceTrivia",
                                    "text": "    "
                                }
                            ],
                            "trailingTrivia": [
                                {
                                    "kind": "WhitespaceTrivia",
                                    "text": " "
                                }
                            ]
                        },
                        "identifier": {
                            "kind": "IdentifierName",
                            "width": 6,
                            "text": "__func",
                            "valueText": "__func"
                        },
                        "callSignature": {
                            "kind": "CallSignature",
                            "fullWidth": 2,
                            "parsedInStrictMode": true,
                            "parameterList": {
                                "kind": "ParameterList",
                                "fullWidth": 2,
                                "parsedInStrictMode": true,
                                "openParenToken": {
                                    "kind": "OpenParenToken",
                                    "width": 1,
                                    "text": "("
                                },
                                "parameters": [],
                                "closeParenToken": {
                                    "kind": "CloseParenToken",
                                    "width": 1,
                                    "text": ")"
                                }
                            }
                        },
                        "block": {
                            "kind": "Block",
                            "fullWidth": 3,
                            "parsedInStrictMode": true,
                            "openBraceToken": {
                                "kind": "OpenBraceToken",
                                "width": 1,
                                "text": "{"
                            },
                            "statements": [],
                            "closeBraceToken": {
                                "kind": "CloseBraceToken",
                                "width": 1,
                                "fullWidth": 2,
                                "text": "}",
                                "hasTrailingTrivia": true,
                                "hasTrailingNewLine": true,
                                "trailingTrivia": [
                                    {
                                        "kind": "NewLineTrivia",
                                        "text": "\n"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "closeBraceToken": {
                    "kind": "CloseBraceToken",
                    "width": 1,
                    "fullWidth": 2,
                    "text": "}",
                    "hasTrailingTrivia": true,
                    "hasTrailingNewLine": true,
                    "trailingTrivia": [
                        {
                            "kind": "NewLineTrivia",
                            "text": "\n"
                        }
                    ]
                }
            }
        ],
        "endOfFileToken": {
            "kind": "EndOfFileToken",
            "width": 0,
            "fullWidth": 1,
            "text": "",
            "hasLeadingTrivia": true,
            "hasLeadingNewLine": true,
            "leadingTrivia": [
                {
                    "kind": "NewLineTrivia",
                    "text": "\n"
                }
            ]
        }
    },
    "lineMap": {
        "lineStarts": [
            0,
            61,
            132,
            133,
            137,
            203,
            219,
            222,
            257,
            323,
            338,
            363,
            460,
            464,
            465,
            479,
            481,
            505,
            507,
            508
        ],
        "length": 508
    }
}