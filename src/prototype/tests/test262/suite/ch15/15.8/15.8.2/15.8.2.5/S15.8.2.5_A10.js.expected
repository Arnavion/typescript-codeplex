{
    "_sourceUnit": {
        "kind": "SourceUnit",
        "fullWidth": 578,
        "_moduleElements": [
            {
                "kind": "ExpressionStatement",
                "fullWidth": 396,
                "_expression": {
                    "kind": "InvocationExpression",
                    "fullWidth": 394,
                    "_expression": {
                        "kind": "IdentifierName",
                        "width": 8,
                        "fullWidth": 373,
                        "text": "$INCLUDE",
                        "valueText": "$INCLUDE",
                        "hasLeadingTrivia": true,
                        "hasLeadingComment": true,
                        "hasLeadingNewLine": true,
                        "leadingTrivia": [
                            {
                                "kind": "SingleLineCommentTrivia",
                                "text": "// Copyright 2009 the Sputnik authors.  All rights reserved."
                            },
                            {
                                "kind": "NewLineTrivia",
                                "text": "\n"
                            },
                            {
                                "kind": "SingleLineCommentTrivia",
                                "text": "// This code is governed by the BSD license found in the LICENSE file."
                            },
                            {
                                "kind": "NewLineTrivia",
                                "text": "\n"
                            },
                            {
                                "kind": "NewLineTrivia",
                                "text": "\n"
                            },
                            {
                                "kind": "MultiLineCommentTrivia",
                                "text": "/**\n * If y is -0 and x is -0, Math.atan2(y,x) is an implementation-dependent approximation to -PI\n *\n * @path ch15/15.8/15.8.2/15.8.2.5/S15.8.2.5_A10.js\n * @description Checking if Math.atan2(-0,-0) is an approximation to -PI\n */"
                            },
                            {
                                "kind": "NewLineTrivia",
                                "text": "\n"
                            },
                            {
                                "kind": "NewLineTrivia",
                                "text": "\n"
                            }
                        ]
                    },
                    "_argumentList": {
                        "kind": "ArgumentList",
                        "fullWidth": 21,
                        "_openParenToken": {
                            "kind": "OpenParenToken",
                            "width": 1,
                            "text": "("
                        },
                        "_arguments": [
                            {
                                "kind": "StringLiteral",
                                "width": 19,
                                "text": "\"math_precision.js\""
                            }
                        ],
                        "_closeParenToken": {
                            "kind": "CloseParenToken",
                            "width": 1,
                            "text": ")"
                        }
                    }
                },
                "_semicolonToken": {
                    "kind": "SemicolonToken",
                    "width": 1,
                    "fullWidth": 2,
                    "text": ";",
                    "hasTrailingTrivia": true,
                    "hasTrailingNewLine": true,
                    "trailingTrivia": [
                        {
                            "kind": "NewLineTrivia",
                            "text": "\n"
                        }
                    ]
                }
            },
            {
                "kind": "ExpressionStatement",
                "fullWidth": 30,
                "_expression": {
                    "kind": "InvocationExpression",
                    "fullWidth": 27,
                    "_expression": {
                        "kind": "IdentifierName",
                        "width": 8,
                        "text": "$INCLUDE",
                        "valueText": "$INCLUDE"
                    },
                    "_argumentList": {
                        "kind": "ArgumentList",
                        "fullWidth": 19,
                        "_openParenToken": {
                            "kind": "OpenParenToken",
                            "width": 1,
                            "text": "("
                        },
                        "_arguments": [
                            {
                                "kind": "StringLiteral",
                                "width": 17,
                                "text": "\"math_isequal.js\""
                            }
                        ],
                        "_closeParenToken": {
                            "kind": "CloseParenToken",
                            "width": 1,
                            "text": ")"
                        }
                    }
                },
                "_semicolonToken": {
                    "kind": "SemicolonToken",
                    "width": 1,
                    "fullWidth": 3,
                    "text": ";",
                    "hasTrailingTrivia": true,
                    "hasTrailingNewLine": true,
                    "trailingTrivia": [
                        {
                            "kind": "WhitespaceTrivia",
                            "text": " "
                        },
                        {
                            "kind": "NewLineTrivia",
                            "text": "\n"
                        }
                    ]
                }
            },
            {
                "kind": "ExpressionStatement",
                "fullWidth": 48,
                "_expression": {
                    "kind": "AssignmentExpression",
                    "fullWidth": 46,
                    "_left": {
                        "kind": "IdentifierName",
                        "width": 1,
                        "fullWidth": 42,
                        "text": "y",
                        "valueText": "y",
                        "hasLeadingTrivia": true,
                        "hasLeadingComment": true,
                        "hasLeadingNewLine": true,
                        "hasTrailingTrivia": true,
                        "leadingTrivia": [
                            {
                                "kind": "WhitespaceTrivia",
                                "text": " "
                            },
                            {
                                "kind": "NewLineTrivia",
                                "text": "\n"
                            },
                            {
                                "kind": "SingleLineCommentTrivia",
                                "text": "// CHECK#1"
                            },
                            {
                                "kind": "NewLineTrivia",
                                "text": "\n"
                            },
                            {
                                "kind": "SingleLineCommentTrivia",
                                "text": "//prec = 0.00000000000001;"
                            },
                            {
                                "kind": "NewLineTrivia",
                                "text": "\n"
                            }
                        ],
                        "trailingTrivia": [
                            {
                                "kind": "WhitespaceTrivia",
                                "text": " "
                            }
                        ]
                    },
                    "_operatorToken": {
                        "kind": "EqualsToken",
                        "width": 1,
                        "fullWidth": 2,
                        "text": "=",
                        "hasTrailingTrivia": true,
                        "trailingTrivia": [
                            {
                                "kind": "WhitespaceTrivia",
                                "text": " "
                            }
                        ]
                    },
                    "_right": {
                        "kind": "NegateExpression",
                        "fullWidth": 2,
                        "_operatorToken": {
                            "kind": "MinusToken",
                            "width": 1,
                            "text": "-"
                        },
                        "_operand": {
                            "kind": "NumericLiteral",
                            "width": 1,
                            "text": "0"
                        }
                    }
                },
                "_semicolonToken": {
                    "kind": "SemicolonToken",
                    "width": 1,
                    "fullWidth": 2,
                    "text": ";",
                    "hasTrailingTrivia": true,
                    "hasTrailingNewLine": true,
                    "trailingTrivia": [
                        {
                            "kind": "NewLineTrivia",
                            "text": "\n"
                        }
                    ]
                }
            },
            {
                "kind": "ExpressionStatement",
                "fullWidth": 8,
                "_expression": {
                    "kind": "AssignmentExpression",
                    "fullWidth": 6,
                    "_left": {
                        "kind": "IdentifierName",
                        "width": 1,
                        "fullWidth": 2,
                        "text": "x",
                        "valueText": "x",
                        "hasTrailingTrivia": true,
                        "trailingTrivia": [
                            {
                                "kind": "WhitespaceTrivia",
                                "text": " "
                            }
                        ]
                    },
                    "_operatorToken": {
                        "kind": "EqualsToken",
                        "width": 1,
                        "fullWidth": 2,
                        "text": "=",
                        "hasTrailingTrivia": true,
                        "trailingTrivia": [
                            {
                                "kind": "WhitespaceTrivia",
                                "text": " "
                            }
                        ]
                    },
                    "_right": {
                        "kind": "NegateExpression",
                        "fullWidth": 2,
                        "_operatorToken": {
                            "kind": "MinusToken",
                            "width": 1,
                            "text": "-"
                        },
                        "_operand": {
                            "kind": "NumericLiteral",
                            "width": 1,
                            "text": "0"
                        }
                    }
                },
                "_semicolonToken": {
                    "kind": "SemicolonToken",
                    "width": 1,
                    "fullWidth": 2,
                    "text": ";",
                    "hasTrailingTrivia": true,
                    "hasTrailingNewLine": true,
                    "trailingTrivia": [
                        {
                            "kind": "NewLineTrivia",
                            "text": "\n"
                        }
                    ]
                }
            },
            {
                "kind": "IfStatement",
                "fullWidth": 95,
                "_ifKeyword": {
                    "kind": "IfKeyword",
                    "width": 2,
                    "fullWidth": 3,
                    "text": "if",
                    "hasTrailingTrivia": true,
                    "trailingTrivia": [
                        {
                            "kind": "WhitespaceTrivia",
                            "text": " "
                        }
                    ]
                },
                "_openParenToken": {
                    "kind": "OpenParenToken",
                    "width": 1,
                    "text": "("
                },
                "_condition": {
                    "kind": "LogicalNotExpression",
                    "fullWidth": 35,
                    "_operatorToken": {
                        "kind": "ExclamationToken",
                        "width": 1,
                        "text": "!"
                    },
                    "_operand": {
                        "kind": "InvocationExpression",
                        "fullWidth": 34,
                        "_expression": {
                            "kind": "IdentifierName",
                            "width": 7,
                            "text": "isEqual",
                            "valueText": "isEqual"
                        },
                        "_argumentList": {
                            "kind": "ArgumentList",
                            "fullWidth": 27,
                            "_openParenToken": {
                                "kind": "OpenParenToken",
                                "width": 1,
                                "text": "("
                            },
                            "_arguments": [
                                {
                                    "kind": "InvocationExpression",
                                    "fullWidth": 15,
                                    "_expression": {
                                        "kind": "MemberAccessExpression",
                                        "fullWidth": 10,
                                        "_expression": {
                                            "kind": "IdentifierName",
                                            "width": 4,
                                            "text": "Math",
                                            "valueText": "Math"
                                        },
                                        "_dotToken": {
                                            "kind": "DotToken",
                                            "width": 1,
                                            "text": "."
                                        },
                                        "_name": {
                                            "kind": "IdentifierName",
                                            "width": 5,
                                            "text": "atan2",
                                            "valueText": "atan2"
                                        }
                                    },
                                    "_argumentList": {
                                        "kind": "ArgumentList",
                                        "fullWidth": 5,
                                        "_openParenToken": {
                                            "kind": "OpenParenToken",
                                            "width": 1,
                                            "text": "("
                                        },
                                        "_arguments": [
                                            {
                                                "kind": "IdentifierName",
                                                "width": 1,
                                                "text": "y",
                                                "valueText": "y"
                                            },
                                            {
                                                "kind": "CommaToken",
                                                "width": 1,
                                                "text": ","
                                            },
                                            {
                                                "kind": "IdentifierName",
                                                "width": 1,
                                                "text": "x",
                                                "valueText": "x"
                                            }
                                        ],
                                        "_closeParenToken": {
                                            "kind": "CloseParenToken",
                                            "width": 1,
                                            "text": ")"
                                        }
                                    }
                                },
                                {
                                    "kind": "CommaToken",
                                    "width": 1,
                                    "fullWidth": 2,
                                    "text": ",",
                                    "hasTrailingTrivia": true,
                                    "trailingTrivia": [
                                        {
                                            "kind": "WhitespaceTrivia",
                                            "text": " "
                                        }
                                    ]
                                },
                                {
                                    "kind": "NegateExpression",
                                    "fullWidth": 8,
                                    "_operatorToken": {
                                        "kind": "MinusToken",
                                        "width": 1,
                                        "text": "-"
                                    },
                                    "_operand": {
                                        "kind": "MemberAccessExpression",
                                        "fullWidth": 7,
                                        "_expression": {
                                            "kind": "IdentifierName",
                                            "width": 4,
                                            "text": "Math",
                                            "valueText": "Math"
                                        },
                                        "_dotToken": {
                                            "kind": "DotToken",
                                            "width": 1,
                                            "text": "."
                                        },
                                        "_name": {
                                            "kind": "IdentifierName",
                                            "width": 2,
                                            "text": "PI",
                                            "valueText": "PI"
                                        }
                                    }
                                }
                            ],
                            "_closeParenToken": {
                                "kind": "CloseParenToken",
                                "width": 1,
                                "text": ")"
                            }
                        }
                    }
                },
                "_closeParenToken": {
                    "kind": "CloseParenToken",
                    "width": 1,
                    "fullWidth": 2,
                    "text": ")",
                    "hasTrailingTrivia": true,
                    "hasTrailingNewLine": true,
                    "trailingTrivia": [
                        {
                            "kind": "NewLineTrivia",
                            "text": "\n"
                        }
                    ]
                },
                "_statement": {
                    "kind": "ExpressionStatement",
                    "fullWidth": 54,
                    "_expression": {
                        "kind": "InvocationExpression",
                        "fullWidth": 52,
                        "_expression": {
                            "kind": "IdentifierName",
                            "width": 6,
                            "fullWidth": 7,
                            "text": "$ERROR",
                            "valueText": "$ERROR",
                            "hasLeadingTrivia": true,
                            "leadingTrivia": [
                                {
                                    "kind": "WhitespaceTrivia",
                                    "text": "\t"
                                }
                            ]
                        },
                        "_argumentList": {
                            "kind": "ArgumentList",
                            "fullWidth": 45,
                            "_openParenToken": {
                                "kind": "OpenParenToken",
                                "width": 1,
                                "text": "("
                            },
                            "_arguments": [
                                {
                                    "kind": "StringLiteral",
                                    "width": 43,
                                    "text": "\"#1: !isEqual(Math.atan2(-0,-0), -Math.PI)\""
                                }
                            ],
                            "_closeParenToken": {
                                "kind": "CloseParenToken",
                                "width": 1,
                                "text": ")"
                            }
                        }
                    },
                    "_semicolonToken": {
                        "kind": "SemicolonToken",
                        "width": 1,
                        "fullWidth": 2,
                        "text": ";",
                        "hasTrailingTrivia": true,
                        "hasTrailingNewLine": true,
                        "trailingTrivia": [
                            {
                                "kind": "NewLineTrivia",
                                "text": "\n"
                            }
                        ]
                    }
                }
            }
        ],
        "_endOfFileToken": {
            "kind": "EndOfFileToken",
            "width": 0,
            "fullWidth": 1,
            "text": "",
            "hasLeadingTrivia": true,
            "hasLeadingNewLine": true,
            "leadingTrivia": [
                {
                    "kind": "NewLineTrivia",
                    "text": "\n"
                }
            ]
        }
    }
}