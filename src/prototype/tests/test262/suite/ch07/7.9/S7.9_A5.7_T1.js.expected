{
    "_sourceUnit": {
        "kind": "SourceUnit",
        "fullWidth": 549,
        "hasZeroWidthToken": true,
        "_moduleElements": [
            {
                "kind": "VariableStatement",
                "fullWidth": 531,
                "_variableDeclaration": {
                    "kind": "VariableDeclaration",
                    "fullWidth": 529,
                    "_varKeyword": {
                        "kind": "VarKeyword",
                        "width": 3,
                        "fullWidth": 521,
                        "text": "var",
                        "hasLeadingTrivia": true,
                        "hasLeadingComment": true,
                        "hasLeadingNewLine": true,
                        "hasTrailingTrivia": true,
                        "leadingTrivia": [
                            {
                                "kind": "SingleLineCommentTrivia",
                                "text": "// Copyright 2009 the Sputnik authors.  All rights reserved."
                            },
                            {
                                "kind": "NewLineTrivia",
                                "text": "\n"
                            },
                            {
                                "kind": "SingleLineCommentTrivia",
                                "text": "// This code is governed by the BSD license found in the LICENSE file."
                            },
                            {
                                "kind": "NewLineTrivia",
                                "text": "\n"
                            },
                            {
                                "kind": "NewLineTrivia",
                                "text": "\n"
                            },
                            {
                                "kind": "MultiLineCommentTrivia",
                                "text": "/**\n * Since LineTerminator(LT) between Postfix Increment/Decrement Operator(I/DO) and operand is not allowed, two IO(just as two DO and their combination)\n * between two references separated by [LT] after automatic semicolon insertion lead to syntax error\n *\n * @path ch07/7.9/S7.9_A5.7_T1.js\n * @description Try use Variable1 \\n ++ \\n ++ \\n Variable2 construction\n * @negative\n */"
                            },
                            {
                                "kind": "NewLineTrivia",
                                "text": "\n"
                            },
                            {
                                "kind": "NewLineTrivia",
                                "text": "\n"
                            }
                        ],
                        "trailingTrivia": [
                            {
                                "kind": "WhitespaceTrivia",
                                "text": " "
                            }
                        ]
                    },
                    "_variableDeclarators": [
                        {
                            "kind": "VariableDeclarator",
                            "fullWidth": 3,
                            "_identifier": {
                                "kind": "IdentifierName",
                                "width": 1,
                                "text": "x",
                                "valueText": "x"
                            },
                            "_equalsValueClause": {
                                "kind": "EqualsValueClause",
                                "fullWidth": 2,
                                "_equalsToken": {
                                    "kind": "EqualsToken",
                                    "width": 1,
                                    "text": "="
                                },
                                "_value": {
                                    "kind": "NumericLiteral",
                                    "width": 1,
                                    "text": "0"
                                }
                            }
                        },
                        {
                            "kind": "CommaToken",
                            "width": 1,
                            "fullWidth": 2,
                            "text": ",",
                            "hasTrailingTrivia": true,
                            "trailingTrivia": [
                                {
                                    "kind": "WhitespaceTrivia",
                                    "text": " "
                                }
                            ]
                        },
                        {
                            "kind": "VariableDeclarator",
                            "fullWidth": 3,
                            "_identifier": {
                                "kind": "IdentifierName",
                                "width": 1,
                                "text": "y",
                                "valueText": "y"
                            },
                            "_equalsValueClause": {
                                "kind": "EqualsValueClause",
                                "fullWidth": 2,
                                "_equalsToken": {
                                    "kind": "EqualsToken",
                                    "width": 1,
                                    "text": "="
                                },
                                "_value": {
                                    "kind": "NumericLiteral",
                                    "width": 1,
                                    "text": "0"
                                }
                            }
                        }
                    ]
                },
                "_semicolonToken": {
                    "kind": "SemicolonToken",
                    "width": 1,
                    "fullWidth": 2,
                    "text": ";",
                    "hasTrailingTrivia": true,
                    "hasTrailingNewLine": true,
                    "trailingTrivia": [
                        {
                            "kind": "NewLineTrivia",
                            "text": "\n"
                        }
                    ]
                }
            },
            {
                "kind": "VariableStatement",
                "fullWidth": 9,
                "hasZeroWidthToken": true,
                "_variableDeclaration": {
                    "kind": "VariableDeclaration",
                    "fullWidth": 9,
                    "_varKeyword": {
                        "kind": "VarKeyword",
                        "width": 3,
                        "fullWidth": 4,
                        "text": "var",
                        "hasTrailingTrivia": true,
                        "trailingTrivia": [
                            {
                                "kind": "WhitespaceTrivia",
                                "text": " "
                            }
                        ]
                    },
                    "_variableDeclarators": [
                        {
                            "kind": "VariableDeclarator",
                            "fullWidth": 5,
                            "_identifier": {
                                "kind": "IdentifierName",
                                "width": 1,
                                "text": "z",
                                "valueText": "z"
                            },
                            "_equalsValueClause": {
                                "kind": "EqualsValueClause",
                                "fullWidth": 4,
                                "_equalsToken": {
                                    "kind": "EqualsToken",
                                    "width": 1,
                                    "fullWidth": 2,
                                    "text": "=",
                                    "hasTrailingTrivia": true,
                                    "hasTrailingNewLine": true,
                                    "trailingTrivia": [
                                        {
                                            "kind": "NewLineTrivia",
                                            "text": "\n"
                                        }
                                    ]
                                },
                                "_value": {
                                    "kind": "IdentifierName",
                                    "width": 1,
                                    "fullWidth": 2,
                                    "text": "x",
                                    "valueText": "x",
                                    "hasTrailingTrivia": true,
                                    "hasTrailingNewLine": true,
                                    "trailingTrivia": [
                                        {
                                            "kind": "NewLineTrivia",
                                            "text": "\n"
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                },
                "_semicolonToken": {
                    "kind": "SemicolonToken",
                    "width": 0,
                    "text": ""
                }
            },
            {
                "kind": "ExpressionStatement",
                "fullWidth": 8,
                "hasZeroWidthToken": true,
                "_expression": {
                    "kind": "PreIncrementExpression",
                    "fullWidth": 8,
                    "_operatorToken": {
                        "kind": "PlusPlusToken",
                        "width": 2,
                        "fullWidth": 3,
                        "text": "++",
                        "hasTrailingTrivia": true,
                        "hasTrailingNewLine": true,
                        "trailingTrivia": [
                            {
                                "kind": "NewLineTrivia",
                                "text": "\n"
                            }
                        ]
                    },
                    "_operand": {
                        "kind": "PreIncrementExpression",
                        "fullWidth": 5,
                        "_operatorToken": {
                            "kind": "PlusPlusToken",
                            "width": 2,
                            "fullWidth": 3,
                            "text": "++",
                            "hasTrailingTrivia": true,
                            "hasTrailingNewLine": true,
                            "trailingTrivia": [
                                {
                                    "kind": "NewLineTrivia",
                                    "text": "\n"
                                }
                            ]
                        },
                        "_operand": {
                            "kind": "IdentifierName",
                            "width": 1,
                            "fullWidth": 2,
                            "text": "y",
                            "valueText": "y",
                            "hasTrailingTrivia": true,
                            "hasTrailingNewLine": true,
                            "trailingTrivia": [
                                {
                                    "kind": "NewLineTrivia",
                                    "text": "\n"
                                }
                            ]
                        }
                    }
                },
                "_semicolonToken": {
                    "kind": "SemicolonToken",
                    "width": 0,
                    "text": ""
                }
            }
        ],
        "_endOfFileToken": {
            "kind": "EndOfFileToken",
            "width": 0,
            "fullWidth": 1,
            "text": "",
            "hasLeadingTrivia": true,
            "hasLeadingNewLine": true,
            "leadingTrivia": [
                {
                    "kind": "NewLineTrivia",
                    "text": "\n"
                }
            ]
        }
    }
}